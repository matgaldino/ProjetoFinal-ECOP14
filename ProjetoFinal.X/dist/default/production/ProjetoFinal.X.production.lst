

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Dec 08 11:51:47 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1
    61                           	psect	text50,global,reloc=2,class=CODE,delta=1
    62                           	psect	text51,global,reloc=2,class=CODE,delta=1
    63                           	psect	text52,global,reloc=2,class=CODE,delta=1
    64                           	psect	text53,global,reloc=2,class=CODE,delta=1
    65                           	psect	text54,global,reloc=2,class=CODE,delta=1
    66                           	psect	text55,global,reloc=2,class=CODE,delta=1
    67                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text57,global,reloc=2,class=CODE,delta=1
    69                           	psect	text58,global,reloc=2,class=CODE,delta=1
    70                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text61,global,reloc=2,class=CODE,delta=1
    73                           	psect	text62,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    78  0000                     
    79                           ; Version 2.20
    80                           ; Generated 12/02/2020 GMT
    81                           ; 
    82                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F4520 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataCOMRAM
   115  002B58                     __pidataCOMRAM:
   116                           	callstack 0
   117                           
   118                           ;initializer for iniSimbolos@F2416
   119  002B58  04                 	db	4
   120  002B59  0E                 	db	14
   121  002B5A  15                 	db	21
   122  002B5B  04                 	db	4
   123  002B5C  04                 	db	4
   124  002B5D  15                 	db	21
   125  002B5E  0E                 	db	14
   126  002B5F  04                 	db	4
   127                           
   128                           ;initializer for iniSimbolos@F2414
   129  002B60  04                 	db	4
   130  002B61  04                 	db	4
   131  002B62  04                 	db	4
   132  002B63  04                 	db	4
   133  002B64  04                 	db	4
   134  002B65  15                 	db	21
   135  002B66  0E                 	db	14
   136  002B67  04                 	db	4
   137                           
   138                           ;initializer for iniSimbolos@F2412
   139  002B68  04                 	db	4
   140  002B69  0E                 	db	14
   141  002B6A  15                 	db	21
   142  002B6B  04                 	db	4
   143  002B6C  04                 	db	4
   144  002B6D  04                 	db	4
   145  002B6E  04                 	db	4
   146  002B6F  04                 	db	4
   147                           
   148                           ;initializer for leTeclado@tecla
   149  002B70  0010               	dw	16
   150                           
   151                           	psect	smallconst
   152  000600                     __psmallconst:
   153                           	callstack 0
   154  000600  00                 	db	0
   155  000601                     _valor:
   156                           	callstack 0
   157  000601  3F                 	db	63
   158  000602  06                 	db	6
   159  000603  5B                 	db	91
   160  000604  4F                 	db	79
   161  000605  66                 	db	102
   162  000606  6D                 	db	109
   163  000607  7D                 	db	125
   164  000608  07                 	db	7
   165  000609  7F                 	db	127
   166  00060A  6F                 	db	111
   167  00060B  77                 	db	119
   168  00060C  7C                 	db	124
   169  00060D  39                 	db	57
   170  00060E  5E                 	db	94
   171  00060F  79                 	db	121
   172  000610  71                 	db	113
   173  000611                     __end_of_valor:
   174                           	callstack 0
   175  000611  55                 	db	85
   176  000612  4C                 	db	76
   177  000613  44                 	db	68
   178  000614  52                 	db	82
   179  000615  53                 	db	83
   180  000616  58                 	db	88
   181  000617  41                 	db	65
   182  000618  42                 	db	66
   183  000619  59                 	db	89
   184  00061A  73                 	db	115
   185  00061B                     __end_of_charKey:
   186                           	callstack 0
   187  0000                     _T2CON	set	4042
   188  0000                     _CCP2CON	set	4026
   189  0000                     _CCPR2L	set	4027
   190  0000                     _PR2	set	4043
   191  0000                     _T0CON	set	4053
   192  0000                     _TMR0L	set	4054
   193  0000                     _TMR0H	set	4055
   194  0000                     _INTCON	set	4082
   195  0000                     _TRISE	set	3990
   196  0000                     _TRISD	set	3989
   197  0000                     _TRISC	set	3988
   198  0000                     _TRISB	set	3987
   199  0000                     _TRISA	set	3986
   200  0000                     _PORTE	set	3972
   201  0000                     _PORTD	set	3971
   202  0000                     _PORTC	set	3970
   203  0000                     _PORTB	set	3969
   204  0000                     _PORTA	set	3968
   205  0000                     _ADRESL	set	4035
   206  0000                     _ADRESH	set	4036
   207  0000                     _ADCON2	set	4032
   208  0000                     _ADCON1	set	4033
   209  0000                     _ADCON0	set	4034
   210  00061B                     STR_9:
   211  00061B  45                 	db	69	;'E'
   212  00061C  73                 	db	115	;'s'
   213  00061D  63                 	db	99	;'c'
   214  00061E  6F                 	db	111	;'o'
   215  00061F  6C                 	db	108	;'l'
   216  000620  68                 	db	104	;'h'
   217  000621  61                 	db	97	;'a'
   218  000622  20                 	db	32
   219  000623  6F                 	db	111	;'o'
   220  000624  20                 	db	32
   221  000625  6D                 	db	109	;'m'
   222  000626  6F                 	db	111	;'o'
   223  000627  64                 	db	100	;'d'
   224  000628  6F                 	db	111	;'o'
   225  000629  3A                 	db	58	;':'
   226  00062A  20                 	db	32
   227  00062B  00                 	db	0
   228  00062C                     STR_10:
   229  00062C  38                 	db	56	;'8'
   230  00062D  2D                 	db	45
   231  00062E  4D                 	db	77	;'M'
   232  00062F  20                 	db	32
   233  000630  35                 	db	53	;'5'
   234  000631  2D                 	db	45
   235  000632  50                 	db	80	;'P'
   236  000633  41                 	db	65	;'A'
   237  000634  51                 	db	81	;'Q'
   238  000635  20                 	db	32
   239  000636  36                 	db	54	;'6'
   240  000637  2D                 	db	45
   241  000638  47                 	db	71	;'G'
   242  000639  72                 	db	114	;'r'
   243  00063A  00                 	db	0
   244  00063B                     STR_3:
   245  00063B  50                 	db	80	;'P'
   246  00063C  72                 	db	114	;'r'
   247  00063D  65                 	db	101	;'e'
   248  00063E  2D                 	db	45
   249  00063F  41                 	db	65	;'A'
   250  000640  71                 	db	113	;'q'
   251  000641  75                 	db	117	;'u'
   252  000642  65                 	db	101	;'e'
   253  000643  63                 	db	99	;'c'
   254  000644  20                 	db	32
   255  000645  00                 	db	0
   256  000646                     STR_8:
   257  000646  20                 	db	32
   258  000647  20                 	db	32
   259  000648  20                 	db	32
   260  000649  20                 	db	32
   261  00064A  20                 	db	32
   262  00064B  20                 	db	32
   263  00064C  46                 	db	70	;'F'
   264  00064D  49                 	db	73	;'I'
   265  00064E  4D                 	db	77	;'M'
   266  00064F  21                 	db	33
   267  000650  00                 	db	0
   268  000651                     STR_5:
   269  000651  4D                 	db	77	;'M'
   270  000652  61                 	db	97	;'a'
   271  000653  6E                 	db	110	;'n'
   272  000654  75                 	db	117	;'u'
   273  000655  61                 	db	97	;'a'
   274  000656  6C                 	db	108	;'l'
   275  000657  20                 	db	32
   276  000658  00                 	db	0
   277  000659                     STR_4:
   278  000659  47                 	db	71	;'G'
   279  00065A  72                 	db	114	;'r'
   280  00065B  69                 	db	105	;'i'
   281  00065C  6C                 	db	108	;'l'
   282  00065D  6C                 	db	108	;'l'
   283  00065E  20                 	db	32
   284  00065F  00                 	db	0
   285  000660                     STR_6:
   286  000660  54                 	db	84	;'T'
   287  000661  45                 	db	69	;'E'
   288  000662  4D                 	db	77	;'M'
   289  000663  50                 	db	80	;'P'
   290  000664  3A                 	db	58	;':'
   291  000665  00                 	db	0
   292  000666                     STR_1:
   293  000666  20                 	db	32
   294  000667  20                 	db	32
   295  000668  20                 	db	32
   296  000669  20                 	db	32
   297  00066A  00                 	db	0
   298  00066B                     STR_7:
   299  00066B  43                 	db	67	;'C'
   300  00066C  00                 	db	0
   301  00066D  00                 	db	0	; dummy byte at the end
   302  0000                     
   303                           ; #config settings
   304                           
   305                           	psect	cinit
   306  0028C2                     __pcinit:
   307                           	callstack 0
   308  0028C2                     start_initialization:
   309                           	callstack 0
   310  0028C2                     __initialization:
   311                           	callstack 0
   312                           
   313                           ; Initialize objects allocated to COMRAM (26 bytes)
   314                           ; load TBLPTR registers with __pidataCOMRAM
   315  0028C2  0E58               	movlw	low __pidataCOMRAM
   316  0028C4  6EF6               	movwf	tblptrl,c
   317  0028C6  0E2B               	movlw	high __pidataCOMRAM
   318  0028C8  6EF7               	movwf	tblptrh,c
   319  0028CA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   320  0028CC  6EF8               	movwf	tblptru,c
   321  0028CE  EE00  F04E         	lfsr	0,__pdataCOMRAM
   322  0028D2  EE10 F01A          	lfsr	1,26
   323  0028D6                     copy_data0:
   324  0028D6  0009               	tblrd		*+
   325  0028D8  CFF5 FFEE          	movff	tablat,postinc0
   326  0028DC  50E5               	movf	postdec1,w,c
   327  0028DE  50E1               	movf	fsr1l,w,c
   328  0028E0  E1FA               	bnz	copy_data0
   329                           
   330                           ; Clear objects allocated to COMRAM (28 bytes)
   331  0028E2  EE00  F032         	lfsr	0,__pbssCOMRAM
   332  0028E6  0E1C               	movlw	28
   333  0028E8                     clear_0:
   334  0028E8  6AEE               	clrf	postinc0,c
   335  0028EA  06E8               	decf	wreg,f,c
   336  0028EC  E1FD               	bnz	clear_0
   337  0028EE                     end_of_initialization:
   338                           	callstack 0
   339  0028EE                     __end_of__initialization:
   340                           	callstack 0
   341  0028EE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   342  0028F0  6EF8               	movwf	tblptru,c
   343  0028F2  0100               	movlb	0
   344  0028F4  EFF9  F00C         	goto	_main	;jump to C main() function
   345                           
   346                           	psect	bssCOMRAM
   347  000032                     __pbssCOMRAM:
   348                           	callstack 0
   349  000032                     _pot:
   350                           	callstack 0
   351  000032                     	ds	4
   352  000036                     temperatura@ant:
   353                           	callstack 0
   354  000036                     	ds	2
   355  000038                     _seg:
   356                           	callstack 0
   357  000038                     	ds	2
   358  00003A                     _min:
   359                           	callstack 0
   360  00003A                     	ds	2
   361  00003C                     kpDebounce@oldRead:
   362                           	callstack 0
   363  00003C                     	ds	2
   364  00003E                     kpDebounce@newRead:
   365                           	callstack 0
   366  00003E                     	ds	2
   367  000040                     _keys:
   368                           	callstack 0
   369  000040                     	ds	2
   370  000042                     _fim:
   371                           	callstack 0
   372  000042                     	ds	1
   373  000043                     _start:
   374                           	callstack 0
   375  000043                     	ds	1
   376  000044                     _resist:
   377                           	callstack 0
   378  000044                     	ds	1
   379  000045                     _state:
   380                           	callstack 0
   381  000045                     	ds	1
   382  000046                     _modo:
   383                           	callstack 0
   384  000046                     	ds	1
   385  000047                     _v3:
   386                           	callstack 0
   387  000047                     	ds	1
   388  000048                     _v2:
   389                           	callstack 0
   390  000048                     	ds	1
   391  000049                     _v1:
   392                           	callstack 0
   393  000049                     	ds	1
   394  00004A                     _v0:
   395                           	callstack 0
   396  00004A                     	ds	1
   397  00004B                     _display:
   398                           	callstack 0
   399  00004B                     	ds	1
   400  00004C                     kpDebounce@tempo:
   401                           	callstack 0
   402  00004C                     	ds	1
   403  00004D                     _started:
   404                           	callstack 0
   405  00004D                     	ds	1
   406                           
   407                           	psect	dataCOMRAM
   408  00004E                     __pdataCOMRAM:
   409                           	callstack 0
   410  00004E                     iniSimbolos@F2416:
   411                           	callstack 0
   412  00004E                     	ds	8
   413  000056                     iniSimbolos@F2414:
   414                           	callstack 0
   415  000056                     	ds	8
   416  00005E                     iniSimbolos@F2412:
   417                           	callstack 0
   418  00005E                     	ds	8
   419  000066                     leTeclado@tecla:
   420                           	callstack 0
   421  000066                     	ds	2
   422                           
   423                           	psect	cstackCOMRAM
   424  000001                     __pcstackCOMRAM:
   425                           	callstack 0
   426  000001                     ?_digitalRead:
   427                           	callstack 0
   428  000001                     ?_adcRead:
   429                           	callstack 0
   430  000001                     ?_kpRead:
   431                           	callstack 0
   432  000001                     ?___lwdiv:
   433                           	callstack 0
   434  000001                     ?___lmul:
   435                           	callstack 0
   436  000001                     ?___aldiv:
   437                           	callstack 0
   438  000001                     adcRead@channel:
   439                           	callstack 0
   440  000001                     digitalWrite@pin:
   441                           	callstack 0
   442  000001                     digitalRead@pin:
   443                           	callstack 0
   444  000001                     pinMode@pin:
   445                           	callstack 0
   446  000001                     delayMicro@a:
   447                           	callstack 0
   448  000001                     delayMili@a:
   449                           	callstack 0
   450  000001                     timerReset@tempo:
   451                           	callstack 0
   452  000001                     atraso@n:
   453                           	callstack 0
   454  000001                     ___lwdiv@dividend:
   455                           	callstack 0
   456  000001                     ___lmul@multiplier:
   457                           	callstack 0
   458  000001                     ___aldiv@dividend:
   459                           	callstack 0
   460                           
   461                           ; 4 bytes @ 0x0
   462  000001                     	ds	2
   463  000003                     ??_digitalRead:
   464  000003                     ??_delayMili:
   465  000003                     adcRead@ADvalor:
   466                           	callstack 0
   467  000003                     digitalWrite@value:
   468                           	callstack 0
   469  000003                     pinMode@type:
   470                           	callstack 0
   471  000003                     timerReset@ciclos:
   472                           	callstack 0
   473  000003                     atraso@i:
   474                           	callstack 0
   475  000003                     ___lwdiv@divisor:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x2
   479  000003                     	ds	1
   480  000004                     delayMili@i:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x3
   484  000004                     	ds	1
   485  000005                     ??_pinMode:
   486  000005                     ??_digitalWrite:
   487  000005                     atraso@j:
   488                           	callstack 0
   489  000005                     ___lwdiv@quotient:
   490                           	callstack 0
   491  000005                     ___lmul@multiplicand:
   492                           	callstack 0
   493  000005                     ___aldiv@divisor:
   494                           	callstack 0
   495                           
   496                           ; 4 bytes @ 0x4
   497  000005                     	ds	2
   498  000007                     i2c_write_bit@bit:
   499                           	callstack 0
   500  000007                     i2c_read_bit@bit:
   501                           	callstack 0
   502  000007                     ___lwdiv@counter:
   503                           	callstack 0
   504  000007                     soWrite@value:
   505                           	callstack 0
   506  000007                     atraso@k:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x6
   510  000007                     	ds	1
   511  000008                     i2cWriteByte@send_stop:
   512                           	callstack 0
   513  000008                     i2cReadByte@send_stop:
   514                           	callstack 0
   515                           
   516                           ; 1 bytes @ 0x7
   517  000008                     	ds	1
   518  000009                     ??_i2cReadByte:
   519  000009                     i2cWriteByte@byte:
   520                           	callstack 0
   521  000009                     soWrite@i:
   522                           	callstack 0
   523  000009                     ___aldiv@counter:
   524                           	callstack 0
   525  000009                     ___lmul@product:
   526                           	callstack 0
   527                           
   528                           ; 4 bytes @ 0x8
   529  000009                     	ds	1
   530  00000A                     ??_kpDebounce:
   531  00000A                     ??_ssdUpdate:
   532  00000A                     i2cWriteByte@send_start:
   533                           	callstack 0
   534  00000A                     i2cReadByte@nack:
   535                           	callstack 0
   536  00000A                     ___aldiv@sign:
   537                           	callstack 0
   538  00000A                     pushNibble@rs:
   539                           	callstack 0
   540  00000A                     pushByte@rs:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x9
   544  00000A                     	ds	1
   545  00000B                     i2cWriteByte@bit:
   546                           	callstack 0
   547  00000B                     i2cReadByte@bit:
   548                           	callstack 0
   549  00000B                     ___aldiv@quotient:
   550                           	callstack 0
   551                           
   552                           ; 4 bytes @ 0xA
   553  00000B                     	ds	1
   554  00000C                     ??_pushByte:
   555  00000C                     pushNibble@value:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0xB
   559  00000C                     	ds	1
   560  00000D                     ?___lldiv:
   561                           	callstack 0
   562  00000D                     i2cReadByte@byte:
   563                           	callstack 0
   564  00000D                     pushByte@value:
   565                           	callstack 0
   566  00000D                     kpDebounce@i:
   567                           	callstack 0
   568  00000D                     ___lldiv@dividend:
   569                           	callstack 0
   570                           
   571                           ; 4 bytes @ 0xC
   572  00000D                     	ds	1
   573  00000E                     ?_dsReadData:
   574                           	callstack 0
   575  00000E                     lcdCommand@value:
   576                           	callstack 0
   577  00000E                     lcdChar@value:
   578                           	callstack 0
   579  00000E                     dsReadData@address:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0xD
   583  00000E                     	ds	1
   584  00000F                     lcdPosition@line:
   585                           	callstack 0
   586  00000F                     lcdString@msg:
   587                           	callstack 0
   588  00000F                     pwmFrequency@freq:
   589                           	callstack 0
   590  00000F                     iniSimbolos@cima:
   591                           	callstack 0
   592                           
   593                           ; 8 bytes @ 0xE
   594  00000F                     	ds	1
   595  000010                     ??_dsReadData:
   596                           
   597                           ; 1 bytes @ 0xF
   598  000010                     	ds	1
   599  000011                     ??_lcdString:
   600  000011                     dsReadData@result:
   601                           	callstack 0
   602  000011                     lcdPosition@col:
   603                           	callstack 0
   604  000011                     ___lldiv@divisor:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0x10
   608  000011                     	ds	2
   609  000013                     ?___awdiv:
   610                           	callstack 0
   611  000013                     lcdString@i:
   612                           	callstack 0
   613  000013                     ___awdiv@dividend:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x12
   617  000013                     	ds	2
   618  000015                     ___awdiv@divisor:
   619                           	callstack 0
   620  000015                     ___lldiv@quotient:
   621                           	callstack 0
   622                           
   623                           ; 4 bytes @ 0x14
   624  000015                     	ds	2
   625  000017                     ___awdiv@counter:
   626                           	callstack 0
   627  000017                     iniSimbolos@baixo:
   628                           	callstack 0
   629                           
   630                           ; 8 bytes @ 0x16
   631  000017                     	ds	1
   632  000018                     ___awdiv@sign:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0x17
   636  000018                     	ds	1
   637  000019                     ___lldiv@counter:
   638                           	callstack 0
   639  000019                     ___awdiv@quotient:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x18
   643  000019                     	ds	1
   644  00001A                     ?___llmod:
   645                           	callstack 0
   646  00001A                     ___llmod@dividend:
   647                           	callstack 0
   648                           
   649                           ; 4 bytes @ 0x19
   650  00001A                     	ds	1
   651  00001B                     ?___wmul:
   652                           	callstack 0
   653  00001B                     ___wmul@multiplier:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x1A
   657  00001B                     	ds	2
   658  00001D                     ___wmul@multiplicand:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x1C
   662  00001D                     	ds	1
   663  00001E                     ___llmod@divisor:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0x1D
   667  00001E                     	ds	1
   668  00001F                     ___wmul@product:
   669                           	callstack 0
   670  00001F                     iniSimbolos@cimaBaixo:
   671                           	callstack 0
   672                           
   673                           ; 8 bytes @ 0x1E
   674  00001F                     	ds	2
   675  000021                     ??_pwmSet:
   676  000021                     ?_bcd2dec:
   677                           	callstack 0
   678  000021                     bcd2dec@value:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x20
   682  000021                     	ds	1
   683  000022                     ___llmod@counter:
   684                           	callstack 0
   685                           
   686                           ; 1 bytes @ 0x21
   687  000022                     	ds	1
   688  000023                     ??_bcd2dec:
   689  000023                     ??_temperatura:
   690  000023                     pwmSet@porcento:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0x22
   694  000023                     	ds	1
   695  000024                     pwmSet@val:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x23
   699  000024                     	ds	1
   700  000025                     ?___awmod:
   701                           	callstack 0
   702  000025                     ___awmod@dividend:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x24
   706  000025                     	ds	1
   707  000026                     _atualizaLCD$1316:
   708                           	callstack 0
   709                           
   710                           ; 4 bytes @ 0x25
   711  000026                     	ds	1
   712  000027                     iniSimbolos@i:
   713                           	callstack 0
   714  000027                     ___awmod@divisor:
   715                           	callstack 0
   716  000027                     _temperatura$1317:
   717                           	callstack 0
   718                           
   719                           ; 4 bytes @ 0x26
   720  000027                     	ds	2
   721  000029                     ___awmod@counter:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0x28
   725  000029                     	ds	1
   726  00002A                     ___awmod@sign:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0x29
   730  00002A                     	ds	1
   731  00002B                     ssdDigit@pos:
   732                           	callstack 0
   733  00002B                     _desligado$1315:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x2A
   737  00002B                     	ds	1
   738  00002C                     ssdDigit@val:
   739                           	callstack 0
   740                           
   741                           ; 1 bytes @ 0x2B
   742  00002C                     	ds	1
   743  00002D                     ??_main:
   744                           
   745                           ; 1 bytes @ 0x2C
   746  00002D                     	ds	2
   747  00002F                     main@tempo:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x2E
   751  00002F                     	ds	2
   752  000031                     main@slot:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0x30
   756  000031                     	ds	1
   757                           
   758 ;;
   759 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   760 ;;
   761 ;; *************** function _main *****************
   762 ;; Defined at:
   763 ;;		line 182 in file "main.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;		None
   766 ;; Auto vars:     Size  Location     Type
   767 ;;  tempo           2   46[COMRAM] unsigned int 
   768 ;;  i               2    0        int 
   769 ;;  slot            1   48[COMRAM] unsigned char 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   779 ;;      Params:         0       0       0       0       0       0       0
   780 ;;      Locals:         3       0       0       0       0       0       0
   781 ;;      Temps:          2       0       0       0       0       0       0
   782 ;;      Totals:         5       0       0       0       0       0       0
   783 ;;Total ram usage:        5 bytes
   784 ;; Hardware stack levels required when called: 8
   785 ;; This function calls:
   786 ;;		_adcInit
   787 ;;		_atualizaSSD
   788 ;;		_desligado
   789 ;;		_escolherModo
   790 ;;		_iniSimbolos
   791 ;;		_kpInit
   792 ;;		_lcdCommand
   793 ;;		_lcdInit
   794 ;;		_leTeclado
   795 ;;		_pwmInit
   796 ;;		_ssdInit
   797 ;;		_ssdUpdate
   798 ;;		_temperatura
   799 ;;		_timer
   800 ;;		_timerInit
   801 ;;		_timerReset
   802 ;;		_timerWait
   803 ;; This function is called by:
   804 ;;		Startup code after reset
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text0
   809  0019F2                     __ptext0:
   810                           	callstack 0
   811  0019F2                     _main:
   812                           	callstack 23
   813  0019F2                     
   814                           ;main.c: 183:     char slot = 0;
   815  0019F2  0E00               	movlw	0
   816  0019F4  6E31               	movwf	main@slot^0,c
   817                           
   818                           ;main.c: 184:     int i;;main.c: 185:     unsigned int tempo = 0;
   819  0019F6  0E00               	movlw	0
   820  0019F8  6E30               	movwf	(main@tempo+1)^0,c
   821  0019FA  0E00               	movlw	0
   822  0019FC  6E2F               	movwf	main@tempo^0,c
   823  0019FE                     
   824                           ;main.c: 187:     adcInit();
   825  0019FE  EC41  F013         	call	_adcInit	;wreg free
   826  001A02                     
   827                           ;main.c: 188:     ssdInit();
   828  001A02  EC72  F012         	call	_ssdInit	;wreg free
   829  001A06                     
   830                           ;main.c: 189:     lcdInit();
   831  001A06  ECCE  F00E         	call	_lcdInit	;wreg free
   832  001A0A                     
   833                           ;main.c: 190:     kpInit();
   834  001A0A  EC7C  F014         	call	_kpInit	;wreg free
   835  001A0E                     
   836                           ;main.c: 191:     timerInit();
   837  001A0E  ECD3  F015         	call	_timerInit	;wreg free
   838  001A12                     
   839                           ;main.c: 192:     pwmInit();
   840  001A12  ECB9  F015         	call	_pwmInit	;wreg free
   841  001A16                     
   842                           ;main.c: 194:     iniSimbolos();
   843  001A16  EC6D  F00E         	call	_iniSimbolos	;wreg free
   844                           
   845                           ;main.c: 197:     while(state==0){
   846  001A1A  EF13  F00D         	goto	l3344
   847  001A1E                     l3342:
   848                           
   849                           ;main.c: 198:         desligado();
   850  001A1E  EC37  F003         	call	_desligado	;wreg free
   851                           
   852                           ;main.c: 199:         leTeclado();
   853  001A22  ECD8  F009         	call	_leTeclado	;wreg free
   854  001A26                     l3344:
   855                           
   856                           ;main.c: 197:     while(state==0){
   857  001A26  5045               	movf	_state^0,w,c
   858  001A28  B4D8               	btfsc	status,2,c
   859  001A2A  EF19  F00D         	goto	u3311
   860  001A2E  EF1B  F00D         	goto	u3310
   861  001A32                     u3311:
   862  001A32  EF0F  F00D         	goto	l3342
   863  001A36                     u3310:
   864  001A36                     
   865                           ;main.c: 201:     lcdCommand(0x01);
   866  001A36  0E01               	movlw	1
   867  001A38  EC9D  F015         	call	_lcdCommand
   868                           
   869                           ;main.c: 204:     while(modo == 0){
   870  001A3C  EF24  F00D         	goto	l3352
   871  001A40                     l3348:
   872                           
   873                           ;main.c: 205:         escolherModo();
   874  001A40  EC57  F015         	call	_escolherModo	;wreg free
   875  001A44                     
   876                           ;main.c: 206:         leTeclado();
   877  001A44  ECD8  F009         	call	_leTeclado	;wreg free
   878  001A48                     l3352:
   879                           
   880                           ;main.c: 204:     while(modo == 0){
   881  001A48  5046               	movf	_modo^0,w,c
   882  001A4A  B4D8               	btfsc	status,2,c
   883  001A4C  EF2A  F00D         	goto	u3321
   884  001A50  EF2C  F00D         	goto	u3320
   885  001A54                     u3321:
   886  001A54  EF20  F00D         	goto	l3348
   887  001A58                     u3320:
   888  001A58                     
   889                           ;main.c: 208:     lcdCommand(0x01);
   890  001A58  0E01               	movlw	1
   891  001A5A  EC9D  F015         	call	_lcdCommand
   892  001A5E                     l511:
   893                           
   894                           ;main.c: 212:         timerReset(9000);
   895  001A5E  0E23               	movlw	35
   896  001A60  6E02               	movwf	(timerReset@tempo+1)^0,c
   897  001A62  0E28               	movlw	40
   898  001A64  6E01               	movwf	timerReset@tempo^0,c
   899  001A66  EC7D  F015         	call	_timerReset	;wreg free
   900                           
   901                           ;main.c: 214:         switch(slot){
   902  001A6A  EF5A  F00D         	goto	l3378
   903  001A6E                     l3356:
   904                           
   905                           ;main.c: 216:                 leTeclado();
   906  001A6E  ECD8  F009         	call	_leTeclado	;wreg free
   907  001A72                     
   908                           ;main.c: 217:                 slot = 1;
   909  001A72  0E01               	movlw	1
   910  001A74  6E31               	movwf	main@slot^0,c
   911                           
   912                           ;main.c: 218:                 break;
   913  001A76  EF73  F00D         	goto	l3380
   914  001A7A                     l3360:
   915                           
   916                           ;main.c: 220:                 temperatura();
   917  001A7A  ECB4  F008         	call	_temperatura	;wreg free
   918  001A7E                     
   919                           ;main.c: 221:                 slot = 2;
   920  001A7E  0E02               	movlw	2
   921  001A80  6E31               	movwf	main@slot^0,c
   922                           
   923                           ;main.c: 222:                 break;
   924  001A82  EF73  F00D         	goto	l3380
   925  001A86                     l3364:
   926                           
   927                           ;main.c: 224:                 if(tempo>100){tempo=0; timer();}
   928  001A86  5030               	movf	(main@tempo+1)^0,w,c
   929  001A88  E109               	bnz	u3330
   930  001A8A  0E65               	movlw	101
   931  001A8C  5C2F               	subwf	main@tempo^0,w,c
   932  001A8E  A0D8               	btfss	status,0,c
   933  001A90  EF4C  F00D         	goto	u3331
   934  001A94  EF4E  F00D         	goto	u3330
   935  001A98                     u3331:
   936  001A98  EF54  F00D         	goto	l3370
   937  001A9C                     u3330:
   938  001A9C  0E00               	movlw	0
   939  001A9E  6E30               	movwf	(main@tempo+1)^0,c
   940  001AA0  0E00               	movlw	0
   941  001AA2  6E2F               	movwf	main@tempo^0,c
   942  001AA4  EC23  F010         	call	_timer	;wreg free
   943  001AA8                     l3370:
   944                           
   945                           ;main.c: 225:                 atualizaSSD();
   946  001AA8  ECD2  F00F         	call	_atualizaSSD	;wreg free
   947  001AAC                     l3372:
   948                           
   949                           ;main.c: 226:                 slot = 0;
   950  001AAC  0E00               	movlw	0
   951  001AAE  6E31               	movwf	main@slot^0,c
   952                           
   953                           ;main.c: 227:                 break;
   954  001AB0  EF73  F00D         	goto	l3380
   955  001AB4                     l3378:
   956  001AB4  5031               	movf	main@slot^0,w,c
   957  001AB6  6E2D               	movwf	??_main^0,c
   958  001AB8  6A2E               	clrf	(??_main+1)^0,c
   959                           
   960                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   961                           ; Switch size 1, requested type "simple"
   962                           ; Number of cases is 1, Range of values is 0 to 0
   963                           ; switch strategies available:
   964                           ; Name         Instructions Cycles
   965                           ; simple_byte            4     3 (average)
   966                           ;	Chosen strategy is simple_byte
   967  001ABA  502E               	movf	(??_main+1)^0,w,c
   968  001ABC  0A00               	xorlw	0	; case 0
   969  001ABE  B4D8               	btfsc	status,2,c
   970  001AC0  EF64  F00D         	goto	l3400
   971  001AC4  EF56  F00D         	goto	l3372
   972  001AC8                     l3400:
   973                           
   974                           ; Switch size 1, requested type "simple"
   975                           ; Number of cases is 3, Range of values is 0 to 2
   976                           ; switch strategies available:
   977                           ; Name         Instructions Cycles
   978                           ; simple_byte           10     6 (average)
   979                           ;	Chosen strategy is simple_byte
   980  001AC8  502D               	movf	??_main^0,w,c
   981  001ACA  0A00               	xorlw	0	; case 0
   982  001ACC  B4D8               	btfsc	status,2,c
   983  001ACE  EF37  F00D         	goto	l3356
   984  001AD2  0A01               	xorlw	1	; case 1
   985  001AD4  B4D8               	btfsc	status,2,c
   986  001AD6  EF3D  F00D         	goto	l3360
   987  001ADA  0A03               	xorlw	3	; case 2
   988  001ADC  B4D8               	btfsc	status,2,c
   989  001ADE  EF43  F00D         	goto	l3364
   990  001AE2  EF56  F00D         	goto	l3372
   991  001AE6                     l3380:
   992                           
   993                           ;main.c: 233:         if(start!=0){tempo++;}
   994  001AE6  5043               	movf	_start^0,w,c
   995  001AE8  B4D8               	btfsc	status,2,c
   996  001AEA  EF79  F00D         	goto	u3341
   997  001AEE  EF7B  F00D         	goto	u3340
   998  001AF2                     u3341:
   999  001AF2  EF7D  F00D         	goto	l3384
  1000  001AF6                     u3340:
  1001  001AF6  4A2F               	infsnz	main@tempo^0,f,c
  1002  001AF8  2A30               	incf	(main@tempo+1)^0,f,c
  1003  001AFA                     l3384:
  1004                           
  1005                           ;main.c: 234:         ssdUpdate();
  1006  001AFA  ECF3  F00A         	call	_ssdUpdate	;wreg free
  1007  001AFE                     
  1008                           ;main.c: 235:         timerWait();
  1009  001AFE  ECC6  F015         	call	_timerWait	;wreg free
  1010                           
  1011                           ;main.c: 236:     }
  1012  001B02  EF2F  F00D         	goto	l511
  1013  001B06  EF00  F000         	goto	start
  1014  001B0A                     __end_of_main:
  1015                           	callstack 0
  1016                           
  1017 ;; *************** function _timerWait *****************
  1018 ;; Defined at:
  1019 ;;		line 31 in file "timer.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		None
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1033 ;;      Params:         0       0       0       0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0       0       0
  1036 ;;      Totals:         0       0       0       0       0       0       0
  1037 ;;Total ram usage:        0 bytes
  1038 ;; Hardware stack levels used: 1
  1039 ;; This function calls:
  1040 ;;		Nothing
  1041 ;; This function is called by:
  1042 ;;		_main
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text1
  1047  002B8C                     __ptext1:
  1048                           	callstack 0
  1049  002B8C                     _timerWait:
  1050                           	callstack 30
  1051  002B8C                     l361:
  1052  002B8C  A4F2               	btfss	242,2,c	;volatile
  1053  002B8E  EFCB  F015         	goto	u1241
  1054  002B92  EFCD  F015         	goto	u1240
  1055  002B96                     u1241:
  1056  002B96  EFC6  F015         	goto	l361
  1057  002B9A                     u1240:
  1058  002B9A  0012               	return		;funcret
  1059  002B9C                     __end_of_timerWait:
  1060                           	callstack 0
  1061                           
  1062 ;; *************** function _timerReset *****************
  1063 ;; Defined at:
  1064 ;;		line 37 in file "timer.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;  tempo           2    0[COMRAM] unsigned int 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  ciclos          2    2[COMRAM] unsigned int 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, status,0
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1078 ;;      Params:         2       0       0       0       0       0       0
  1079 ;;      Locals:         2       0       0       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0       0       0
  1081 ;;      Totals:         4       0       0       0       0       0       0
  1082 ;;Total ram usage:        4 bytes
  1083 ;; Hardware stack levels used: 1
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_main
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text2
  1092  002AFA                     __ptext2:
  1093                           	callstack 0
  1094  002AFA                     _timerReset:
  1095                           	callstack 30
  1096  002AFA                     
  1097                           ;timer.c: 37: void timerReset(unsigned int tempo);timer.c: 38: {;timer.c: 39:     unsign
      +                          ed int ciclos;;timer.c: 42:     ciclos = tempo * 2;
  1098  002AFA  90D8               	bcf	status,0,c
  1099  002AFC  3401               	rlcf	timerReset@tempo^0,w,c
  1100  002AFE  6E03               	movwf	timerReset@ciclos^0,c
  1101  002B00  3402               	rlcf	(timerReset@tempo+1)^0,w,c
  1102  002B02  6E04               	movwf	(timerReset@ciclos+1)^0,c
  1103  002B04                     
  1104                           ;timer.c: 44:  ciclos = 65535 - ciclos;
  1105  002B04  1E03               	comf	timerReset@ciclos^0,f,c
  1106  002B06  1E04               	comf	(timerReset@ciclos+1)^0,f,c
  1107  002B08                     
  1108                           ;timer.c: 47:     ciclos -=50;
  1109  002B08  0E32               	movlw	50
  1110  002B0A  5E03               	subwf	timerReset@ciclos^0,f,c
  1111  002B0C  0E00               	movlw	0
  1112  002B0E  5A04               	subwfb	(timerReset@ciclos+1)^0,f,c
  1113  002B10                     
  1114                           ;timer.c: 49:  TMR0H = (ciclos >> 8);
  1115  002B10  5004               	movf	(timerReset@ciclos+1)^0,w,c
  1116  002B12  6ED7               	movwf	215,c	;volatile
  1117  002B14                     
  1118                           ;timer.c: 50:  TMR0L = (ciclos & 0x00FF);
  1119  002B14  C003  FFD6         	movff	timerReset@ciclos,4054	;volatile
  1120  002B18                     
  1121                           ;timer.c: 52:  ((INTCON) &= ~(1<<(2)));
  1122  002B18  94F2               	bcf	242,2,c	;volatile
  1123  002B1A  0012               	return		;funcret
  1124  002B1C                     __end_of_timerReset:
  1125                           	callstack 0
  1126                           
  1127 ;; *************** function _timerInit *****************
  1128 ;; Defined at:
  1129 ;;		line 55 in file "timer.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2, status,0
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1143 ;;      Params:         0       0       0       0       0       0       0
  1144 ;;      Locals:         0       0       0       0       0       0       0
  1145 ;;      Temps:          0       0       0       0       0       0       0
  1146 ;;      Totals:         0       0       0       0       0       0       0
  1147 ;;Total ram usage:        0 bytes
  1148 ;; Hardware stack levels used: 1
  1149 ;; This function calls:
  1150 ;;		Nothing
  1151 ;; This function is called by:
  1152 ;;		_main
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text3
  1157  002BA6                     __ptext3:
  1158                           	callstack 0
  1159  002BA6                     _timerInit:
  1160                           	callstack 30
  1161  002BA6                     
  1162                           ;timer.c: 57:  T0CON = 0b00001000;
  1163  002BA6  0E08               	movlw	8
  1164  002BA8  6ED5               	movwf	213,c	;volatile
  1165  002BAA                     
  1166                           ;timer.c: 58:  ((T0CON) |= (1<<(7)));
  1167  002BAA  8ED5               	bsf	213,7,c	;volatile
  1168  002BAC  0012               	return		;funcret
  1169  002BAE                     __end_of_timerInit:
  1170                           	callstack 0
  1171                           
  1172 ;; *************** function _timer *****************
  1173 ;; Defined at:
  1174 ;;		line 174 in file "main.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;		None
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;		None
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      void 
  1181 ;; Registers used:
  1182 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1188 ;;      Params:         0       0       0       0       0       0       0
  1189 ;;      Locals:         0       0       0       0       0       0       0
  1190 ;;      Temps:          0       0       0       0       0       0       0
  1191 ;;      Totals:         0       0       0       0       0       0       0
  1192 ;;Total ram usage:        0 bytes
  1193 ;; Hardware stack levels used: 1
  1194 ;; Hardware stack levels required when called: 7
  1195 ;; This function calls:
  1196 ;;		_atualizaLCD
  1197 ;; This function is called by:
  1198 ;;		_main
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text4
  1203  002046                     __ptext4:
  1204                           	callstack 0
  1205  002046                     _timer:
  1206                           	callstack 23
  1207  002046                     
  1208                           ;main.c: 175:     if(start!=0){
  1209  002046  5043               	movf	_start^0,w,c
  1210  002048  B4D8               	btfsc	status,2,c
  1211  00204A  EF29  F010         	goto	u3231
  1212  00204E  EF2B  F010         	goto	u3230
  1213  002052                     u3231:
  1214  002052  EF6C  F010         	goto	l500
  1215  002056                     u3230:
  1216  002056                     
  1217                           ;main.c: 176:         seg--;
  1218  002056  0638               	decf	_seg^0,f,c
  1219  002058  A0D8               	btfss	status,0,c
  1220  00205A  0639               	decf	(_seg+1)^0,f,c
  1221  00205C                     
  1222                           ;main.c: 177:         if((seg<0)&&(min>0)){seg=59; min--;}
  1223  00205C  BE39               	btfsc	(_seg+1)^0,7,c
  1224  00205E  EF35  F010         	goto	u3240
  1225  002062  EF33  F010         	goto	u3241
  1226  002066                     u3241:
  1227  002066  EF49  F010         	goto	l3288
  1228  00206A                     u3240:
  1229  00206A  BE3B               	btfsc	(_min+1)^0,7,c
  1230  00206C  EF40  F010         	goto	u3251
  1231  002070  503B               	movf	(_min+1)^0,w,c
  1232  002072  E108               	bnz	u3250
  1233  002074  043A               	decf	_min^0,w,c
  1234  002076  A0D8               	btfss	status,0,c
  1235  002078  EF40  F010         	goto	u3251
  1236  00207C  EF42  F010         	goto	u3250
  1237  002080                     u3251:
  1238  002080  EF49  F010         	goto	l3288
  1239  002084                     u3250:
  1240  002084  0E00               	movlw	0
  1241  002086  6E39               	movwf	(_seg+1)^0,c
  1242  002088  0E3B               	movlw	59
  1243  00208A  6E38               	movwf	_seg^0,c
  1244  00208C  063A               	decf	_min^0,f,c
  1245  00208E  A0D8               	btfss	status,0,c
  1246  002090  063B               	decf	(_min+1)^0,f,c
  1247  002092                     l3288:
  1248                           
  1249                           ;main.c: 178:         if((seg<0)&&(min==0)){seg=0; start=!start; fim=1; atualizaLCD();}
  1250  002092  BE39               	btfsc	(_seg+1)^0,7,c
  1251  002094  EF50  F010         	goto	u3260
  1252  002098  EF4E  F010         	goto	u3261
  1253  00209C                     u3261:
  1254  00209C  EF6C  F010         	goto	l500
  1255  0020A0                     u3260:
  1256  0020A0  503A               	movf	_min^0,w,c
  1257  0020A2  103B               	iorwf	(_min+1)^0,w,c
  1258  0020A4  A4D8               	btfss	status,2,c
  1259  0020A6  EF57  F010         	goto	u3271
  1260  0020AA  EF59  F010         	goto	u3270
  1261  0020AE                     u3271:
  1262  0020AE  EF6C  F010         	goto	l500
  1263  0020B2                     u3270:
  1264  0020B2  0E00               	movlw	0
  1265  0020B4  6E39               	movwf	(_seg+1)^0,c
  1266  0020B6  0E00               	movlw	0
  1267  0020B8  6E38               	movwf	_seg^0,c
  1268  0020BA  5043               	movf	_start^0,w,c
  1269  0020BC  B4D8               	btfsc	status,2,c
  1270  0020BE  EF63  F010         	goto	u3281
  1271  0020C2  EF66  F010         	goto	u3280
  1272  0020C6                     u3281:
  1273  0020C6  0E01               	movlw	1
  1274  0020C8  EF67  F010         	goto	u3290
  1275  0020CC                     u3280:
  1276  0020CC  0E00               	movlw	0
  1277  0020CE                     u3290:
  1278  0020CE  6E43               	movwf	_start^0,c
  1279  0020D0  0E01               	movlw	1
  1280  0020D2  6E42               	movwf	_fim^0,c
  1281  0020D4  ECE0  F004         	call	_atualizaLCD	;wreg free
  1282  0020D8                     l500:
  1283  0020D8  0012               	return		;funcret
  1284  0020DA                     __end_of_timer:
  1285                           	callstack 0
  1286                           
  1287 ;; *************** function _temperatura *****************
  1288 ;; Defined at:
  1289 ;;		line 146 in file "main.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;		None
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, status,2, status,0, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1303 ;;      Params:         0       0       0       0       0       0       0
  1304 ;;      Locals:         4       0       0       0       0       0       0
  1305 ;;      Temps:          4       0       0       0       0       0       0
  1306 ;;      Totals:         8       0       0       0       0       0       0
  1307 ;;Total ram usage:        8 bytes
  1308 ;; Hardware stack levels used: 1
  1309 ;; Hardware stack levels required when called: 6
  1310 ;; This function calls:
  1311 ;;		___lldiv
  1312 ;;		___llmod
  1313 ;;		___lmul
  1314 ;;		_adcRead
  1315 ;;		_lcdChar
  1316 ;;		_lcdPosition
  1317 ;; This function is called by:
  1318 ;;		_main
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text5
  1323  001168                     __ptext5:
  1324                           	callstack 0
  1325  001168                     _temperatura:
  1326                           	callstack 24
  1327  001168                     
  1328                           ;main.c: 147:     static unsigned int ant;;main.c: 148:     pot = adcRead(0);
  1329  001168  0E00               	movlw	0
  1330  00116A  6E02               	movwf	(adcRead@channel+1)^0,c
  1331  00116C  0E00               	movlw	0
  1332  00116E  6E01               	movwf	adcRead@channel^0,c
  1333  001170  ECF2  F012         	call	_adcRead	;wreg free
  1334  001174  C001  F032         	movff	?_adcRead,_pot
  1335  001178  C002  F033         	movff	?_adcRead+1,_pot+1
  1336  00117C  0E00               	movlw	0
  1337  00117E  BE33               	btfsc	(_pot+1)^0,7,c
  1338  001180  0EFF               	movlw	-1
  1339  001182  6E34               	movwf	(_pot+2)^0,c
  1340  001184  6E35               	movwf	(_pot+3)^0,c
  1341  001186                     
  1342                           ;main.c: 150:     if(ant!=pot){
  1343  001186  5036               	movf	temperatura@ant^0,w,c
  1344  001188  6E23               	movwf	??_temperatura^0,c
  1345  00118A  5037               	movf	(temperatura@ant+1)^0,w,c
  1346  00118C  6E24               	movwf	(??_temperatura+1)^0,c
  1347  00118E  6A25               	clrf	(??_temperatura+2)^0,c
  1348  001190  6A26               	clrf	(??_temperatura+3)^0,c
  1349  001192  5032               	movf	_pot^0,w,c
  1350  001194  1823               	xorwf	??_temperatura^0,w,c
  1351  001196  E10F               	bnz	u3220
  1352  001198  5033               	movf	(_pot+1)^0,w,c
  1353  00119A  1824               	xorwf	(??_temperatura+1)^0,w,c
  1354  00119C  E10C               	bnz	u3220
  1355  00119E  5034               	movf	(_pot+2)^0,w,c
  1356  0011A0  1825               	xorwf	(??_temperatura+2)^0,w,c
  1357  0011A2  E109               	bnz	u3220
  1358  0011A4  5035               	movf	(_pot+3)^0,w,c
  1359  0011A6  1826               	xorwf	(??_temperatura+3)^0,w,c
  1360  0011A8  B4D8               	btfsc	status,2,c
  1361  0011AA  EFD9  F008         	goto	u3221
  1362  0011AE  EFDB  F008         	goto	u3220
  1363  0011B2                     u3221:
  1364  0011B2  EFD3  F009         	goto	l3266
  1365  0011B6                     u3220:
  1366  0011B6                     
  1367                           ;main.c: 151:         lcdPosition(1, 6);
  1368  0011B6  0E00               	movlw	0
  1369  0011B8  6E10               	movwf	(lcdPosition@line+1)^0,c
  1370  0011BA  0E01               	movlw	1
  1371  0011BC  6E0F               	movwf	lcdPosition@line^0,c
  1372  0011BE  0E00               	movlw	0
  1373  0011C0  6E12               	movwf	(lcdPosition@col+1)^0,c
  1374  0011C2  0E06               	movlw	6
  1375  0011C4  6E11               	movwf	lcdPosition@col^0,c
  1376  0011C6  EC0C  F014         	call	_lcdPosition	;wreg free
  1377                           
  1378                           ;main.c: 152:         lcdChar((((250*pot)/1023)+50)/100 %10 + 48);
  1379  0011CA  0EFF               	movlw	255
  1380  0011CC  6E11               	movwf	___lldiv@divisor^0,c
  1381  0011CE  0E03               	movlw	3
  1382  0011D0  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1383  0011D2  0E00               	movlw	0
  1384  0011D4  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1385  0011D6  0E00               	movlw	0
  1386  0011D8  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1387  0011DA  C032  F001         	movff	_pot,___lmul@multiplier
  1388  0011DE  C033  F002         	movff	_pot+1,___lmul@multiplier+1
  1389  0011E2  C034  F003         	movff	_pot+2,___lmul@multiplier+2
  1390  0011E6  C035  F004         	movff	_pot+3,___lmul@multiplier+3
  1391  0011EA  0EFA               	movlw	250
  1392  0011EC  6E05               	movwf	___lmul@multiplicand^0,c
  1393  0011EE  0E00               	movlw	0
  1394  0011F0  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1395  0011F2  0E00               	movlw	0
  1396  0011F4  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1397  0011F6  0E00               	movlw	0
  1398  0011F8  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1399  0011FA  EC57  F011         	call	___lmul	;wreg free
  1400  0011FE  C001  F00D         	movff	?___lmul,___lldiv@dividend
  1401  001202  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  1402  001206  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  1403  00120A  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  1404  00120E  EC80  F00F         	call	___lldiv	;wreg free
  1405  001212  0E32               	movlw	50
  1406  001214  240D               	addwf	?___lldiv^0,w,c
  1407  001216  6E27               	movwf	_temperatura$1317^0,c
  1408  001218  0E00               	movlw	0
  1409  00121A  200E               	addwfc	(?___lldiv+1)^0,w,c
  1410  00121C  6E28               	movwf	(_temperatura$1317+1)^0,c
  1411  00121E  0E00               	movlw	0
  1412  001220  200F               	addwfc	(?___lldiv+2)^0,w,c
  1413  001222  6E29               	movwf	(_temperatura$1317+2)^0,c
  1414  001224  0E00               	movlw	0
  1415  001226  2010               	addwfc	(?___lldiv+3)^0,w,c
  1416  001228  6E2A               	movwf	(_temperatura$1317+3)^0,c
  1417                           
  1418                           ;main.c: 152:         lcdChar((((250*pot)/1023)+50)/100 %10 + 48);
  1419  00122A  0E64               	movlw	100
  1420  00122C  6E11               	movwf	___lldiv@divisor^0,c
  1421  00122E  0E00               	movlw	0
  1422  001230  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1423  001232  0E00               	movlw	0
  1424  001234  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1425  001236  0E00               	movlw	0
  1426  001238  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1427  00123A  C027  F00D         	movff	_temperatura$1317,___lldiv@dividend
  1428  00123E  C028  F00E         	movff	_temperatura$1317+1,___lldiv@dividend+1
  1429  001242  C029  F00F         	movff	_temperatura$1317+2,___lldiv@dividend+2
  1430  001246  C02A  F010         	movff	_temperatura$1317+3,___lldiv@dividend+3
  1431  00124A  EC80  F00F         	call	___lldiv	;wreg free
  1432  00124E  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  1433  001252  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  1434  001256  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  1435  00125A  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  1436  00125E  0E0A               	movlw	10
  1437  001260  6E1E               	movwf	___llmod@divisor^0,c
  1438  001262  0E00               	movlw	0
  1439  001264  6E1F               	movwf	(___llmod@divisor+1)^0,c
  1440  001266  0E00               	movlw	0
  1441  001268  6E20               	movwf	(___llmod@divisor+2)^0,c
  1442  00126A  0E00               	movlw	0
  1443  00126C  6E21               	movwf	(___llmod@divisor+3)^0,c
  1444  00126E  EC6D  F010         	call	___llmod	;wreg free
  1445  001272  501A               	movf	?___llmod^0,w,c
  1446  001274  0F30               	addlw	48
  1447  001276  EC8E  F015         	call	_lcdChar
  1448                           
  1449                           ;main.c: 153:         lcdChar((((250*pot)/1023)+50)/10 %10 + 48);
  1450  00127A  0EFF               	movlw	255
  1451  00127C  6E11               	movwf	___lldiv@divisor^0,c
  1452  00127E  0E03               	movlw	3
  1453  001280  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1454  001282  0E00               	movlw	0
  1455  001284  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1456  001286  0E00               	movlw	0
  1457  001288  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1458  00128A  C032  F001         	movff	_pot,___lmul@multiplier
  1459  00128E  C033  F002         	movff	_pot+1,___lmul@multiplier+1
  1460  001292  C034  F003         	movff	_pot+2,___lmul@multiplier+2
  1461  001296  C035  F004         	movff	_pot+3,___lmul@multiplier+3
  1462  00129A  0EFA               	movlw	250
  1463  00129C  6E05               	movwf	___lmul@multiplicand^0,c
  1464  00129E  0E00               	movlw	0
  1465  0012A0  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1466  0012A2  0E00               	movlw	0
  1467  0012A4  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1468  0012A6  0E00               	movlw	0
  1469  0012A8  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1470  0012AA  EC57  F011         	call	___lmul	;wreg free
  1471  0012AE  C001  F00D         	movff	?___lmul,___lldiv@dividend
  1472  0012B2  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  1473  0012B6  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  1474  0012BA  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  1475  0012BE  EC80  F00F         	call	___lldiv	;wreg free
  1476  0012C2  0E32               	movlw	50
  1477  0012C4  240D               	addwf	?___lldiv^0,w,c
  1478  0012C6  6E27               	movwf	_temperatura$1317^0,c
  1479  0012C8  0E00               	movlw	0
  1480  0012CA  200E               	addwfc	(?___lldiv+1)^0,w,c
  1481  0012CC  6E28               	movwf	(_temperatura$1317+1)^0,c
  1482  0012CE  0E00               	movlw	0
  1483  0012D0  200F               	addwfc	(?___lldiv+2)^0,w,c
  1484  0012D2  6E29               	movwf	(_temperatura$1317+2)^0,c
  1485  0012D4  0E00               	movlw	0
  1486  0012D6  2010               	addwfc	(?___lldiv+3)^0,w,c
  1487  0012D8  6E2A               	movwf	(_temperatura$1317+3)^0,c
  1488                           
  1489                           ;main.c: 153:         lcdChar((((250*pot)/1023)+50)/10 %10 + 48);
  1490  0012DA  0E0A               	movlw	10
  1491  0012DC  6E11               	movwf	___lldiv@divisor^0,c
  1492  0012DE  0E00               	movlw	0
  1493  0012E0  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1494  0012E2  0E00               	movlw	0
  1495  0012E4  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1496  0012E6  0E00               	movlw	0
  1497  0012E8  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1498  0012EA  C027  F00D         	movff	_temperatura$1317,___lldiv@dividend
  1499  0012EE  C028  F00E         	movff	_temperatura$1317+1,___lldiv@dividend+1
  1500  0012F2  C029  F00F         	movff	_temperatura$1317+2,___lldiv@dividend+2
  1501  0012F6  C02A  F010         	movff	_temperatura$1317+3,___lldiv@dividend+3
  1502  0012FA  EC80  F00F         	call	___lldiv	;wreg free
  1503  0012FE  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  1504  001302  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  1505  001306  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  1506  00130A  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  1507  00130E  0E0A               	movlw	10
  1508  001310  6E1E               	movwf	___llmod@divisor^0,c
  1509  001312  0E00               	movlw	0
  1510  001314  6E1F               	movwf	(___llmod@divisor+1)^0,c
  1511  001316  0E00               	movlw	0
  1512  001318  6E20               	movwf	(___llmod@divisor+2)^0,c
  1513  00131A  0E00               	movlw	0
  1514  00131C  6E21               	movwf	(___llmod@divisor+3)^0,c
  1515  00131E  EC6D  F010         	call	___llmod	;wreg free
  1516  001322  501A               	movf	?___llmod^0,w,c
  1517  001324  0F30               	addlw	48
  1518  001326  EC8E  F015         	call	_lcdChar
  1519                           
  1520                           ;main.c: 154:         lcdChar((((250*pot)/1023)+50) %10 + 48);
  1521  00132A  0EFF               	movlw	255
  1522  00132C  6E11               	movwf	___lldiv@divisor^0,c
  1523  00132E  0E03               	movlw	3
  1524  001330  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1525  001332  0E00               	movlw	0
  1526  001334  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1527  001336  0E00               	movlw	0
  1528  001338  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1529  00133A  C032  F001         	movff	_pot,___lmul@multiplier
  1530  00133E  C033  F002         	movff	_pot+1,___lmul@multiplier+1
  1531  001342  C034  F003         	movff	_pot+2,___lmul@multiplier+2
  1532  001346  C035  F004         	movff	_pot+3,___lmul@multiplier+3
  1533  00134A  0EFA               	movlw	250
  1534  00134C  6E05               	movwf	___lmul@multiplicand^0,c
  1535  00134E  0E00               	movlw	0
  1536  001350  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1537  001352  0E00               	movlw	0
  1538  001354  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1539  001356  0E00               	movlw	0
  1540  001358  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1541  00135A  EC57  F011         	call	___lmul	;wreg free
  1542  00135E  C001  F00D         	movff	?___lmul,___lldiv@dividend
  1543  001362  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  1544  001366  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  1545  00136A  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  1546  00136E  EC80  F00F         	call	___lldiv	;wreg free
  1547  001372  0E32               	movlw	50
  1548  001374  240D               	addwf	?___lldiv^0,w,c
  1549  001376  6E1A               	movwf	___llmod@dividend^0,c
  1550  001378  0E00               	movlw	0
  1551  00137A  200E               	addwfc	(?___lldiv+1)^0,w,c
  1552  00137C  6E1B               	movwf	(___llmod@dividend+1)^0,c
  1553  00137E  0E00               	movlw	0
  1554  001380  200F               	addwfc	(?___lldiv+2)^0,w,c
  1555  001382  6E1C               	movwf	(___llmod@dividend+2)^0,c
  1556  001384  0E00               	movlw	0
  1557  001386  2010               	addwfc	(?___lldiv+3)^0,w,c
  1558  001388  6E1D               	movwf	(___llmod@dividend+3)^0,c
  1559  00138A  0E0A               	movlw	10
  1560  00138C  6E1E               	movwf	___llmod@divisor^0,c
  1561  00138E  0E00               	movlw	0
  1562  001390  6E1F               	movwf	(___llmod@divisor+1)^0,c
  1563  001392  0E00               	movlw	0
  1564  001394  6E20               	movwf	(___llmod@divisor+2)^0,c
  1565  001396  0E00               	movlw	0
  1566  001398  6E21               	movwf	(___llmod@divisor+3)^0,c
  1567  00139A  EC6D  F010         	call	___llmod	;wreg free
  1568  00139E  501A               	movf	?___llmod^0,w,c
  1569  0013A0  0F30               	addlw	48
  1570  0013A2  EC8E  F015         	call	_lcdChar
  1571  0013A6                     l3266:
  1572                           
  1573                           ;main.c: 157:     ant = pot;
  1574  0013A6  C032  F036         	movff	_pot,temperatura@ant
  1575  0013AA  C033  F037         	movff	_pot+1,temperatura@ant+1
  1576  0013AE  0012               	return		;funcret
  1577  0013B0                     __end_of_temperatura:
  1578                           	callstack 0
  1579                           
  1580 ;; *************** function _adcRead *****************
  1581 ;; Defined at:
  1582 ;;		line 38 in file "adc.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;  channel         2    0[COMRAM] unsigned int 
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;  ADvalor         2    2[COMRAM] unsigned int 
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  2    0[COMRAM] int 
  1589 ;; Registers used:
  1590 ;;		wreg, status,2, status,0
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1596 ;;      Params:         2       0       0       0       0       0       0
  1597 ;;      Locals:         2       0       0       0       0       0       0
  1598 ;;      Temps:          0       0       0       0       0       0       0
  1599 ;;      Totals:         4       0       0       0       0       0       0
  1600 ;;Total ram usage:        4 bytes
  1601 ;; Hardware stack levels used: 1
  1602 ;; This function calls:
  1603 ;;		Nothing
  1604 ;; This function is called by:
  1605 ;;		_temperatura
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           	psect	text6
  1610  0025E4                     __ptext6:
  1611                           	callstack 0
  1612  0025E4                     _adcRead:
  1613                           	callstack 29
  1614  0025E4                     
  1615                           ;adc.c: 39:     unsigned int ADvalor;;adc.c: 40:     ADCON0 &= 0b11000011;
  1616  0025E4  0EC3               	movlw	195
  1617  0025E6  16C2               	andwf	194,f,c	;volatile
  1618                           
  1619                           ;adc.c: 41:     if (channel < 3) {
  1620  0025E8  5002               	movf	(adcRead@channel+1)^0,w,c
  1621  0025EA  E107               	bnz	u2691
  1622  0025EC  0E03               	movlw	3
  1623  0025EE  5C01               	subwf	adcRead@channel^0,w,c
  1624  0025F0  B0D8               	btfsc	status,0,c
  1625  0025F2  EFFD  F012         	goto	u2691
  1626  0025F6  EFFF  F012         	goto	u2690
  1627  0025FA                     u2691:
  1628  0025FA  EF03  F013         	goto	l2852
  1629  0025FE                     u2690:
  1630  0025FE                     
  1631                           ;adc.c: 42:         ADCON0 |= channel << 2;
  1632  0025FE  4401               	rlncf	adcRead@channel^0,w,c	;volatile
  1633  002600  46E8               	rlncf	wreg,f,c
  1634  002602  0BFC               	andlw	252
  1635  002604  12C2               	iorwf	194,f,c	;volatile
  1636  002606                     l2852:
  1637                           
  1638                           ;adc.c: 45:     ADCON0 |= 0b00000010;
  1639  002606  82C2               	bsf	194,1,c	;volatile
  1640  002608                     l19:
  1641  002608  B2C2               	btfsc	194,1,c	;volatile
  1642  00260A  EF09  F013         	goto	u2701
  1643  00260E  EF0B  F013         	goto	u2700
  1644  002612                     u2701:
  1645  002612  EF04  F013         	goto	l19
  1646  002616                     u2700:
  1647  002616                     
  1648                           ;adc.c: 49:     ADvalor = ADRESH;
  1649  002616  CFC4 F003          	movff	4036,adcRead@ADvalor	;volatile
  1650  00261A  6A04               	clrf	(adcRead@ADvalor+1)^0,c
  1651  00261C                     
  1652                           ;adc.c: 50:     ADvalor <<= 8;
  1653  00261C  5003               	movf	adcRead@ADvalor^0,w,c
  1654  00261E  6E04               	movwf	(adcRead@ADvalor+1)^0,c
  1655  002620  6A03               	clrf	adcRead@ADvalor^0,c
  1656  002622                     
  1657                           ;adc.c: 51:     ADvalor += ADRESL;
  1658  002622  50C3               	movf	195,w,c	;volatile
  1659  002624  2603               	addwf	adcRead@ADvalor^0,f,c
  1660  002626  0E00               	movlw	0
  1661  002628  2204               	addwfc	(adcRead@ADvalor+1)^0,f,c
  1662  00262A                     
  1663                           ;adc.c: 52:     return ADvalor;
  1664  00262A  C003  F001         	movff	adcRead@ADvalor,?_adcRead
  1665  00262E  C004  F002         	movff	adcRead@ADvalor+1,?_adcRead+1
  1666  002632  0012               	return		;funcret
  1667  002634                     __end_of_adcRead:
  1668                           	callstack 0
  1669                           
  1670 ;; *************** function _ssdUpdate *****************
  1671 ;; Defined at:
  1672 ;;		line 50 in file "ssd.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;		None
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;		None
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      void 
  1679 ;; Registers used:
  1680 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1686 ;;      Params:         0       0       0       0       0       0       0
  1687 ;;      Locals:         0       0       0       0       0       0       0
  1688 ;;      Temps:          2       0       0       0       0       0       0
  1689 ;;      Totals:         2       0       0       0       0       0       0
  1690 ;;Total ram usage:        2 bytes
  1691 ;; Hardware stack levels used: 1
  1692 ;; Hardware stack levels required when called: 3
  1693 ;; This function calls:
  1694 ;;		_digitalWrite
  1695 ;;		_soWrite
  1696 ;; This function is called by:
  1697 ;;		_main
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text7
  1702  0015E6                     __ptext7:
  1703                           	callstack 0
  1704  0015E6                     _ssdUpdate:
  1705                           	callstack 27
  1706  0015E6                     
  1707                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  1708  0015E6  0E00               	movlw	0
  1709  0015E8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1710  0015EA  0E18               	movlw	24
  1711  0015EC  6E01               	movwf	digitalWrite@pin^0,c
  1712  0015EE  0E00               	movlw	0
  1713  0015F0  6E04               	movwf	(digitalWrite@value+1)^0,c
  1714  0015F2  0E00               	movlw	0
  1715  0015F4  6E03               	movwf	digitalWrite@value^0,c
  1716  0015F6  EC66  F006         	call	_digitalWrite	;wreg free
  1717                           
  1718                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  1719  0015FA  0E00               	movlw	0
  1720  0015FC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1721  0015FE  0E19               	movlw	25
  1722  001600  6E01               	movwf	digitalWrite@pin^0,c
  1723  001602  0E00               	movlw	0
  1724  001604  6E04               	movwf	(digitalWrite@value+1)^0,c
  1725  001606  0E00               	movlw	0
  1726  001608  6E03               	movwf	digitalWrite@value^0,c
  1727  00160A  EC66  F006         	call	_digitalWrite	;wreg free
  1728                           
  1729                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  1730  00160E  0E00               	movlw	0
  1731  001610  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1732  001612  0E1A               	movlw	26
  1733  001614  6E01               	movwf	digitalWrite@pin^0,c
  1734  001616  0E00               	movlw	0
  1735  001618  6E04               	movwf	(digitalWrite@value+1)^0,c
  1736  00161A  0E00               	movlw	0
  1737  00161C  6E03               	movwf	digitalWrite@value^0,c
  1738  00161E  EC66  F006         	call	_digitalWrite	;wreg free
  1739                           
  1740                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  1741  001622  0E00               	movlw	0
  1742  001624  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1743  001626  0E1B               	movlw	27
  1744  001628  6E01               	movwf	digitalWrite@pin^0,c
  1745  00162A  0E00               	movlw	0
  1746  00162C  6E04               	movwf	(digitalWrite@value+1)^0,c
  1747  00162E  0E00               	movlw	0
  1748  001630  6E03               	movwf	digitalWrite@value^0,c
  1749  001632  EC66  F006         	call	_digitalWrite	;wreg free
  1750                           
  1751                           ;ssd.c: 60:     soWrite(0x00);
  1752  001636  0E00               	movlw	0
  1753  001638  6E08               	movwf	(soWrite@value+1)^0,c
  1754  00163A  0E00               	movlw	0
  1755  00163C  6E07               	movwf	soWrite@value^0,c
  1756  00163E  EC1A  F013         	call	_soWrite	;wreg free
  1757                           
  1758                           ;ssd.c: 62:     switch (display)
  1759  001642  EF8B  F00B         	goto	l3062
  1760  001646                     l3034:
  1761                           
  1762                           ;ssd.c: 65:             soWrite(valor[v0]);
  1763  001646  0E01               	movlw	low _valor
  1764  001648  244A               	addwf	_v0^0,w,c
  1765  00164A  6EF6               	movwf	tblptrl,c
  1766  00164C  6AF7               	clrf	tblptrh,c
  1767  00164E  0E06               	movlw	high _valor
  1768  001650  22F7               	addwfc	tblptrh,f,c
  1769  001652                     	if	0	;There are less than 3 active tblptr bytes
  1770  001652                     	endif
  1771  001652  0008               	tblrd		*
  1772  001654  50F5               	movf	tablat,w,c
  1773  001656  6E07               	movwf	soWrite@value^0,c
  1774  001658  6A08               	clrf	(soWrite@value+1)^0,c
  1775  00165A  EC1A  F013         	call	_soWrite	;wreg free
  1776  00165E                     
  1777                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  1778  00165E  0E00               	movlw	0
  1779  001660  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1780  001662  0E18               	movlw	24
  1781  001664  6E01               	movwf	digitalWrite@pin^0,c
  1782  001666  0E00               	movlw	0
  1783  001668  6E04               	movwf	(digitalWrite@value+1)^0,c
  1784  00166A  0E01               	movlw	1
  1785  00166C  6E03               	movwf	digitalWrite@value^0,c
  1786  00166E  EC66  F006         	call	_digitalWrite	;wreg free
  1787  001672                     
  1788                           ;ssd.c: 67:             display = 1;
  1789  001672  0E01               	movlw	1
  1790  001674  6E4B               	movwf	_display^0,c
  1791                           
  1792                           ;ssd.c: 68:             break;
  1793  001676  EFA8  F00B         	goto	l344
  1794  00167A                     l3040:
  1795                           
  1796                           ;ssd.c: 71:             soWrite(valor[v1]);
  1797  00167A  0E01               	movlw	low _valor
  1798  00167C  2449               	addwf	_v1^0,w,c
  1799  00167E  6EF6               	movwf	tblptrl,c
  1800  001680  6AF7               	clrf	tblptrh,c
  1801  001682  0E06               	movlw	high _valor
  1802  001684  22F7               	addwfc	tblptrh,f,c
  1803  001686                     	if	0	;There are less than 3 active tblptr bytes
  1804  001686                     	endif
  1805  001686  0008               	tblrd		*
  1806  001688  50F5               	movf	tablat,w,c
  1807  00168A  6E07               	movwf	soWrite@value^0,c
  1808  00168C  6A08               	clrf	(soWrite@value+1)^0,c
  1809  00168E  EC1A  F013         	call	_soWrite	;wreg free
  1810  001692                     
  1811                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  1812  001692  0E00               	movlw	0
  1813  001694  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1814  001696  0E19               	movlw	25
  1815  001698  6E01               	movwf	digitalWrite@pin^0,c
  1816  00169A  0E00               	movlw	0
  1817  00169C  6E04               	movwf	(digitalWrite@value+1)^0,c
  1818  00169E  0E01               	movlw	1
  1819  0016A0  6E03               	movwf	digitalWrite@value^0,c
  1820  0016A2  EC66  F006         	call	_digitalWrite	;wreg free
  1821  0016A6                     
  1822                           ;ssd.c: 73:             display = 2;
  1823  0016A6  0E02               	movlw	2
  1824  0016A8  6E4B               	movwf	_display^0,c
  1825                           
  1826                           ;ssd.c: 74:             break;
  1827  0016AA  EFA8  F00B         	goto	l344
  1828  0016AE                     l3046:
  1829                           
  1830                           ;ssd.c: 77:             soWrite(valor[v2]);
  1831  0016AE  0E01               	movlw	low _valor
  1832  0016B0  2448               	addwf	_v2^0,w,c
  1833  0016B2  6EF6               	movwf	tblptrl,c
  1834  0016B4  6AF7               	clrf	tblptrh,c
  1835  0016B6  0E06               	movlw	high _valor
  1836  0016B8  22F7               	addwfc	tblptrh,f,c
  1837  0016BA                     	if	0	;There are less than 3 active tblptr bytes
  1838  0016BA                     	endif
  1839  0016BA  0008               	tblrd		*
  1840  0016BC  50F5               	movf	tablat,w,c
  1841  0016BE  6E07               	movwf	soWrite@value^0,c
  1842  0016C0  6A08               	clrf	(soWrite@value+1)^0,c
  1843  0016C2  EC1A  F013         	call	_soWrite	;wreg free
  1844  0016C6                     
  1845                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  1846  0016C6  0E00               	movlw	0
  1847  0016C8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1848  0016CA  0E1A               	movlw	26
  1849  0016CC  6E01               	movwf	digitalWrite@pin^0,c
  1850  0016CE  0E00               	movlw	0
  1851  0016D0  6E04               	movwf	(digitalWrite@value+1)^0,c
  1852  0016D2  0E01               	movlw	1
  1853  0016D4  6E03               	movwf	digitalWrite@value^0,c
  1854  0016D6  EC66  F006         	call	_digitalWrite	;wreg free
  1855  0016DA                     
  1856                           ;ssd.c: 79:             display = 3;
  1857  0016DA  0E03               	movlw	3
  1858  0016DC  6E4B               	movwf	_display^0,c
  1859                           
  1860                           ;ssd.c: 80:             break;
  1861  0016DE  EFA8  F00B         	goto	l344
  1862  0016E2                     l3052:
  1863                           
  1864                           ;ssd.c: 83:             soWrite(valor[v3]);
  1865  0016E2  0E01               	movlw	low _valor
  1866  0016E4  2447               	addwf	_v3^0,w,c
  1867  0016E6  6EF6               	movwf	tblptrl,c
  1868  0016E8  6AF7               	clrf	tblptrh,c
  1869  0016EA  0E06               	movlw	high _valor
  1870  0016EC  22F7               	addwfc	tblptrh,f,c
  1871  0016EE                     	if	0	;There are less than 3 active tblptr bytes
  1872  0016EE                     	endif
  1873  0016EE  0008               	tblrd		*
  1874  0016F0  50F5               	movf	tablat,w,c
  1875  0016F2  6E07               	movwf	soWrite@value^0,c
  1876  0016F4  6A08               	clrf	(soWrite@value+1)^0,c
  1877  0016F6  EC1A  F013         	call	_soWrite	;wreg free
  1878  0016FA                     
  1879                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  1880  0016FA  0E00               	movlw	0
  1881  0016FC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1882  0016FE  0E1B               	movlw	27
  1883  001700  6E01               	movwf	digitalWrite@pin^0,c
  1884  001702  0E00               	movlw	0
  1885  001704  6E04               	movwf	(digitalWrite@value+1)^0,c
  1886  001706  0E01               	movlw	1
  1887  001708  6E03               	movwf	digitalWrite@value^0,c
  1888  00170A  EC66  F006         	call	_digitalWrite	;wreg free
  1889  00170E                     l3056:
  1890                           
  1891                           ;ssd.c: 85:             display = 0;
  1892  00170E  0E00               	movlw	0
  1893  001710  6E4B               	movwf	_display^0,c
  1894                           
  1895                           ;ssd.c: 86:             break;
  1896  001712  EFA8  F00B         	goto	l344
  1897  001716                     l3062:
  1898  001716  504B               	movf	_display^0,w,c
  1899  001718  6E0A               	movwf	??_ssdUpdate^0,c
  1900  00171A  6A0B               	clrf	(??_ssdUpdate+1)^0,c
  1901                           
  1902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1903                           ; Switch size 1, requested type "simple"
  1904                           ; Number of cases is 1, Range of values is 0 to 0
  1905                           ; switch strategies available:
  1906                           ; Name         Instructions Cycles
  1907                           ; simple_byte            4     3 (average)
  1908                           ;	Chosen strategy is simple_byte
  1909  00171C  500B               	movf	(??_ssdUpdate+1)^0,w,c
  1910  00171E  0A00               	xorlw	0	; case 0
  1911  001720  B4D8               	btfsc	status,2,c
  1912  001722  EF95  F00B         	goto	l3402
  1913  001726  EF87  F00B         	goto	l3056
  1914  00172A                     l3402:
  1915                           
  1916                           ; Switch size 1, requested type "simple"
  1917                           ; Number of cases is 4, Range of values is 0 to 3
  1918                           ; switch strategies available:
  1919                           ; Name         Instructions Cycles
  1920                           ; simple_byte           13     7 (average)
  1921                           ;	Chosen strategy is simple_byte
  1922  00172A  500A               	movf	??_ssdUpdate^0,w,c
  1923  00172C  0A00               	xorlw	0	; case 0
  1924  00172E  B4D8               	btfsc	status,2,c
  1925  001730  EF23  F00B         	goto	l3034
  1926  001734  0A01               	xorlw	1	; case 1
  1927  001736  B4D8               	btfsc	status,2,c
  1928  001738  EF3D  F00B         	goto	l3040
  1929  00173C  0A03               	xorlw	3	; case 2
  1930  00173E  B4D8               	btfsc	status,2,c
  1931  001740  EF57  F00B         	goto	l3046
  1932  001744  0A01               	xorlw	1	; case 3
  1933  001746  B4D8               	btfsc	status,2,c
  1934  001748  EF71  F00B         	goto	l3052
  1935  00174C  EF87  F00B         	goto	l3056
  1936  001750                     l344:
  1937  001750  0012               	return		;funcret
  1938  001752                     __end_of_ssdUpdate:
  1939                           	callstack 0
  1940                           
  1941 ;; *************** function _ssdInit *****************
  1942 ;; Defined at:
  1943 ;;		line 94 in file "ssd.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;		None
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;		None
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  1    wreg      void 
  1950 ;; Registers used:
  1951 ;;		wreg, status,2, status,0, cstack
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1957 ;;      Params:         0       0       0       0       0       0       0
  1958 ;;      Locals:         0       0       0       0       0       0       0
  1959 ;;      Temps:          0       0       0       0       0       0       0
  1960 ;;      Totals:         0       0       0       0       0       0       0
  1961 ;;Total ram usage:        0 bytes
  1962 ;; Hardware stack levels used: 1
  1963 ;; Hardware stack levels required when called: 2
  1964 ;; This function calls:
  1965 ;;		_pinMode
  1966 ;;		_soInit
  1967 ;; This function is called by:
  1968 ;;		_main
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text8
  1973  0024E4                     __ptext8:
  1974                           	callstack 0
  1975  0024E4                     _ssdInit:
  1976                           	callstack 28
  1977  0024E4                     
  1978                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
  1979  0024E4  0E00               	movlw	0
  1980  0024E6  6E02               	movwf	(pinMode@pin+1)^0,c
  1981  0024E8  0E18               	movlw	24
  1982  0024EA  6E01               	movwf	pinMode@pin^0,c
  1983  0024EC  0E00               	movlw	0
  1984  0024EE  6E04               	movwf	(pinMode@type+1)^0,c
  1985  0024F0  0E00               	movlw	0
  1986  0024F2  6E03               	movwf	pinMode@type^0,c
  1987  0024F4  EC8D  F007         	call	_pinMode	;wreg free
  1988                           
  1989                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
  1990  0024F8  0E00               	movlw	0
  1991  0024FA  6E02               	movwf	(pinMode@pin+1)^0,c
  1992  0024FC  0E19               	movlw	25
  1993  0024FE  6E01               	movwf	pinMode@pin^0,c
  1994  002500  0E00               	movlw	0
  1995  002502  6E04               	movwf	(pinMode@type+1)^0,c
  1996  002504  0E00               	movlw	0
  1997  002506  6E03               	movwf	pinMode@type^0,c
  1998  002508  EC8D  F007         	call	_pinMode	;wreg free
  1999                           
  2000                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
  2001  00250C  0E00               	movlw	0
  2002  00250E  6E02               	movwf	(pinMode@pin+1)^0,c
  2003  002510  0E1A               	movlw	26
  2004  002512  6E01               	movwf	pinMode@pin^0,c
  2005  002514  0E00               	movlw	0
  2006  002516  6E04               	movwf	(pinMode@type+1)^0,c
  2007  002518  0E00               	movlw	0
  2008  00251A  6E03               	movwf	pinMode@type^0,c
  2009  00251C  EC8D  F007         	call	_pinMode	;wreg free
  2010                           
  2011                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
  2012  002520  0E00               	movlw	0
  2013  002522  6E02               	movwf	(pinMode@pin+1)^0,c
  2014  002524  0E1B               	movlw	27
  2015  002526  6E01               	movwf	pinMode@pin^0,c
  2016  002528  0E00               	movlw	0
  2017  00252A  6E04               	movwf	(pinMode@type+1)^0,c
  2018  00252C  0E00               	movlw	0
  2019  00252E  6E03               	movwf	pinMode@type^0,c
  2020  002530  EC8D  F007         	call	_pinMode	;wreg free
  2021                           
  2022                           ;ssd.c: 102:     soInit();
  2023  002534  ECED  F013         	call	_soInit	;wreg free
  2024  002538  0012               	return		;funcret
  2025  00253A                     __end_of_ssdInit:
  2026                           	callstack 0
  2027                           
  2028 ;; *************** function _pwmInit *****************
  2029 ;; Defined at:
  2030 ;;		line 51 in file "pwm.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;		None
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;		None
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  1    wreg      void 
  2037 ;; Registers used:
  2038 ;;		wreg, status,2, status,0, cstack
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2044 ;;      Params:         0       0       0       0       0       0       0
  2045 ;;      Locals:         0       0       0       0       0       0       0
  2046 ;;      Temps:          0       0       0       0       0       0       0
  2047 ;;      Totals:         0       0       0       0       0       0       0
  2048 ;;Total ram usage:        0 bytes
  2049 ;; Hardware stack levels used: 1
  2050 ;; Hardware stack levels required when called: 2
  2051 ;; This function calls:
  2052 ;;		_pwmFrequency
  2053 ;; This function is called by:
  2054 ;;		_main
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           	psect	text9
  2059  002B72                     __ptext9:
  2060                           	callstack 0
  2061  002B72                     _pwmInit:
  2062                           	callstack 28
  2063  002B72                     
  2064                           ;pwm.c: 53:  ((TRISC) &= ~(1<<(1)));
  2065  002B72  9294               	bcf	148,1,c	;volatile
  2066  002B74                     
  2067                           ;pwm.c: 55:  T2CON |= 0b00000011;
  2068  002B74  0E03               	movlw	3
  2069  002B76  12CA               	iorwf	202,f,c	;volatile
  2070  002B78                     
  2071                           ;pwm.c: 56:  ((T2CON) |= (1<<(2)));
  2072  002B78  84CA               	bsf	202,2,c	;volatile
  2073  002B7A                     
  2074                           ;pwm.c: 58:  CCP2CON = 0b00001100;
  2075  002B7A  0E0C               	movlw	12
  2076  002B7C  6EBA               	movwf	186,c	;volatile
  2077  002B7E                     
  2078                           ;pwm.c: 60:     pwmFrequency(100);
  2079  002B7E  0E00               	movlw	0
  2080  002B80  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  2081  002B82  0E64               	movlw	100
  2082  002B84  6E0F               	movwf	pwmFrequency@freq^0,c
  2083  002B86  EC31  F015         	call	_pwmFrequency	;wreg free
  2084  002B8A  0012               	return		;funcret
  2085  002B8C                     __end_of_pwmInit:
  2086                           	callstack 0
  2087                           
  2088 ;; *************** function _pwmFrequency *****************
  2089 ;; Defined at:
  2090 ;;		line 44 in file "pwm.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  freq            2   14[COMRAM] unsigned int 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;		None
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  1    wreg      void 
  2097 ;; Registers used:
  2098 ;;		wreg, status,2, status,0, cstack
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2104 ;;      Params:         2       0       0       0       0       0       0
  2105 ;;      Locals:         0       0       0       0       0       0       0
  2106 ;;      Temps:          0       0       0       0       0       0       0
  2107 ;;      Totals:         2       0       0       0       0       0       0
  2108 ;;Total ram usage:        2 bytes
  2109 ;; Hardware stack levels used: 1
  2110 ;; Hardware stack levels required when called: 1
  2111 ;; This function calls:
  2112 ;;		___aldiv
  2113 ;; This function is called by:
  2114 ;;		_pwmInit
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text10
  2119  002A62                     __ptext10:
  2120                           	callstack 0
  2121  002A62                     _pwmFrequency:
  2122                           	callstack 28
  2123  002A62                     
  2124                           ;pwm.c: 44: void pwmFrequency(unsigned int freq);pwm.c: 45: {;pwm.c: 48:  PR2 = (125000l
      +                          /(freq)) - 1;
  2125  002A62  0E48               	movlw	72
  2126  002A64  6E01               	movwf	___aldiv@dividend^0,c
  2127  002A66  0EE8               	movlw	232
  2128  002A68  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2129  002A6A  0E01               	movlw	1
  2130  002A6C  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2131  002A6E  0E00               	movlw	0
  2132  002A70  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2133  002A72  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  2134  002A76  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  2135  002A7A  6A07               	clrf	(___aldiv@divisor+2)^0,c
  2136  002A7C  6A08               	clrf	(___aldiv@divisor+3)^0,c
  2137  002A7E  EC85  F00D         	call	___aldiv	;wreg free
  2138  002A82  0401               	decf	?___aldiv^0,w,c
  2139  002A84  6ECB               	movwf	203,c	;volatile
  2140  002A86  0012               	return		;funcret
  2141  002A88                     __end_of_pwmFrequency:
  2142                           	callstack 0
  2143                           
  2144 ;; *************** function ___aldiv *****************
  2145 ;; Defined at:
  2146 ;;		line 7 in file "D:\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  dividend        4    0[COMRAM] long 
  2149 ;;  divisor         4    4[COMRAM] long 
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;  quotient        4   10[COMRAM] long 
  2152 ;;  sign            1    9[COMRAM] unsigned char 
  2153 ;;  counter         1    8[COMRAM] unsigned char 
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  4    0[COMRAM] long 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2163 ;;      Params:         8       0       0       0       0       0       0
  2164 ;;      Locals:         6       0       0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0       0       0
  2166 ;;      Totals:        14       0       0       0       0       0       0
  2167 ;;Total ram usage:       14 bytes
  2168 ;; Hardware stack levels used: 1
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		_pwmFrequency
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text11
  2177  001B0A                     __ptext11:
  2178                           	callstack 0
  2179  001B0A                     ___aldiv:
  2180                           	callstack 28
  2181  001B0A  0E00               	movlw	0
  2182  001B0C  6E0A               	movwf	___aldiv@sign^0,c
  2183  001B0E  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  2184  001B10  EF8E  F00D         	goto	u2540
  2185  001B14  EF8C  F00D         	goto	u2541
  2186  001B18                     u2541:
  2187  001B18  EF98  F00D         	goto	l2752
  2188  001B1C                     u2540:
  2189  001B1C  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  2190  001B1E  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  2191  001B20  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  2192  001B22  6C05               	negf	___aldiv@divisor^0,c
  2193  001B24  0E00               	movlw	0
  2194  001B26  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  2195  001B28  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  2196  001B2A  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  2197  001B2C  0E01               	movlw	1
  2198  001B2E  6E0A               	movwf	___aldiv@sign^0,c
  2199  001B30                     l2752:
  2200  001B30  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  2201  001B32  EF9F  F00D         	goto	u2550
  2202  001B36  EF9D  F00D         	goto	u2551
  2203  001B3A                     u2551:
  2204  001B3A  EFA9  F00D         	goto	l2758
  2205  001B3E                     u2550:
  2206  001B3E  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  2207  001B40  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  2208  001B42  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  2209  001B44  6C01               	negf	___aldiv@dividend^0,c
  2210  001B46  0E00               	movlw	0
  2211  001B48  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  2212  001B4A  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  2213  001B4C  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  2214  001B4E  0E01               	movlw	1
  2215  001B50  1A0A               	xorwf	___aldiv@sign^0,f,c
  2216  001B52                     l2758:
  2217  001B52  0E00               	movlw	0
  2218  001B54  6E0B               	movwf	___aldiv@quotient^0,c
  2219  001B56  0E00               	movlw	0
  2220  001B58  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  2221  001B5A  0E00               	movlw	0
  2222  001B5C  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  2223  001B5E  0E00               	movlw	0
  2224  001B60  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  2225  001B62  5005               	movf	___aldiv@divisor^0,w,c
  2226  001B64  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  2227  001B66  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  2228  001B68  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  2229  001B6A  B4D8               	btfsc	status,2,c
  2230  001B6C  EFBA  F00D         	goto	u2561
  2231  001B70  EFBC  F00D         	goto	u2560
  2232  001B74                     u2561:
  2233  001B74  EFF2  F00D         	goto	l2780
  2234  001B78                     u2560:
  2235  001B78  0E01               	movlw	1
  2236  001B7A  6E09               	movwf	___aldiv@counter^0,c
  2237  001B7C  EFC6  F00D         	goto	l2766
  2238  001B80                     l2764:
  2239  001B80  90D8               	bcf	status,0,c
  2240  001B82  3605               	rlcf	___aldiv@divisor^0,f,c
  2241  001B84  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  2242  001B86  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  2243  001B88  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  2244  001B8A  2A09               	incf	___aldiv@counter^0,f,c
  2245  001B8C                     l2766:
  2246  001B8C  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  2247  001B8E  EFCB  F00D         	goto	u2571
  2248  001B92  EFCD  F00D         	goto	u2570
  2249  001B96                     u2571:
  2250  001B96  EFC0  F00D         	goto	l2764
  2251  001B9A                     u2570:
  2252  001B9A                     l2768:
  2253  001B9A  90D8               	bcf	status,0,c
  2254  001B9C  360B               	rlcf	___aldiv@quotient^0,f,c
  2255  001B9E  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2256  001BA0  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2257  001BA2  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2258  001BA4  5005               	movf	___aldiv@divisor^0,w,c
  2259  001BA6  5C01               	subwf	___aldiv@dividend^0,w,c
  2260  001BA8  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2261  001BAA  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  2262  001BAC  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2263  001BAE  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  2264  001BB0  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2265  001BB2  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  2266  001BB4  A0D8               	btfss	status,0,c
  2267  001BB6  EFDF  F00D         	goto	u2581
  2268  001BBA  EFE1  F00D         	goto	u2580
  2269  001BBE                     u2581:
  2270  001BBE  EFEA  F00D         	goto	l2776
  2271  001BC2                     u2580:
  2272  001BC2  5005               	movf	___aldiv@divisor^0,w,c
  2273  001BC4  5E01               	subwf	___aldiv@dividend^0,f,c
  2274  001BC6  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2275  001BC8  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2276  001BCA  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2277  001BCC  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2278  001BCE  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2279  001BD0  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2280  001BD2  800B               	bsf	___aldiv@quotient^0,0,c
  2281  001BD4                     l2776:
  2282  001BD4  90D8               	bcf	status,0,c
  2283  001BD6  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2284  001BD8  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2285  001BDA  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2286  001BDC  3205               	rrcf	___aldiv@divisor^0,f,c
  2287  001BDE  2E09               	decfsz	___aldiv@counter^0,f,c
  2288  001BE0  EFCD  F00D         	goto	l2768
  2289  001BE4                     l2780:
  2290  001BE4  500A               	movf	___aldiv@sign^0,w,c
  2291  001BE6  B4D8               	btfsc	status,2,c
  2292  001BE8  EFF8  F00D         	goto	u2591
  2293  001BEC  EFFA  F00D         	goto	u2590
  2294  001BF0                     u2591:
  2295  001BF0  EF02  F00E         	goto	l2784
  2296  001BF4                     u2590:
  2297  001BF4  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2298  001BF6  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2299  001BF8  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2300  001BFA  6C0B               	negf	___aldiv@quotient^0,c
  2301  001BFC  0E00               	movlw	0
  2302  001BFE  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2303  001C00  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2304  001C02  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2305  001C04                     l2784:
  2306  001C04  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2307  001C08  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2308  001C0C  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2309  001C10  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2310  001C14  0012               	return		;funcret
  2311  001C16                     __end_of___aldiv:
  2312                           	callstack 0
  2313                           
  2314 ;; *************** function _leTeclado *****************
  2315 ;; Defined at:
  2316 ;;		line 118 in file "main.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;		None
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;		None
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      void 
  2323 ;; Registers used:
  2324 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2330 ;;      Params:         0       0       0       0       0       0       0
  2331 ;;      Locals:         0       0       0       0       0       0       0
  2332 ;;      Temps:          0       0       0       0       0       0       0
  2333 ;;      Totals:         0       0       0       0       0       0       0
  2334 ;;Total ram usage:        0 bytes
  2335 ;; Hardware stack levels used: 1
  2336 ;; Hardware stack levels required when called: 7
  2337 ;; This function calls:
  2338 ;;		_atualizaLCD
  2339 ;;		_kpDebounce
  2340 ;;		_kpRead
  2341 ;;		_lcdCommand
  2342 ;; This function is called by:
  2343 ;;		_main
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           	psect	text12
  2348  0013B0                     __ptext12:
  2349                           	callstack 0
  2350  0013B0                     _leTeclado:
  2351                           	callstack 23
  2352  0013B0                     
  2353                           ;main.c: 119:     static unsigned int tecla = 16;;main.c: 121:     kpDebounce();
  2354  0013B0  EC5E  F00C         	call	_kpDebounce	;wreg free
  2355                           
  2356                           ;main.c: 122:     if(kpRead() != tecla){
  2357  0013B4  ECCE  F015         	call	_kpRead	;wreg free
  2358  0013B8  5066               	movf	leTeclado@tecla^0,w,c
  2359  0013BA  1801               	xorwf	?_kpRead^0,w,c
  2360  0013BC  E109               	bnz	u2990
  2361  0013BE  5067               	movf	(leTeclado@tecla+1)^0,w,c
  2362  0013C0  1802               	xorwf	(?_kpRead+1)^0,w,c
  2363  0013C2  B4D8               	btfsc	status,2,c
  2364  0013C4  EFE6  F009         	goto	u2991
  2365  0013C8  EFE8  F009         	goto	u2990
  2366  0013CC                     u2991:
  2367  0013CC  EFF2  F00A         	goto	l482
  2368  0013D0                     u2990:
  2369  0013D0                     
  2370                           ;main.c: 123:         tecla = kpRead();
  2371  0013D0  ECCE  F015         	call	_kpRead	;wreg free
  2372  0013D4  C001  F066         	movff	?_kpRead,leTeclado@tecla
  2373  0013D8  C002  F067         	movff	?_kpRead+1,leTeclado@tecla+1
  2374  0013DC                     
  2375                           ;main.c: 124:         if(((tecla) & (1<<(9)))){state = 1; lcdCommand(0x01);}
  2376  0013DC  A267               	btfss	(leTeclado@tecla+1)^0,1,c
  2377  0013DE  EFF3  F009         	goto	u3001
  2378  0013E2  EFF5  F009         	goto	u3000
  2379  0013E6                     u3001:
  2380  0013E6  EFFA  F009         	goto	l3182
  2381  0013EA                     u3000:
  2382  0013EA  0E01               	movlw	1
  2383  0013EC  6E45               	movwf	_state^0,c
  2384  0013EE  0E01               	movlw	1
  2385  0013F0  EC9D  F015         	call	_lcdCommand
  2386  0013F4                     l3182:
  2387                           
  2388                           ;main.c: 125:         if(state != 0){
  2389  0013F4  5045               	movf	_state^0,w,c
  2390  0013F6  B4D8               	btfsc	status,2,c
  2391  0013F8  EF00  F00A         	goto	u3011
  2392  0013FC  EF02  F00A         	goto	u3010
  2393  001400                     u3011:
  2394  001400  EFF2  F00A         	goto	l482
  2395  001404                     u3010:
  2396  001404                     
  2397                           ;main.c: 126:             if(((tecla) & (1<<(5)))){modo = 5; min = 10; seg = 0; lcdComma
      +                          nd(0x01);}
  2398  001404  AA66               	btfss	leTeclado@tecla^0,5,c
  2399  001406  EF07  F00A         	goto	u3021
  2400  00140A  EF09  F00A         	goto	u3020
  2401  00140E                     u3021:
  2402  00140E  EF16  F00A         	goto	l3190
  2403  001412                     u3020:
  2404  001412  0E05               	movlw	5
  2405  001414  6E46               	movwf	_modo^0,c
  2406  001416  0E00               	movlw	0
  2407  001418  6E3B               	movwf	(_min+1)^0,c
  2408  00141A  0E0A               	movlw	10
  2409  00141C  6E3A               	movwf	_min^0,c
  2410  00141E  0E00               	movlw	0
  2411  001420  6E39               	movwf	(_seg+1)^0,c
  2412  001422  0E00               	movlw	0
  2413  001424  6E38               	movwf	_seg^0,c
  2414  001426  0E01               	movlw	1
  2415  001428  EC9D  F015         	call	_lcdCommand
  2416  00142C                     l3190:
  2417                           
  2418                           ;main.c: 127:             if(((tecla) & (1<<(6)))){modo = 6; min = 15; seg = 0; lcdComma
      +                          nd(0x01);}
  2419  00142C  AC66               	btfss	leTeclado@tecla^0,6,c
  2420  00142E  EF1B  F00A         	goto	u3031
  2421  001432  EF1D  F00A         	goto	u3030
  2422  001436                     u3031:
  2423  001436  EF2A  F00A         	goto	l3196
  2424  00143A                     u3030:
  2425  00143A  0E06               	movlw	6
  2426  00143C  6E46               	movwf	_modo^0,c
  2427  00143E  0E00               	movlw	0
  2428  001440  6E3B               	movwf	(_min+1)^0,c
  2429  001442  0E0F               	movlw	15
  2430  001444  6E3A               	movwf	_min^0,c
  2431  001446  0E00               	movlw	0
  2432  001448  6E39               	movwf	(_seg+1)^0,c
  2433  00144A  0E00               	movlw	0
  2434  00144C  6E38               	movwf	_seg^0,c
  2435  00144E  0E01               	movlw	1
  2436  001450  EC9D  F015         	call	_lcdCommand
  2437  001454                     l3196:
  2438                           
  2439                           ;main.c: 128:             if(((tecla) & (1<<(8)))){modo = 8; lcdCommand(0x01);}
  2440  001454  A067               	btfss	(leTeclado@tecla+1)^0,0,c
  2441  001456  EF2F  F00A         	goto	u3041
  2442  00145A  EF31  F00A         	goto	u3040
  2443  00145E                     u3041:
  2444  00145E  EF36  F00A         	goto	l3202
  2445  001462                     u3040:
  2446  001462  0E08               	movlw	8
  2447  001464  6E46               	movwf	_modo^0,c
  2448  001466  0E01               	movlw	1
  2449  001468  EC9D  F015         	call	_lcdCommand
  2450  00146C                     l3202:
  2451                           
  2452                           ;main.c: 129:             if(((tecla) & (1<<(7)))){resist++; if(resist>2){resist = 0;}}
  2453  00146C  AE66               	btfss	leTeclado@tecla^0,7,c
  2454  00146E  EF3B  F00A         	goto	u3051
  2455  001472  EF3D  F00A         	goto	u3050
  2456  001476                     u3051:
  2457  001476  EF48  F00A         	goto	l467
  2458  00147A                     u3050:
  2459  00147A  2A44               	incf	_resist^0,f,c
  2460  00147C  0E02               	movlw	2
  2461  00147E  6444               	cpfsgt	_resist^0,c
  2462  001480  EF44  F00A         	goto	u3061
  2463  001484  EF46  F00A         	goto	u3060
  2464  001488                     u3061:
  2465  001488  EF48  F00A         	goto	l467
  2466  00148C                     u3060:
  2467  00148C  0E00               	movlw	0
  2468  00148E  6E44               	movwf	_resist^0,c
  2469  001490                     l467:
  2470                           
  2471                           ;main.c: 131:             if(start == 0){
  2472  001490  5043               	movf	_start^0,w,c
  2473  001492  A4D8               	btfss	status,2,c
  2474  001494  EF4E  F00A         	goto	u3071
  2475  001498  EF50  F00A         	goto	u3070
  2476  00149C                     u3071:
  2477  00149C  EFD4  F00A         	goto	l3254
  2478  0014A0                     u3070:
  2479  0014A0                     
  2480                           ;main.c: 132:                 if(((tecla) & (1<<(0)))){min++; if(min>99){min=99;}}
  2481  0014A0  A066               	btfss	leTeclado@tecla^0,0,c
  2482  0014A2  EF55  F00A         	goto	u3081
  2483  0014A6  EF57  F00A         	goto	u3080
  2484  0014AA                     u3081:
  2485  0014AA  EF6B  F00A         	goto	l3218
  2486  0014AE                     u3080:
  2487  0014AE  4A3A               	infsnz	_min^0,f,c
  2488  0014B0  2A3B               	incf	(_min+1)^0,f,c
  2489  0014B2  BE3B               	btfsc	(_min+1)^0,7,c
  2490  0014B4  EF65  F00A         	goto	u3091
  2491  0014B8  503B               	movf	(_min+1)^0,w,c
  2492  0014BA  E109               	bnz	u3090
  2493  0014BC  0E64               	movlw	100
  2494  0014BE  5C3A               	subwf	_min^0,w,c
  2495  0014C0  A0D8               	btfss	status,0,c
  2496  0014C2  EF65  F00A         	goto	u3091
  2497  0014C6  EF67  F00A         	goto	u3090
  2498  0014CA                     u3091:
  2499  0014CA  EF6B  F00A         	goto	l3218
  2500  0014CE                     u3090:
  2501  0014CE  0E00               	movlw	0
  2502  0014D0  6E3B               	movwf	(_min+1)^0,c
  2503  0014D2  0E63               	movlw	99
  2504  0014D4  6E3A               	movwf	_min^0,c
  2505  0014D6                     l3218:
  2506                           
  2507                           ;main.c: 133:                 if(((tecla) & (1<<(2)))){min--; if(min<0){min=0;}}
  2508  0014D6  A466               	btfss	leTeclado@tecla^0,2,c
  2509  0014D8  EF70  F00A         	goto	u3101
  2510  0014DC  EF72  F00A         	goto	u3100
  2511  0014E0                     u3101:
  2512  0014E0  EF80  F00A         	goto	l3226
  2513  0014E4                     u3100:
  2514  0014E4  063A               	decf	_min^0,f,c
  2515  0014E6  A0D8               	btfss	status,0,c
  2516  0014E8  063B               	decf	(_min+1)^0,f,c
  2517  0014EA  BE3B               	btfsc	(_min+1)^0,7,c
  2518  0014EC  EF7C  F00A         	goto	u3110
  2519  0014F0  EF7A  F00A         	goto	u3111
  2520  0014F4                     u3111:
  2521  0014F4  EF80  F00A         	goto	l3226
  2522  0014F8                     u3110:
  2523  0014F8  0E00               	movlw	0
  2524  0014FA  6E3B               	movwf	(_min+1)^0,c
  2525  0014FC  0E00               	movlw	0
  2526  0014FE  6E3A               	movwf	_min^0,c
  2527  001500                     l3226:
  2528                           
  2529                           ;main.c: 134:                 if(((tecla) & (1<<(3)))){seg++; if(seg>59){seg=0; min++; i
      +                          f(min>99){min=99;}}}
  2530  001500  A666               	btfss	leTeclado@tecla^0,3,c
  2531  001502  EF85  F00A         	goto	u3121
  2532  001506  EF87  F00A         	goto	u3120
  2533  00150A                     u3121:
  2534  00150A  EFAF  F00A         	goto	l3240
  2535  00150E                     u3120:
  2536  00150E  4A38               	infsnz	_seg^0,f,c
  2537  001510  2A39               	incf	(_seg+1)^0,f,c
  2538  001512  BE39               	btfsc	(_seg+1)^0,7,c
  2539  001514  EF95  F00A         	goto	u3131
  2540  001518  5039               	movf	(_seg+1)^0,w,c
  2541  00151A  E109               	bnz	u3130
  2542  00151C  0E3C               	movlw	60
  2543  00151E  5C38               	subwf	_seg^0,w,c
  2544  001520  A0D8               	btfss	status,0,c
  2545  001522  EF95  F00A         	goto	u3131
  2546  001526  EF97  F00A         	goto	u3130
  2547  00152A                     u3131:
  2548  00152A  EFAF  F00A         	goto	l3240
  2549  00152E                     u3130:
  2550  00152E  0E00               	movlw	0
  2551  001530  6E39               	movwf	(_seg+1)^0,c
  2552  001532  0E00               	movlw	0
  2553  001534  6E38               	movwf	_seg^0,c
  2554  001536  4A3A               	infsnz	_min^0,f,c
  2555  001538  2A3B               	incf	(_min+1)^0,f,c
  2556  00153A  BE3B               	btfsc	(_min+1)^0,7,c
  2557  00153C  EFA9  F00A         	goto	u3141
  2558  001540  503B               	movf	(_min+1)^0,w,c
  2559  001542  E109               	bnz	u3140
  2560  001544  0E64               	movlw	100
  2561  001546  5C3A               	subwf	_min^0,w,c
  2562  001548  A0D8               	btfss	status,0,c
  2563  00154A  EFA9  F00A         	goto	u3141
  2564  00154E  EFAB  F00A         	goto	u3140
  2565  001552                     u3141:
  2566  001552  EFAF  F00A         	goto	l3240
  2567  001556                     u3140:
  2568  001556  0E00               	movlw	0
  2569  001558  6E3B               	movwf	(_min+1)^0,c
  2570  00155A  0E63               	movlw	99
  2571  00155C  6E3A               	movwf	_min^0,c
  2572  00155E                     l3240:
  2573                           
  2574                           ;main.c: 135:                 if(((tecla) & (1<<(1)))){seg--; if(seg<0){seg=59; min--; i
      +                          f(min<0){min=0;}}}
  2575  00155E  A266               	btfss	leTeclado@tecla^0,1,c
  2576  001560  EFB4  F00A         	goto	u3151
  2577  001564  EFB6  F00A         	goto	u3150
  2578  001568                     u3151:
  2579  001568  EFD4  F00A         	goto	l3254
  2580  00156C                     u3150:
  2581  00156C  0638               	decf	_seg^0,f,c
  2582  00156E  A0D8               	btfss	status,0,c
  2583  001570  0639               	decf	(_seg+1)^0,f,c
  2584  001572  BE39               	btfsc	(_seg+1)^0,7,c
  2585  001574  EFC0  F00A         	goto	u3160
  2586  001578  EFBE  F00A         	goto	u3161
  2587  00157C                     u3161:
  2588  00157C  EFD4  F00A         	goto	l3254
  2589  001580                     u3160:
  2590  001580  0E00               	movlw	0
  2591  001582  6E39               	movwf	(_seg+1)^0,c
  2592  001584  0E3B               	movlw	59
  2593  001586  6E38               	movwf	_seg^0,c
  2594  001588  063A               	decf	_min^0,f,c
  2595  00158A  A0D8               	btfss	status,0,c
  2596  00158C  063B               	decf	(_min+1)^0,f,c
  2597  00158E  BE3B               	btfsc	(_min+1)^0,7,c
  2598  001590  EFCE  F00A         	goto	u3170
  2599  001594  EFCC  F00A         	goto	u3171
  2600  001598                     u3171:
  2601  001598  EFD4  F00A         	goto	l477
  2602  00159C                     u3170:
  2603  00159C  0E00               	movlw	0
  2604  00159E  6E3B               	movwf	(_min+1)^0,c
  2605  0015A0  0E00               	movlw	0
  2606  0015A2  6E3A               	movwf	_min^0,c
  2607  0015A4  EFD4  F00A         	goto	l3254
  2608  0015A8                     l477:
  2609  0015A8                     l3254:
  2610                           
  2611                           ;main.c: 137:             if(((tecla) & (1<<(4)))){start = !start; fim=0;}
  2612  0015A8  A866               	btfss	leTeclado@tecla^0,4,c
  2613  0015AA  EFD9  F00A         	goto	u3181
  2614  0015AE  EFDB  F00A         	goto	u3180
  2615  0015B2                     u3181:
  2616  0015B2  EFE8  F00A         	goto	l480
  2617  0015B6                     u3180:
  2618  0015B6  5043               	movf	_start^0,w,c
  2619  0015B8  B4D8               	btfsc	status,2,c
  2620  0015BA  EFE1  F00A         	goto	u3191
  2621  0015BE  EFE4  F00A         	goto	u3190
  2622  0015C2                     u3191:
  2623  0015C2  0E01               	movlw	1
  2624  0015C4  EFE5  F00A         	goto	u3200
  2625  0015C8                     u3190:
  2626  0015C8  0E00               	movlw	0
  2627  0015CA                     u3200:
  2628  0015CA  6E43               	movwf	_start^0,c
  2629  0015CC  0E00               	movlw	0
  2630  0015CE  6E42               	movwf	_fim^0,c
  2631  0015D0                     l480:
  2632                           
  2633                           ;main.c: 138:             if(modo!=0){
  2634  0015D0  5046               	movf	_modo^0,w,c
  2635  0015D2  B4D8               	btfsc	status,2,c
  2636  0015D4  EFEE  F00A         	goto	u3211
  2637  0015D8  EFF0  F00A         	goto	u3210
  2638  0015DC                     u3211:
  2639  0015DC  EFF2  F00A         	goto	l482
  2640  0015E0                     u3210:
  2641  0015E0                     
  2642                           ;main.c: 139:                 atualizaLCD();
  2643  0015E0  ECE0  F004         	call	_atualizaLCD	;wreg free
  2644  0015E4                     l482:
  2645  0015E4  0012               	return		;funcret
  2646  0015E6                     __end_of_leTeclado:
  2647                           	callstack 0
  2648                           
  2649 ;; *************** function _kpRead *****************
  2650 ;; Defined at:
  2651 ;;		line 14 in file "keypad.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;		None
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;		None
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  2    0[COMRAM] unsigned int 
  2658 ;; Registers used:
  2659 ;;		None
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2665 ;;      Params:         2       0       0       0       0       0       0
  2666 ;;      Locals:         0       0       0       0       0       0       0
  2667 ;;      Temps:          0       0       0       0       0       0       0
  2668 ;;      Totals:         2       0       0       0       0       0       0
  2669 ;;Total ram usage:        2 bytes
  2670 ;; Hardware stack levels used: 1
  2671 ;; This function calls:
  2672 ;;		Nothing
  2673 ;; This function is called by:
  2674 ;;		_leTeclado
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text13
  2679  002B9C                     __ptext13:
  2680                           	callstack 0
  2681  002B9C                     _kpRead:
  2682                           	callstack 29
  2683  002B9C                     
  2684                           ;keypad.c: 15:     return keys;
  2685  002B9C  C040  F001         	movff	_keys,?_kpRead
  2686  002BA0  C041  F002         	movff	_keys+1,?_kpRead+1
  2687  002BA4  0012               	return		;funcret
  2688  002BA6                     __end_of_kpRead:
  2689                           	callstack 0
  2690                           
  2691 ;; *************** function _kpDebounce *****************
  2692 ;; Defined at:
  2693 ;;		line 27 in file "keypad.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;		None
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  i               2   12[COMRAM] int 
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  1    wreg      void 
  2700 ;; Registers used:
  2701 ;;		wreg, status,2, status,0, cstack
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2707 ;;      Params:         0       0       0       0       0       0       0
  2708 ;;      Locals:         2       0       0       0       0       0       0
  2709 ;;      Temps:          3       0       0       0       0       0       0
  2710 ;;      Totals:         5       0       0       0       0       0       0
  2711 ;;Total ram usage:        5 bytes
  2712 ;; Hardware stack levels used: 1
  2713 ;; Hardware stack levels required when called: 3
  2714 ;; This function calls:
  2715 ;;		_digitalRead
  2716 ;;		_soWrite
  2717 ;; This function is called by:
  2718 ;;		_leTeclado
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text14
  2723  0018BC                     __ptext14:
  2724                           	callstack 0
  2725  0018BC                     _kpDebounce:
  2726                           	callstack 26
  2727  0018BC                     
  2728                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  2729  0018BC  0E00               	movlw	0
  2730  0018BE  6E3F               	movwf	(kpDebounce@newRead+1)^0,c
  2731  0018C0  0E00               	movlw	0
  2732  0018C2  6E3E               	movwf	kpDebounce@newRead^0,c
  2733                           
  2734                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  2735  0018C4  0E00               	movlw	0
  2736  0018C6  6E0E               	movwf	(kpDebounce@i+1)^0,c
  2737  0018C8  0E00               	movlw	0
  2738  0018CA  6E0D               	movwf	kpDebounce@i^0,c
  2739  0018CC                     l2876:
  2740  0018CC  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  2741  0018CE  EF72  F00C         	goto	u2711
  2742  0018D2  500E               	movf	(kpDebounce@i+1)^0,w,c
  2743  0018D4  E109               	bnz	u2710
  2744  0018D6  0E05               	movlw	5
  2745  0018D8  5C0D               	subwf	kpDebounce@i^0,w,c
  2746  0018DA  A0D8               	btfss	status,0,c
  2747  0018DC  EF72  F00C         	goto	u2711
  2748  0018E0  EF74  F00C         	goto	u2710
  2749  0018E4                     u2711:
  2750  0018E4  EF76  F00C         	goto	l2880
  2751  0018E8                     u2710:
  2752  0018E8  EFD7  F00C         	goto	l2892
  2753  0018EC                     l2880:
  2754                           
  2755                           ;keypad.c: 35:       soWrite(1<<(i+3));
  2756  0018EC  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2757  0018F0  0E03               	movlw	3
  2758  0018F2  260A               	addwf	??_kpDebounce^0,f,c
  2759  0018F4  0E01               	movlw	1
  2760  0018F6  6E0B               	movwf	(??_kpDebounce+1)^0,c
  2761  0018F8  0E00               	movlw	0
  2762  0018FA  6E0C               	movwf	(??_kpDebounce+2)^0,c
  2763  0018FC  2A0A               	incf	??_kpDebounce^0,f,c
  2764  0018FE  EF84  F00C         	goto	u2724
  2765  001902                     u2725:
  2766  001902  90D8               	bcf	status,0,c
  2767  001904  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  2768  001906  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  2769  001908                     u2724:
  2770  001908  2E0A               	decfsz	??_kpDebounce^0,f,c
  2771  00190A  EF81  F00C         	goto	u2725
  2772  00190E  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  2773  001912  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  2774  001916  EC1A  F013         	call	_soWrite	;wreg free
  2775                           
  2776                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  2777  00191A  0E00               	movlw	0
  2778  00191C  6E02               	movwf	(digitalRead@pin+1)^0,c
  2779  00191E  0E0A               	movlw	10
  2780  001920  6E01               	movwf	digitalRead@pin^0,c
  2781  001922  ECA9  F00B         	call	_digitalRead	;wreg free
  2782  001926  5001               	movf	?_digitalRead^0,w,c
  2783  001928  1002               	iorwf	(?_digitalRead+1)^0,w,c
  2784  00192A  B4D8               	btfsc	status,2,c
  2785  00192C  EF9A  F00C         	goto	u2731
  2786  001930  EF9C  F00C         	goto	u2730
  2787  001934                     u2731:
  2788  001934  EFAF  F00C         	goto	l2884
  2789  001938                     u2730:
  2790  001938                     
  2791                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  2792  001938  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2793  00193C  0E01               	movlw	1
  2794  00193E  6E0B               	movwf	(??_kpDebounce+1)^0,c
  2795  001940  0E00               	movlw	0
  2796  001942  6E0C               	movwf	(??_kpDebounce+2)^0,c
  2797  001944  2A0A               	incf	??_kpDebounce^0,f,c
  2798  001946  EFA8  F00C         	goto	u2744
  2799  00194A                     u2745:
  2800  00194A  90D8               	bcf	status,0,c
  2801  00194C  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  2802  00194E  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  2803  001950                     u2744:
  2804  001950  2E0A               	decfsz	??_kpDebounce^0,f,c
  2805  001952  EFA5  F00C         	goto	u2745
  2806  001956  500B               	movf	(??_kpDebounce+1)^0,w,c
  2807  001958  123E               	iorwf	kpDebounce@newRead^0,f,c
  2808  00195A  500C               	movf	(??_kpDebounce+2)^0,w,c
  2809  00195C  123F               	iorwf	(kpDebounce@newRead+1)^0,f,c
  2810  00195E                     l2884:
  2811                           
  2812                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  2813  00195E  0E00               	movlw	0
  2814  001960  6E02               	movwf	(digitalRead@pin+1)^0,c
  2815  001962  0E09               	movlw	9
  2816  001964  6E01               	movwf	digitalRead@pin^0,c
  2817  001966  ECA9  F00B         	call	_digitalRead	;wreg free
  2818  00196A  5001               	movf	?_digitalRead^0,w,c
  2819  00196C  1002               	iorwf	(?_digitalRead+1)^0,w,c
  2820  00196E  B4D8               	btfsc	status,2,c
  2821  001970  EFBC  F00C         	goto	u2751
  2822  001974  EFBE  F00C         	goto	u2750
  2823  001978                     u2751:
  2824  001978  EFD3  F00C         	goto	l2888
  2825  00197C                     u2750:
  2826  00197C                     
  2827                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  2828  00197C  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2829  001980  0E05               	movlw	5
  2830  001982  260A               	addwf	??_kpDebounce^0,f,c
  2831  001984  0E01               	movlw	1
  2832  001986  6E0B               	movwf	(??_kpDebounce+1)^0,c
  2833  001988  0E00               	movlw	0
  2834  00198A  6E0C               	movwf	(??_kpDebounce+2)^0,c
  2835  00198C  2A0A               	incf	??_kpDebounce^0,f,c
  2836  00198E  EFCC  F00C         	goto	u2764
  2837  001992                     u2765:
  2838  001992  90D8               	bcf	status,0,c
  2839  001994  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  2840  001996  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  2841  001998                     u2764:
  2842  001998  2E0A               	decfsz	??_kpDebounce^0,f,c
  2843  00199A  EFC9  F00C         	goto	u2765
  2844  00199E  500B               	movf	(??_kpDebounce+1)^0,w,c
  2845  0019A0  123E               	iorwf	kpDebounce@newRead^0,f,c
  2846  0019A2  500C               	movf	(??_kpDebounce+2)^0,w,c
  2847  0019A4  123F               	iorwf	(kpDebounce@newRead+1)^0,f,c
  2848  0019A6                     l2888:
  2849                           
  2850                           ;keypad.c: 42:     }
  2851  0019A6  4A0D               	infsnz	kpDebounce@i^0,f,c
  2852  0019A8  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  2853  0019AA  EF66  F00C         	goto	l2876
  2854  0019AE                     l2892:
  2855                           
  2856                           ;keypad.c: 43:     if (oldRead == newRead) {
  2857  0019AE  503E               	movf	kpDebounce@newRead^0,w,c
  2858  0019B0  183C               	xorwf	kpDebounce@oldRead^0,w,c
  2859  0019B2  E107               	bnz	u2771
  2860  0019B4  503F               	movf	(kpDebounce@newRead+1)^0,w,c
  2861  0019B6  183D               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  2862  0019B8  A4D8               	btfss	status,2,c
  2863  0019BA  EFE1  F00C         	goto	u2771
  2864  0019BE  EFE3  F00C         	goto	u2770
  2865  0019C2                     u2771:
  2866  0019C2  EFE6  F00C         	goto	l2896
  2867  0019C6                     u2770:
  2868  0019C6                     
  2869                           ;keypad.c: 44:         tempo--;
  2870  0019C6  064C               	decf	kpDebounce@tempo^0,f,c
  2871                           
  2872                           ;keypad.c: 45:     } else {
  2873  0019C8  EFEC  F00C         	goto	l232
  2874  0019CC                     l2896:
  2875                           
  2876                           ;keypad.c: 46:         tempo = 1;
  2877  0019CC  0E01               	movlw	1
  2878  0019CE  6E4C               	movwf	kpDebounce@tempo^0,c
  2879  0019D0                     
  2880                           ;keypad.c: 47:         oldRead = newRead;
  2881  0019D0  C03E  F03C         	movff	kpDebounce@newRead,kpDebounce@oldRead
  2882  0019D4  C03F  F03D         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  2883  0019D8                     l232:
  2884                           
  2885                           ;keypad.c: 49:     if (tempo == 0) {
  2886  0019D8  504C               	movf	kpDebounce@tempo^0,w,c
  2887  0019DA  A4D8               	btfss	status,2,c
  2888  0019DC  EFF2  F00C         	goto	u2781
  2889  0019E0  EFF4  F00C         	goto	u2780
  2890  0019E4                     u2781:
  2891  0019E4  EFF8  F00C         	goto	l234
  2892  0019E8                     u2780:
  2893  0019E8                     
  2894                           ;keypad.c: 50:         keys = oldRead;
  2895  0019E8  C03C  F040         	movff	kpDebounce@oldRead,_keys
  2896  0019EC  C03D  F041         	movff	kpDebounce@oldRead+1,_keys+1
  2897  0019F0                     l234:
  2898  0019F0  0012               	return		;funcret
  2899  0019F2                     __end_of_kpDebounce:
  2900                           	callstack 0
  2901                           
  2902 ;; *************** function _atualizaLCD *****************
  2903 ;; Defined at:
  2904 ;;		line 94 in file "main.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;		None
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;		None
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  1    wreg      void 
  2911 ;; Registers used:
  2912 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2918 ;;      Params:         0       0       0       0       0       0       0
  2919 ;;      Locals:         4       0       0       0       0       0       0
  2920 ;;      Temps:          0       0       0       0       0       0       0
  2921 ;;      Totals:         4       0       0       0       0       0       0
  2922 ;;Total ram usage:        4 bytes
  2923 ;; Hardware stack levels used: 1
  2924 ;; Hardware stack levels required when called: 6
  2925 ;; This function calls:
  2926 ;;		___lldiv
  2927 ;;		___llmod
  2928 ;;		___lmul
  2929 ;;		_buzzer
  2930 ;;		_lcdChar
  2931 ;;		_lcdCommand
  2932 ;;		_lcdPosition
  2933 ;;		_lcdString
  2934 ;; This function is called by:
  2935 ;;		_leTeclado
  2936 ;;		_timer
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           	psect	text15
  2941  0009C0                     __ptext15:
  2942                           	callstack 0
  2943  0009C0                     _atualizaLCD:
  2944                           	callstack 23
  2945  0009C0                     
  2946                           ;main.c: 95:     lcdCommand(0x80);
  2947  0009C0  0E80               	movlw	128
  2948  0009C2  EC9D  F015         	call	_lcdCommand
  2949  0009C6                     
  2950                           ;main.c: 96:     if(modo == 5){lcdString("Pre-Aquec "); lcdPosition(0, 12); lcdChar(1);}
  2951  0009C6  0E05               	movlw	5
  2952  0009C8  1846               	xorwf	_modo^0,w,c
  2953  0009CA  A4D8               	btfss	status,2,c
  2954  0009CC  EFEA  F004         	goto	u2831
  2955  0009D0  EFEC  F004         	goto	u2830
  2956  0009D4                     u2831:
  2957  0009D4  EFFF  F004         	goto	l2932
  2958  0009D8                     u2830:
  2959  0009D8  0E3B               	movlw	low STR_3
  2960  0009DA  6E0F               	movwf	lcdString@msg^0,c
  2961  0009DC  0E06               	movlw	high STR_3
  2962  0009DE  6E10               	movwf	(lcdString@msg+1)^0,c
  2963  0009E0  EC9D  F012         	call	_lcdString	;wreg free
  2964  0009E4  0E00               	movlw	0
  2965  0009E6  6E10               	movwf	(lcdPosition@line+1)^0,c
  2966  0009E8  0E00               	movlw	0
  2967  0009EA  6E0F               	movwf	lcdPosition@line^0,c
  2968  0009EC  0E00               	movlw	0
  2969  0009EE  6E12               	movwf	(lcdPosition@col+1)^0,c
  2970  0009F0  0E0C               	movlw	12
  2971  0009F2  6E11               	movwf	lcdPosition@col^0,c
  2972  0009F4  EC0C  F014         	call	_lcdPosition	;wreg free
  2973  0009F8  0E01               	movlw	1
  2974  0009FA  EC8E  F015         	call	_lcdChar
  2975  0009FE                     l2932:
  2976                           
  2977                           ;main.c: 97:     if(modo == 6){lcdString("Grill "); lcdPosition(0, 12); lcdChar(0);}
  2978  0009FE  0E06               	movlw	6
  2979  000A00  1846               	xorwf	_modo^0,w,c
  2980  000A02  A4D8               	btfss	status,2,c
  2981  000A04  EF06  F005         	goto	u2841
  2982  000A08  EF08  F005         	goto	u2840
  2983  000A0C                     u2841:
  2984  000A0C  EF1B  F005         	goto	l2940
  2985  000A10                     u2840:
  2986  000A10  0E59               	movlw	low STR_4
  2987  000A12  6E0F               	movwf	lcdString@msg^0,c
  2988  000A14  0E06               	movlw	high STR_4
  2989  000A16  6E10               	movwf	(lcdString@msg+1)^0,c
  2990  000A18  EC9D  F012         	call	_lcdString	;wreg free
  2991  000A1C  0E00               	movlw	0
  2992  000A1E  6E10               	movwf	(lcdPosition@line+1)^0,c
  2993  000A20  0E00               	movlw	0
  2994  000A22  6E0F               	movwf	lcdPosition@line^0,c
  2995  000A24  0E00               	movlw	0
  2996  000A26  6E12               	movwf	(lcdPosition@col+1)^0,c
  2997  000A28  0E0C               	movlw	12
  2998  000A2A  6E11               	movwf	lcdPosition@col^0,c
  2999  000A2C  EC0C  F014         	call	_lcdPosition	;wreg free
  3000  000A30  0E00               	movlw	0
  3001  000A32  EC8E  F015         	call	_lcdChar
  3002  000A36                     l2940:
  3003                           
  3004                           ;main.c: 98:     if(modo == 8){lcdString("Manual "); lcdPosition(0, 12); lcdChar(resist)
      +                          ;}
  3005  000A36  0E08               	movlw	8
  3006  000A38  1846               	xorwf	_modo^0,w,c
  3007  000A3A  A4D8               	btfss	status,2,c
  3008  000A3C  EF22  F005         	goto	u2851
  3009  000A40  EF24  F005         	goto	u2850
  3010  000A44                     u2851:
  3011  000A44  EF37  F005         	goto	l2948
  3012  000A48                     u2850:
  3013  000A48  0E51               	movlw	low STR_5
  3014  000A4A  6E0F               	movwf	lcdString@msg^0,c
  3015  000A4C  0E06               	movlw	high STR_5
  3016  000A4E  6E10               	movwf	(lcdString@msg+1)^0,c
  3017  000A50  EC9D  F012         	call	_lcdString	;wreg free
  3018  000A54  0E00               	movlw	0
  3019  000A56  6E10               	movwf	(lcdPosition@line+1)^0,c
  3020  000A58  0E00               	movlw	0
  3021  000A5A  6E0F               	movwf	lcdPosition@line^0,c
  3022  000A5C  0E00               	movlw	0
  3023  000A5E  6E12               	movwf	(lcdPosition@col+1)^0,c
  3024  000A60  0E0C               	movlw	12
  3025  000A62  6E11               	movwf	lcdPosition@col^0,c
  3026  000A64  EC0C  F014         	call	_lcdPosition	;wreg free
  3027  000A68  5044               	movf	_resist^0,w,c
  3028  000A6A  EC8E  F015         	call	_lcdChar
  3029  000A6E                     l2948:
  3030                           
  3031                           ;main.c: 99:     lcdCommand(0xC0);
  3032  000A6E  0EC0               	movlw	192
  3033  000A70  EC9D  F015         	call	_lcdCommand
  3034  000A74                     
  3035                           ;main.c: 100:     lcdString("TEMP:");
  3036  000A74  0E60               	movlw	low STR_6
  3037  000A76  6E0F               	movwf	lcdString@msg^0,c
  3038  000A78  0E06               	movlw	high STR_6
  3039  000A7A  6E10               	movwf	(lcdString@msg+1)^0,c
  3040  000A7C  EC9D  F012         	call	_lcdString	;wreg free
  3041                           
  3042                           ;main.c: 101:     lcdPosition(1, 6);
  3043  000A80  0E00               	movlw	0
  3044  000A82  6E10               	movwf	(lcdPosition@line+1)^0,c
  3045  000A84  0E01               	movlw	1
  3046  000A86  6E0F               	movwf	lcdPosition@line^0,c
  3047  000A88  0E00               	movlw	0
  3048  000A8A  6E12               	movwf	(lcdPosition@col+1)^0,c
  3049  000A8C  0E06               	movlw	6
  3050  000A8E  6E11               	movwf	lcdPosition@col^0,c
  3051  000A90  EC0C  F014         	call	_lcdPosition	;wreg free
  3052                           
  3053                           ;main.c: 102:     lcdChar((((250*pot)/1023)+50)/100 %10 + 48);
  3054  000A94  0EFF               	movlw	255
  3055  000A96  6E11               	movwf	___lldiv@divisor^0,c
  3056  000A98  0E03               	movlw	3
  3057  000A9A  6E12               	movwf	(___lldiv@divisor+1)^0,c
  3058  000A9C  0E00               	movlw	0
  3059  000A9E  6E13               	movwf	(___lldiv@divisor+2)^0,c
  3060  000AA0  0E00               	movlw	0
  3061  000AA2  6E14               	movwf	(___lldiv@divisor+3)^0,c
  3062  000AA4  C032  F001         	movff	_pot,___lmul@multiplier
  3063  000AA8  C033  F002         	movff	_pot+1,___lmul@multiplier+1
  3064  000AAC  C034  F003         	movff	_pot+2,___lmul@multiplier+2
  3065  000AB0  C035  F004         	movff	_pot+3,___lmul@multiplier+3
  3066  000AB4  0EFA               	movlw	250
  3067  000AB6  6E05               	movwf	___lmul@multiplicand^0,c
  3068  000AB8  0E00               	movlw	0
  3069  000ABA  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3070  000ABC  0E00               	movlw	0
  3071  000ABE  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3072  000AC0  0E00               	movlw	0
  3073  000AC2  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3074  000AC4  EC57  F011         	call	___lmul	;wreg free
  3075  000AC8  C001  F00D         	movff	?___lmul,___lldiv@dividend
  3076  000ACC  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  3077  000AD0  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  3078  000AD4  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  3079  000AD8  EC80  F00F         	call	___lldiv	;wreg free
  3080  000ADC  0E32               	movlw	50
  3081  000ADE  240D               	addwf	?___lldiv^0,w,c
  3082  000AE0  6E26               	movwf	_atualizaLCD$1316^0,c
  3083  000AE2  0E00               	movlw	0
  3084  000AE4  200E               	addwfc	(?___lldiv+1)^0,w,c
  3085  000AE6  6E27               	movwf	(_atualizaLCD$1316+1)^0,c
  3086  000AE8  0E00               	movlw	0
  3087  000AEA  200F               	addwfc	(?___lldiv+2)^0,w,c
  3088  000AEC  6E28               	movwf	(_atualizaLCD$1316+2)^0,c
  3089  000AEE  0E00               	movlw	0
  3090  000AF0  2010               	addwfc	(?___lldiv+3)^0,w,c
  3091  000AF2  6E29               	movwf	(_atualizaLCD$1316+3)^0,c
  3092                           
  3093                           ;main.c: 102:     lcdChar((((250*pot)/1023)+50)/100 %10 + 48);
  3094  000AF4  0E64               	movlw	100
  3095  000AF6  6E11               	movwf	___lldiv@divisor^0,c
  3096  000AF8  0E00               	movlw	0
  3097  000AFA  6E12               	movwf	(___lldiv@divisor+1)^0,c
  3098  000AFC  0E00               	movlw	0
  3099  000AFE  6E13               	movwf	(___lldiv@divisor+2)^0,c
  3100  000B00  0E00               	movlw	0
  3101  000B02  6E14               	movwf	(___lldiv@divisor+3)^0,c
  3102  000B04  C026  F00D         	movff	_atualizaLCD$1316,___lldiv@dividend
  3103  000B08  C027  F00E         	movff	_atualizaLCD$1316+1,___lldiv@dividend+1
  3104  000B0C  C028  F00F         	movff	_atualizaLCD$1316+2,___lldiv@dividend+2
  3105  000B10  C029  F010         	movff	_atualizaLCD$1316+3,___lldiv@dividend+3
  3106  000B14  EC80  F00F         	call	___lldiv	;wreg free
  3107  000B18  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  3108  000B1C  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  3109  000B20  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  3110  000B24  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  3111  000B28  0E0A               	movlw	10
  3112  000B2A  6E1E               	movwf	___llmod@divisor^0,c
  3113  000B2C  0E00               	movlw	0
  3114  000B2E  6E1F               	movwf	(___llmod@divisor+1)^0,c
  3115  000B30  0E00               	movlw	0
  3116  000B32  6E20               	movwf	(___llmod@divisor+2)^0,c
  3117  000B34  0E00               	movlw	0
  3118  000B36  6E21               	movwf	(___llmod@divisor+3)^0,c
  3119  000B38  EC6D  F010         	call	___llmod	;wreg free
  3120  000B3C  501A               	movf	?___llmod^0,w,c
  3121  000B3E  0F30               	addlw	48
  3122  000B40  EC8E  F015         	call	_lcdChar
  3123                           
  3124                           ;main.c: 103:     lcdChar((((250*pot)/1023)+50)/10 %10 + 48);
  3125  000B44  0EFF               	movlw	255
  3126  000B46  6E11               	movwf	___lldiv@divisor^0,c
  3127  000B48  0E03               	movlw	3
  3128  000B4A  6E12               	movwf	(___lldiv@divisor+1)^0,c
  3129  000B4C  0E00               	movlw	0
  3130  000B4E  6E13               	movwf	(___lldiv@divisor+2)^0,c
  3131  000B50  0E00               	movlw	0
  3132  000B52  6E14               	movwf	(___lldiv@divisor+3)^0,c
  3133  000B54  C032  F001         	movff	_pot,___lmul@multiplier
  3134  000B58  C033  F002         	movff	_pot+1,___lmul@multiplier+1
  3135  000B5C  C034  F003         	movff	_pot+2,___lmul@multiplier+2
  3136  000B60  C035  F004         	movff	_pot+3,___lmul@multiplier+3
  3137  000B64  0EFA               	movlw	250
  3138  000B66  6E05               	movwf	___lmul@multiplicand^0,c
  3139  000B68  0E00               	movlw	0
  3140  000B6A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3141  000B6C  0E00               	movlw	0
  3142  000B6E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3143  000B70  0E00               	movlw	0
  3144  000B72  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3145  000B74  EC57  F011         	call	___lmul	;wreg free
  3146  000B78  C001  F00D         	movff	?___lmul,___lldiv@dividend
  3147  000B7C  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  3148  000B80  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  3149  000B84  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  3150  000B88  EC80  F00F         	call	___lldiv	;wreg free
  3151  000B8C  0E32               	movlw	50
  3152  000B8E  240D               	addwf	?___lldiv^0,w,c
  3153  000B90  6E26               	movwf	_atualizaLCD$1316^0,c
  3154  000B92  0E00               	movlw	0
  3155  000B94  200E               	addwfc	(?___lldiv+1)^0,w,c
  3156  000B96  6E27               	movwf	(_atualizaLCD$1316+1)^0,c
  3157  000B98  0E00               	movlw	0
  3158  000B9A  200F               	addwfc	(?___lldiv+2)^0,w,c
  3159  000B9C  6E28               	movwf	(_atualizaLCD$1316+2)^0,c
  3160  000B9E  0E00               	movlw	0
  3161  000BA0  2010               	addwfc	(?___lldiv+3)^0,w,c
  3162  000BA2  6E29               	movwf	(_atualizaLCD$1316+3)^0,c
  3163                           
  3164                           ;main.c: 103:     lcdChar((((250*pot)/1023)+50)/10 %10 + 48);
  3165  000BA4  0E0A               	movlw	10
  3166  000BA6  6E11               	movwf	___lldiv@divisor^0,c
  3167  000BA8  0E00               	movlw	0
  3168  000BAA  6E12               	movwf	(___lldiv@divisor+1)^0,c
  3169  000BAC  0E00               	movlw	0
  3170  000BAE  6E13               	movwf	(___lldiv@divisor+2)^0,c
  3171  000BB0  0E00               	movlw	0
  3172  000BB2  6E14               	movwf	(___lldiv@divisor+3)^0,c
  3173  000BB4  C026  F00D         	movff	_atualizaLCD$1316,___lldiv@dividend
  3174  000BB8  C027  F00E         	movff	_atualizaLCD$1316+1,___lldiv@dividend+1
  3175  000BBC  C028  F00F         	movff	_atualizaLCD$1316+2,___lldiv@dividend+2
  3176  000BC0  C029  F010         	movff	_atualizaLCD$1316+3,___lldiv@dividend+3
  3177  000BC4  EC80  F00F         	call	___lldiv	;wreg free
  3178  000BC8  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  3179  000BCC  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  3180  000BD0  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  3181  000BD4  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  3182  000BD8  0E0A               	movlw	10
  3183  000BDA  6E1E               	movwf	___llmod@divisor^0,c
  3184  000BDC  0E00               	movlw	0
  3185  000BDE  6E1F               	movwf	(___llmod@divisor+1)^0,c
  3186  000BE0  0E00               	movlw	0
  3187  000BE2  6E20               	movwf	(___llmod@divisor+2)^0,c
  3188  000BE4  0E00               	movlw	0
  3189  000BE6  6E21               	movwf	(___llmod@divisor+3)^0,c
  3190  000BE8  EC6D  F010         	call	___llmod	;wreg free
  3191  000BEC  501A               	movf	?___llmod^0,w,c
  3192  000BEE  0F30               	addlw	48
  3193  000BF0  EC8E  F015         	call	_lcdChar
  3194                           
  3195                           ;main.c: 104:     lcdChar((((250*pot)/1023)+50) %10 + 48);
  3196  000BF4  0EFF               	movlw	255
  3197  000BF6  6E11               	movwf	___lldiv@divisor^0,c
  3198  000BF8  0E03               	movlw	3
  3199  000BFA  6E12               	movwf	(___lldiv@divisor+1)^0,c
  3200  000BFC  0E00               	movlw	0
  3201  000BFE  6E13               	movwf	(___lldiv@divisor+2)^0,c
  3202  000C00  0E00               	movlw	0
  3203  000C02  6E14               	movwf	(___lldiv@divisor+3)^0,c
  3204  000C04  C032  F001         	movff	_pot,___lmul@multiplier
  3205  000C08  C033  F002         	movff	_pot+1,___lmul@multiplier+1
  3206  000C0C  C034  F003         	movff	_pot+2,___lmul@multiplier+2
  3207  000C10  C035  F004         	movff	_pot+3,___lmul@multiplier+3
  3208  000C14  0EFA               	movlw	250
  3209  000C16  6E05               	movwf	___lmul@multiplicand^0,c
  3210  000C18  0E00               	movlw	0
  3211  000C1A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3212  000C1C  0E00               	movlw	0
  3213  000C1E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3214  000C20  0E00               	movlw	0
  3215  000C22  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3216  000C24  EC57  F011         	call	___lmul	;wreg free
  3217  000C28  C001  F00D         	movff	?___lmul,___lldiv@dividend
  3218  000C2C  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  3219  000C30  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  3220  000C34  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  3221  000C38  EC80  F00F         	call	___lldiv	;wreg free
  3222  000C3C  0E32               	movlw	50
  3223  000C3E  240D               	addwf	?___lldiv^0,w,c
  3224  000C40  6E1A               	movwf	___llmod@dividend^0,c
  3225  000C42  0E00               	movlw	0
  3226  000C44  200E               	addwfc	(?___lldiv+1)^0,w,c
  3227  000C46  6E1B               	movwf	(___llmod@dividend+1)^0,c
  3228  000C48  0E00               	movlw	0
  3229  000C4A  200F               	addwfc	(?___lldiv+2)^0,w,c
  3230  000C4C  6E1C               	movwf	(___llmod@dividend+2)^0,c
  3231  000C4E  0E00               	movlw	0
  3232  000C50  2010               	addwfc	(?___lldiv+3)^0,w,c
  3233  000C52  6E1D               	movwf	(___llmod@dividend+3)^0,c
  3234  000C54  0E0A               	movlw	10
  3235  000C56  6E1E               	movwf	___llmod@divisor^0,c
  3236  000C58  0E00               	movlw	0
  3237  000C5A  6E1F               	movwf	(___llmod@divisor+1)^0,c
  3238  000C5C  0E00               	movlw	0
  3239  000C5E  6E20               	movwf	(___llmod@divisor+2)^0,c
  3240  000C60  0E00               	movlw	0
  3241  000C62  6E21               	movwf	(___llmod@divisor+3)^0,c
  3242  000C64  EC6D  F010         	call	___llmod	;wreg free
  3243  000C68  501A               	movf	?___llmod^0,w,c
  3244  000C6A  0F30               	addlw	48
  3245  000C6C  EC8E  F015         	call	_lcdChar
  3246                           
  3247                           ;main.c: 105:     lcdPosition(1, 9);
  3248  000C70  0E00               	movlw	0
  3249  000C72  6E10               	movwf	(lcdPosition@line+1)^0,c
  3250  000C74  0E01               	movlw	1
  3251  000C76  6E0F               	movwf	lcdPosition@line^0,c
  3252  000C78  0E00               	movlw	0
  3253  000C7A  6E12               	movwf	(lcdPosition@col+1)^0,c
  3254  000C7C  0E09               	movlw	9
  3255  000C7E  6E11               	movwf	lcdPosition@col^0,c
  3256  000C80  EC0C  F014         	call	_lcdPosition	;wreg free
  3257                           
  3258                           ;main.c: 106:     lcdChar(0xDF);
  3259  000C84  0EDF               	movlw	223
  3260  000C86  EC8E  F015         	call	_lcdChar
  3261  000C8A                     
  3262                           ;main.c: 107:     lcdString("C");
  3263  000C8A  0E6B               	movlw	low STR_7
  3264  000C8C  6E0F               	movwf	lcdString@msg^0,c
  3265  000C8E  0E06               	movlw	high STR_7
  3266  000C90  6E10               	movwf	(lcdString@msg+1)^0,c
  3267  000C92  EC9D  F012         	call	_lcdString	;wreg free
  3268  000C96                     
  3269                           ;main.c: 108:     if(fim!=0){
  3270  000C96  5042               	movf	_fim^0,w,c
  3271  000C98  B4D8               	btfsc	status,2,c
  3272  000C9A  EF51  F006         	goto	u2861
  3273  000C9E  EF53  F006         	goto	u2860
  3274  000CA2                     u2861:
  3275  000CA2  EF65  F006         	goto	l456
  3276  000CA6                     u2860:
  3277  000CA6                     
  3278                           ;main.c: 109:         fim = 0;
  3279  000CA6  0E00               	movlw	0
  3280  000CA8  6E42               	movwf	_fim^0,c
  3281                           
  3282                           ;main.c: 110:         state = 0;
  3283  000CAA  0E00               	movlw	0
  3284  000CAC  6E45               	movwf	_state^0,c
  3285  000CAE                     
  3286                           ;main.c: 111:         lcdCommand(0x01);
  3287  000CAE  0E01               	movlw	1
  3288  000CB0  EC9D  F015         	call	_lcdCommand
  3289  000CB4                     
  3290                           ;main.c: 112:         lcdCommand(0x80);
  3291  000CB4  0E80               	movlw	128
  3292  000CB6  EC9D  F015         	call	_lcdCommand
  3293  000CBA                     
  3294                           ;main.c: 113:         lcdString("      FIM!");
  3295  000CBA  0E46               	movlw	low STR_8
  3296  000CBC  6E0F               	movwf	lcdString@msg^0,c
  3297  000CBE  0E06               	movlw	high STR_8
  3298  000CC0  6E10               	movwf	(lcdString@msg+1)^0,c
  3299  000CC2  EC9D  F012         	call	_lcdString	;wreg free
  3300  000CC6                     
  3301                           ;main.c: 114:         buzzer();
  3302  000CC6  EC8C  F011         	call	_buzzer	;wreg free
  3303  000CCA                     l456:
  3304  000CCA  0012               	return		;funcret
  3305  000CCC                     __end_of_atualizaLCD:
  3306                           	callstack 0
  3307                           
  3308 ;; *************** function _lcdPosition *****************
  3309 ;; Defined at:
  3310 ;;		line 44 in file "lcd.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;  line            2   14[COMRAM] int 
  3313 ;;  col             2   16[COMRAM] int 
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      void 
  3318 ;; Registers used:
  3319 ;;		wreg, status,2, status,0, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3325 ;;      Params:         4       0       0       0       0       0       0
  3326 ;;      Locals:         0       0       0       0       0       0       0
  3327 ;;      Temps:          0       0       0       0       0       0       0
  3328 ;;      Totals:         4       0       0       0       0       0       0
  3329 ;;Total ram usage:        4 bytes
  3330 ;; Hardware stack levels used: 1
  3331 ;; Hardware stack levels required when called: 5
  3332 ;; This function calls:
  3333 ;;		_lcdCommand
  3334 ;; This function is called by:
  3335 ;;		_atualizaLCD
  3336 ;;		_temperatura
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text16
  3341  002818                     __ptext16:
  3342                           	callstack 0
  3343  002818                     _lcdPosition:
  3344                           	callstack 23
  3345  002818                     
  3346                           ;lcd.c: 45:  if (line == 0) {
  3347  002818  500F               	movf	lcdPosition@line^0,w,c
  3348  00281A  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  3349  00281C  A4D8               	btfss	status,2,c
  3350  00281E  EF13  F014         	goto	u2461
  3351  002822  EF15  F014         	goto	u2460
  3352  002826                     u2461:
  3353  002826  EF1A  F014         	goto	l2684
  3354  00282A                     u2460:
  3355  00282A                     
  3356                           ;lcd.c: 46:   lcdCommand(0x80 + (col % 16));
  3357  00282A  5011               	movf	lcdPosition@col^0,w,c
  3358  00282C  0B0F               	andlw	15
  3359  00282E  0F80               	addlw	128
  3360  002830  EC9D  F015         	call	_lcdCommand
  3361  002834                     l2684:
  3362                           
  3363                           ;lcd.c: 48:  if (line == 1) {
  3364  002834  040F               	decf	lcdPosition@line^0,w,c
  3365  002836  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  3366  002838  A4D8               	btfss	status,2,c
  3367  00283A  EF21  F014         	goto	u2471
  3368  00283E  EF23  F014         	goto	u2470
  3369  002842                     u2471:
  3370  002842  EF28  F014         	goto	l271
  3371  002846                     u2470:
  3372  002846                     
  3373                           ;lcd.c: 49:   lcdCommand(0xC0 + (col % 16));
  3374  002846  5011               	movf	lcdPosition@col^0,w,c
  3375  002848  0B0F               	andlw	15
  3376  00284A  0FC0               	addlw	192
  3377  00284C  EC9D  F015         	call	_lcdCommand
  3378  002850                     l271:
  3379  002850  0012               	return		;funcret
  3380  002852                     __end_of_lcdPosition:
  3381                           	callstack 0
  3382                           
  3383 ;; *************** function _buzzer *****************
  3384 ;; Defined at:
  3385 ;;		line 80 in file "main.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;		None
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;		None
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3399 ;;      Params:         0       0       0       0       0       0       0
  3400 ;;      Locals:         0       0       0       0       0       0       0
  3401 ;;      Temps:          0       0       0       0       0       0       0
  3402 ;;      Totals:         0       0       0       0       0       0       0
  3403 ;;Total ram usage:        0 bytes
  3404 ;; Hardware stack levels used: 1
  3405 ;; Hardware stack levels required when called: 2
  3406 ;; This function calls:
  3407 ;;		_atraso
  3408 ;;		_pwmSet
  3409 ;; This function is called by:
  3410 ;;		_atualizaLCD
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           	psect	text17
  3415  002318                     __ptext17:
  3416                           	callstack 0
  3417  002318                     _buzzer:
  3418                           	callstack 26
  3419  002318                     
  3420                           ;main.c: 81:     pwmSet(100);
  3421  002318  0E64               	movlw	100
  3422  00231A  ECEB  F010         	call	_pwmSet
  3423  00231E                     
  3424                           ;main.c: 82:     atraso(500);
  3425  00231E  0E01               	movlw	1
  3426  002320  6E02               	movwf	(atraso@n+1)^0,c
  3427  002322  0EF4               	movlw	244
  3428  002324  6E01               	movwf	atraso@n^0,c
  3429  002326  EC21  F011         	call	_atraso	;wreg free
  3430  00232A                     
  3431                           ;main.c: 83:     pwmSet(0);
  3432  00232A  0E00               	movlw	0
  3433  00232C  ECEB  F010         	call	_pwmSet
  3434                           
  3435                           ;main.c: 84:     atraso(500);
  3436  002330  0E01               	movlw	1
  3437  002332  6E02               	movwf	(atraso@n+1)^0,c
  3438  002334  0EF4               	movlw	244
  3439  002336  6E01               	movwf	atraso@n^0,c
  3440  002338  EC21  F011         	call	_atraso	;wreg free
  3441  00233C                     
  3442                           ;main.c: 85:     pwmSet(100);
  3443  00233C  0E64               	movlw	100
  3444  00233E  ECEB  F010         	call	_pwmSet
  3445  002342                     
  3446                           ;main.c: 86:     atraso(500);
  3447  002342  0E01               	movlw	1
  3448  002344  6E02               	movwf	(atraso@n+1)^0,c
  3449  002346  0EF4               	movlw	244
  3450  002348  6E01               	movwf	atraso@n^0,c
  3451  00234A  EC21  F011         	call	_atraso	;wreg free
  3452                           
  3453                           ;main.c: 87:     pwmSet(0);
  3454  00234E  0E00               	movlw	0
  3455  002350  ECEB  F010         	call	_pwmSet
  3456  002354                     
  3457                           ;main.c: 88:     atraso(500);
  3458  002354  0E01               	movlw	1
  3459  002356  6E02               	movwf	(atraso@n+1)^0,c
  3460  002358  0EF4               	movlw	244
  3461  00235A  6E01               	movwf	atraso@n^0,c
  3462  00235C  EC21  F011         	call	_atraso	;wreg free
  3463  002360                     
  3464                           ;main.c: 89:     pwmSet(100);
  3465  002360  0E64               	movlw	100
  3466  002362  ECEB  F010         	call	_pwmSet
  3467                           
  3468                           ;main.c: 90:     atraso(500);
  3469  002366  0E01               	movlw	1
  3470  002368  6E02               	movwf	(atraso@n+1)^0,c
  3471  00236A  0EF4               	movlw	244
  3472  00236C  6E01               	movwf	atraso@n^0,c
  3473  00236E  EC21  F011         	call	_atraso	;wreg free
  3474  002372                     
  3475                           ;main.c: 91:     pwmSet(0);
  3476  002372  0E00               	movlw	0
  3477  002374  ECEB  F010         	call	_pwmSet
  3478  002378  0012               	return		;funcret
  3479  00237A                     __end_of_buzzer:
  3480                           	callstack 0
  3481                           
  3482 ;; *************** function _pwmSet *****************
  3483 ;; Defined at:
  3484 ;;		line 24 in file "pwm.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;  porcento        1    wreg     unsigned char 
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;  porcento        1   34[COMRAM] unsigned char 
  3489 ;;  val             2   35[COMRAM] unsigned int 
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  1    wreg      void 
  3492 ;; Registers used:
  3493 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3499 ;;      Params:         0       0       0       0       0       0       0
  3500 ;;      Locals:         3       0       0       0       0       0       0
  3501 ;;      Temps:          2       0       0       0       0       0       0
  3502 ;;      Totals:         5       0       0       0       0       0       0
  3503 ;;Total ram usage:        5 bytes
  3504 ;; Hardware stack levels used: 1
  3505 ;; Hardware stack levels required when called: 1
  3506 ;; This function calls:
  3507 ;;		___lwdiv
  3508 ;;		___wmul
  3509 ;; This function is called by:
  3510 ;;		_buzzer
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           	psect	text18
  3515  0021D6                     __ptext18:
  3516                           	callstack 0
  3517  0021D6                     _pwmSet:
  3518                           	callstack 26
  3519                           
  3520                           ;incstack = 0
  3521                           ;pwmSet@porcento stored from wreg
  3522  0021D6  6E23               	movwf	pwmSet@porcento^0,c
  3523  0021D8                     
  3524                           ;pwm.c: 24: void pwmSet(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int va
      +                          l = ((unsigned int)porcento) *(PR2+1);
  3525  0021D8  0E01               	movlw	1
  3526  0021DA  24CB               	addwf	203,w,c	;volatile
  3527  0021DC  6E1B               	movwf	___wmul@multiplier^0,c
  3528  0021DE  6A1C               	clrf	(___wmul@multiplier+1)^0,c
  3529  0021E0  0E00               	movlw	0
  3530  0021E2  221C               	addwfc	(___wmul@multiplier+1)^0,f,c
  3531  0021E4  C023  F01D         	movff	pwmSet@porcento,___wmul@multiplicand
  3532  0021E8  6A1E               	clrf	(___wmul@multiplicand+1)^0,c
  3533  0021EA  EC6A  F015         	call	___wmul	;wreg free
  3534  0021EE  C01B  F024         	movff	?___wmul,pwmSet@val
  3535  0021F2  C01C  F025         	movff	?___wmul+1,pwmSet@val+1
  3536  0021F6                     
  3537                           ;pwm.c: 33:     val = val / 25;
  3538  0021F6  C024  F001         	movff	pwmSet@val,___lwdiv@dividend
  3539  0021FA  C025  F002         	movff	pwmSet@val+1,___lwdiv@dividend+1
  3540  0021FE  0E00               	movlw	0
  3541  002200  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3542  002202  0E19               	movlw	25
  3543  002204  6E03               	movwf	___lwdiv@divisor^0,c
  3544  002206  ECB1  F010         	call	___lwdiv	;wreg free
  3545  00220A  C001  F024         	movff	?___lwdiv,pwmSet@val
  3546  00220E  C002  F025         	movff	?___lwdiv+1,pwmSet@val+1
  3547  002212                     
  3548                           ;pwm.c: 35:  val &= 0x03ff;
  3549  002212  0EFF               	movlw	255
  3550  002214  1624               	andwf	pwmSet@val^0,f,c
  3551  002216  0E03               	movlw	3
  3552  002218  1625               	andwf	(pwmSet@val+1)^0,f,c
  3553  00221A                     
  3554                           ;pwm.c: 37:  CCPR2L = val >> 2;
  3555  00221A  C024  F021         	movff	pwmSet@val,??_pwmSet
  3556  00221E  C025  F022         	movff	pwmSet@val+1,??_pwmSet+1
  3557  002222  90D8               	bcf	status,0,c
  3558  002224  3222               	rrcf	(??_pwmSet+1)^0,f,c
  3559  002226  3221               	rrcf	??_pwmSet^0,f,c
  3560  002228  90D8               	bcf	status,0,c
  3561  00222A  3222               	rrcf	(??_pwmSet+1)^0,f,c
  3562  00222C  3221               	rrcf	??_pwmSet^0,f,c
  3563  00222E  5021               	movf	??_pwmSet^0,w,c
  3564  002230  6EBB               	movwf	187,c	;volatile
  3565  002232                     
  3566                           ;pwm.c: 39:  CCP2CON |= (val & 0x0003) << 4;
  3567  002232  C024  F021         	movff	pwmSet@val,??_pwmSet	;volatile
  3568  002236  0E03               	movlw	3
  3569  002238  1621               	andwf	??_pwmSet^0,f,c
  3570  00223A  3821               	swapf	??_pwmSet^0,w,c
  3571  00223C  0BF0               	andlw	240
  3572  00223E  12BA               	iorwf	186,f,c	;volatile
  3573  002240  0012               	return		;funcret
  3574  002242                     __end_of_pwmSet:
  3575                           	callstack 0
  3576                           
  3577 ;; *************** function ___lwdiv *****************
  3578 ;; Defined at:
  3579 ;;		line 7 in file "D:\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  dividend        2    0[COMRAM] unsigned int 
  3582 ;;  divisor         2    2[COMRAM] unsigned int 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  quotient        2    4[COMRAM] unsigned int 
  3585 ;;  counter         1    6[COMRAM] unsigned char 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  2    0[COMRAM] unsigned int 
  3588 ;; Registers used:
  3589 ;;		wreg, status,2, status,0
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3595 ;;      Params:         4       0       0       0       0       0       0
  3596 ;;      Locals:         3       0       0       0       0       0       0
  3597 ;;      Temps:          0       0       0       0       0       0       0
  3598 ;;      Totals:         7       0       0       0       0       0       0
  3599 ;;Total ram usage:        7 bytes
  3600 ;; Hardware stack levels used: 1
  3601 ;; This function calls:
  3602 ;;		Nothing
  3603 ;; This function is called by:
  3604 ;;		_pwmSet
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text19
  3609  002162                     __ptext19:
  3610                           	callstack 0
  3611  002162                     ___lwdiv:
  3612                           	callstack 26
  3613  002162  0E00               	movlw	0
  3614  002164  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3615  002166  0E00               	movlw	0
  3616  002168  6E05               	movwf	___lwdiv@quotient^0,c
  3617  00216A  5003               	movf	___lwdiv@divisor^0,w,c
  3618  00216C  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3619  00216E  B4D8               	btfsc	status,2,c
  3620  002170  EFBC  F010         	goto	u2261
  3621  002174  EFBE  F010         	goto	u2260
  3622  002178                     u2261:
  3623  002178  EFE6  F010         	goto	l1044
  3624  00217C                     u2260:
  3625  00217C  0E01               	movlw	1
  3626  00217E  6E07               	movwf	___lwdiv@counter^0,c
  3627  002180  EFC6  F010         	goto	l2506
  3628  002184                     l2504:
  3629  002184  90D8               	bcf	status,0,c
  3630  002186  3603               	rlcf	___lwdiv@divisor^0,f,c
  3631  002188  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3632  00218A  2A07               	incf	___lwdiv@counter^0,f,c
  3633  00218C                     l2506:
  3634  00218C  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3635  00218E  EFCB  F010         	goto	u2271
  3636  002192  EFCD  F010         	goto	u2270
  3637  002196                     u2271:
  3638  002196  EFC2  F010         	goto	l2504
  3639  00219A                     u2270:
  3640  00219A                     l2508:
  3641  00219A  90D8               	bcf	status,0,c
  3642  00219C  3605               	rlcf	___lwdiv@quotient^0,f,c
  3643  00219E  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3644  0021A0  5003               	movf	___lwdiv@divisor^0,w,c
  3645  0021A2  5C01               	subwf	___lwdiv@dividend^0,w,c
  3646  0021A4  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3647  0021A6  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3648  0021A8  A0D8               	btfss	status,0,c
  3649  0021AA  EFD9  F010         	goto	u2281
  3650  0021AE  EFDB  F010         	goto	u2280
  3651  0021B2                     u2281:
  3652  0021B2  EFE0  F010         	goto	l2516
  3653  0021B6                     u2280:
  3654  0021B6  5003               	movf	___lwdiv@divisor^0,w,c
  3655  0021B8  5E01               	subwf	___lwdiv@dividend^0,f,c
  3656  0021BA  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3657  0021BC  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3658  0021BE  8005               	bsf	___lwdiv@quotient^0,0,c
  3659  0021C0                     l2516:
  3660  0021C0  90D8               	bcf	status,0,c
  3661  0021C2  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3662  0021C4  3203               	rrcf	___lwdiv@divisor^0,f,c
  3663  0021C6  2E07               	decfsz	___lwdiv@counter^0,f,c
  3664  0021C8  EFCD  F010         	goto	l2508
  3665  0021CC                     l1044:
  3666  0021CC  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3667  0021D0  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3668  0021D4  0012               	return		;funcret
  3669  0021D6                     __end_of___lwdiv:
  3670                           	callstack 0
  3671                           
  3672 ;; *************** function _atraso *****************
  3673 ;; Defined at:
  3674 ;;		line 1 in file "delay.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;  n               2    0[COMRAM] unsigned int 
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;  k               2    6[COMRAM] unsigned int 
  3679 ;;  j               2    4[COMRAM] unsigned int 
  3680 ;;  i               2    2[COMRAM] unsigned int 
  3681 ;;  m               2    0        unsigned int 
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  1    wreg      void 
  3684 ;; Registers used:
  3685 ;;		wreg, status,2, status,0
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3691 ;;      Params:         2       0       0       0       0       0       0
  3692 ;;      Locals:         6       0       0       0       0       0       0
  3693 ;;      Temps:          0       0       0       0       0       0       0
  3694 ;;      Totals:         8       0       0       0       0       0       0
  3695 ;;Total ram usage:        8 bytes
  3696 ;; Hardware stack levels used: 1
  3697 ;; This function calls:
  3698 ;;		Nothing
  3699 ;; This function is called by:
  3700 ;;		_buzzer
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text20
  3705  002242                     __ptext20:
  3706                           	callstack 0
  3707  002242                     _atraso:
  3708                           	callstack 27
  3709  002242                     
  3710                           ;delay.c: 2:     unsigned int i, j, k, m;;delay.c: 4:     for (i = 0; i < n; i++) {
  3711  002242  0E00               	movlw	0
  3712  002244  6E04               	movwf	(atraso@i+1)^0,c
  3713  002246  0E00               	movlw	0
  3714  002248  6E03               	movwf	atraso@i^0,c
  3715  00224A  EF4B  F011         	goto	l2630
  3716  00224E                     l2608:
  3717                           
  3718                           ;delay.c: 5:         for (j = 0; j < 41; j++) {
  3719  00224E  0E00               	movlw	0
  3720  002250  6E06               	movwf	(atraso@j+1)^0,c
  3721  002252  0E00               	movlw	0
  3722  002254  6E05               	movwf	atraso@j^0,c
  3723  002256                     l2614:
  3724                           
  3725                           ;delay.c: 6:             for (k = 0; k < 3; k++);
  3726  002256  0E00               	movlw	0
  3727  002258  6E08               	movwf	(atraso@k+1)^0,c
  3728  00225A  0E00               	movlw	0
  3729  00225C  6E07               	movwf	atraso@k^0,c
  3730  00225E                     l2620:
  3731  00225E  4A07               	infsnz	atraso@k^0,f,c
  3732  002260  2A08               	incf	(atraso@k+1)^0,f,c
  3733  002262  5008               	movf	(atraso@k+1)^0,w,c
  3734  002264  E109               	bnz	u2360
  3735  002266  0E03               	movlw	3
  3736  002268  5C07               	subwf	atraso@k^0,w,c
  3737  00226A  A0D8               	btfss	status,0,c
  3738  00226C  EF3A  F011         	goto	u2361
  3739  002270  EF3C  F011         	goto	u2360
  3740  002274                     u2361:
  3741  002274  EF2F  F011         	goto	l2620
  3742  002278                     u2360:
  3743  002278                     
  3744                           ;delay.c: 7:         }
  3745  002278  4A05               	infsnz	atraso@j^0,f,c
  3746  00227A  2A06               	incf	(atraso@j+1)^0,f,c
  3747  00227C  5006               	movf	(atraso@j+1)^0,w,c
  3748  00227E  E109               	bnz	u2370
  3749  002280  0E29               	movlw	41
  3750  002282  5C05               	subwf	atraso@j^0,w,c
  3751  002284  A0D8               	btfss	status,0,c
  3752  002286  EF47  F011         	goto	u2371
  3753  00228A  EF49  F011         	goto	u2370
  3754  00228E                     u2371:
  3755  00228E  EF2B  F011         	goto	l2614
  3756  002292                     u2370:
  3757  002292                     
  3758                           ;delay.c: 8:     }
  3759  002292  4A03               	infsnz	atraso@i^0,f,c
  3760  002294  2A04               	incf	(atraso@i+1)^0,f,c
  3761  002296                     l2630:
  3762  002296  5001               	movf	atraso@n^0,w,c
  3763  002298  5C03               	subwf	atraso@i^0,w,c
  3764  00229A  5002               	movf	(atraso@n+1)^0,w,c
  3765  00229C  5804               	subwfb	(atraso@i+1)^0,w,c
  3766  00229E  A0D8               	btfss	status,0,c
  3767  0022A0  EF54  F011         	goto	u2381
  3768  0022A4  EF56  F011         	goto	u2380
  3769  0022A8                     u2381:
  3770  0022A8  EF27  F011         	goto	l2608
  3771  0022AC                     u2380:
  3772  0022AC  0012               	return		;funcret
  3773  0022AE                     __end_of_atraso:
  3774                           	callstack 0
  3775                           
  3776 ;; *************** function ___lmul *****************
  3777 ;; Defined at:
  3778 ;;		line 15 in file "D:\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;  multiplier      4    0[COMRAM] unsigned long 
  3781 ;;  multiplicand    4    4[COMRAM] unsigned long 
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;  product         4    8[COMRAM] unsigned long 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  4    0[COMRAM] unsigned long 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2, status,0
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3793 ;;      Params:         8       0       0       0       0       0       0
  3794 ;;      Locals:         4       0       0       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0       0       0
  3796 ;;      Totals:        12       0       0       0       0       0       0
  3797 ;;Total ram usage:       12 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; This function calls:
  3800 ;;		Nothing
  3801 ;; This function is called by:
  3802 ;;		_atualizaLCD
  3803 ;;		_temperatura
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           	psect	text21
  3808  0022AE                     __ptext21:
  3809                           	callstack 0
  3810  0022AE                     ___lmul:
  3811                           	callstack 28
  3812  0022AE  0E00               	movlw	0
  3813  0022B0  6E09               	movwf	___lmul@product^0,c
  3814  0022B2  0E00               	movlw	0
  3815  0022B4  6E0A               	movwf	(___lmul@product+1)^0,c
  3816  0022B6  0E00               	movlw	0
  3817  0022B8  6E0B               	movwf	(___lmul@product+2)^0,c
  3818  0022BA  0E00               	movlw	0
  3819  0022BC  6E0C               	movwf	(___lmul@product+3)^0,c
  3820  0022BE                     l2714:
  3821  0022BE  A001               	btfss	___lmul@multiplier^0,0,c
  3822  0022C0  EF64  F011         	goto	u2491
  3823  0022C4  EF66  F011         	goto	u2490
  3824  0022C8                     u2491:
  3825  0022C8  EF6E  F011         	goto	l2718
  3826  0022CC                     u2490:
  3827  0022CC  5005               	movf	___lmul@multiplicand^0,w,c
  3828  0022CE  2609               	addwf	___lmul@product^0,f,c
  3829  0022D0  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  3830  0022D2  220A               	addwfc	(___lmul@product+1)^0,f,c
  3831  0022D4  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  3832  0022D6  220B               	addwfc	(___lmul@product+2)^0,f,c
  3833  0022D8  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  3834  0022DA  220C               	addwfc	(___lmul@product+3)^0,f,c
  3835  0022DC                     l2718:
  3836  0022DC  90D8               	bcf	status,0,c
  3837  0022DE  3605               	rlcf	___lmul@multiplicand^0,f,c
  3838  0022E0  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  3839  0022E2  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  3840  0022E4  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  3841  0022E6  90D8               	bcf	status,0,c
  3842  0022E8  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  3843  0022EA  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  3844  0022EC  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  3845  0022EE  3201               	rrcf	___lmul@multiplier^0,f,c
  3846  0022F0  5001               	movf	___lmul@multiplier^0,w,c
  3847  0022F2  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  3848  0022F4  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  3849  0022F6  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  3850  0022F8  A4D8               	btfss	status,2,c
  3851  0022FA  EF81  F011         	goto	u2501
  3852  0022FE  EF83  F011         	goto	u2500
  3853  002302                     u2501:
  3854  002302  EF5F  F011         	goto	l2714
  3855  002306                     u2500:
  3856  002306  C009  F001         	movff	___lmul@product,?___lmul
  3857  00230A  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  3858  00230E  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  3859  002312  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  3860  002316  0012               	return		;funcret
  3861  002318                     __end_of___lmul:
  3862                           	callstack 0
  3863                           
  3864 ;; *************** function ___llmod *****************
  3865 ;; Defined at:
  3866 ;;		line 7 in file "D:\Microchip\xc8\v2.32\pic\sources\c99\common\llmod.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;  dividend        4   25[COMRAM] unsigned long 
  3869 ;;  divisor         4   29[COMRAM] unsigned long 
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;  counter         1   33[COMRAM] unsigned char 
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  4   25[COMRAM] unsigned long 
  3874 ;; Registers used:
  3875 ;;		wreg, status,2, status,0
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3881 ;;      Params:         8       0       0       0       0       0       0
  3882 ;;      Locals:         1       0       0       0       0       0       0
  3883 ;;      Temps:          0       0       0       0       0       0       0
  3884 ;;      Totals:         9       0       0       0       0       0       0
  3885 ;;Total ram usage:        9 bytes
  3886 ;; Hardware stack levels used: 1
  3887 ;; This function calls:
  3888 ;;		Nothing
  3889 ;; This function is called by:
  3890 ;;		_atualizaLCD
  3891 ;;		_temperatura
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895                           	psect	text22
  3896  0020DA                     __ptext22:
  3897                           	callstack 0
  3898  0020DA                     ___llmod:
  3899                           	callstack 28
  3900  0020DA  501E               	movf	___llmod@divisor^0,w,c
  3901  0020DC  101F               	iorwf	(___llmod@divisor+1)^0,w,c
  3902  0020DE  1020               	iorwf	(___llmod@divisor+2)^0,w,c
  3903  0020E0  1021               	iorwf	(___llmod@divisor+3)^0,w,c
  3904  0020E2  B4D8               	btfsc	status,2,c
  3905  0020E4  EF76  F010         	goto	u2661
  3906  0020E8  EF78  F010         	goto	u2660
  3907  0020EC                     u2661:
  3908  0020EC  EFA8  F010         	goto	l973
  3909  0020F0                     u2660:
  3910  0020F0  0E01               	movlw	1
  3911  0020F2  6E22               	movwf	___llmod@counter^0,c
  3912  0020F4  EF82  F010         	goto	l2838
  3913  0020F8                     l2836:
  3914  0020F8  90D8               	bcf	status,0,c
  3915  0020FA  361E               	rlcf	___llmod@divisor^0,f,c
  3916  0020FC  361F               	rlcf	(___llmod@divisor+1)^0,f,c
  3917  0020FE  3620               	rlcf	(___llmod@divisor+2)^0,f,c
  3918  002100  3621               	rlcf	(___llmod@divisor+3)^0,f,c
  3919  002102  2A22               	incf	___llmod@counter^0,f,c
  3920  002104                     l2838:
  3921  002104  AE21               	btfss	(___llmod@divisor+3)^0,7,c
  3922  002106  EF87  F010         	goto	u2671
  3923  00210A  EF89  F010         	goto	u2670
  3924  00210E                     u2671:
  3925  00210E  EF7C  F010         	goto	l2836
  3926  002112                     u2670:
  3927  002112                     l2840:
  3928  002112  501E               	movf	___llmod@divisor^0,w,c
  3929  002114  5C1A               	subwf	___llmod@dividend^0,w,c
  3930  002116  501F               	movf	(___llmod@divisor+1)^0,w,c
  3931  002118  581B               	subwfb	(___llmod@dividend+1)^0,w,c
  3932  00211A  5020               	movf	(___llmod@divisor+2)^0,w,c
  3933  00211C  581C               	subwfb	(___llmod@dividend+2)^0,w,c
  3934  00211E  5021               	movf	(___llmod@divisor+3)^0,w,c
  3935  002120  581D               	subwfb	(___llmod@dividend+3)^0,w,c
  3936  002122  A0D8               	btfss	status,0,c
  3937  002124  EF96  F010         	goto	u2681
  3938  002128  EF98  F010         	goto	u2680
  3939  00212C                     u2681:
  3940  00212C  EFA0  F010         	goto	l2844
  3941  002130                     u2680:
  3942  002130  501E               	movf	___llmod@divisor^0,w,c
  3943  002132  5E1A               	subwf	___llmod@dividend^0,f,c
  3944  002134  501F               	movf	(___llmod@divisor+1)^0,w,c
  3945  002136  5A1B               	subwfb	(___llmod@dividend+1)^0,f,c
  3946  002138  5020               	movf	(___llmod@divisor+2)^0,w,c
  3947  00213A  5A1C               	subwfb	(___llmod@dividend+2)^0,f,c
  3948  00213C  5021               	movf	(___llmod@divisor+3)^0,w,c
  3949  00213E  5A1D               	subwfb	(___llmod@dividend+3)^0,f,c
  3950  002140                     l2844:
  3951  002140  90D8               	bcf	status,0,c
  3952  002142  3221               	rrcf	(___llmod@divisor+3)^0,f,c
  3953  002144  3220               	rrcf	(___llmod@divisor+2)^0,f,c
  3954  002146  321F               	rrcf	(___llmod@divisor+1)^0,f,c
  3955  002148  321E               	rrcf	___llmod@divisor^0,f,c
  3956  00214A  2E22               	decfsz	___llmod@counter^0,f,c
  3957  00214C  EF89  F010         	goto	l2840
  3958  002150                     l973:
  3959  002150  C01A  F01A         	movff	___llmod@dividend,?___llmod
  3960  002154  C01B  F01B         	movff	___llmod@dividend+1,?___llmod+1
  3961  002158  C01C  F01C         	movff	___llmod@dividend+2,?___llmod+2
  3962  00215C  C01D  F01D         	movff	___llmod@dividend+3,?___llmod+3
  3963  002160  0012               	return		;funcret
  3964  002162                     __end_of___llmod:
  3965                           	callstack 0
  3966                           
  3967 ;; *************** function ___lldiv *****************
  3968 ;; Defined at:
  3969 ;;		line 7 in file "D:\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;  dividend        4   12[COMRAM] unsigned long 
  3972 ;;  divisor         4   16[COMRAM] unsigned long 
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;  quotient        4   20[COMRAM] unsigned long 
  3975 ;;  counter         1   24[COMRAM] unsigned char 
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  4   12[COMRAM] unsigned long 
  3978 ;; Registers used:
  3979 ;;		wreg, status,2, status,0
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3985 ;;      Params:         8       0       0       0       0       0       0
  3986 ;;      Locals:         5       0       0       0       0       0       0
  3987 ;;      Temps:          0       0       0       0       0       0       0
  3988 ;;      Totals:        13       0       0       0       0       0       0
  3989 ;;Total ram usage:       13 bytes
  3990 ;; Hardware stack levels used: 1
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		_atualizaLCD
  3995 ;;		_temperatura
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text23
  4000  001F00                     __ptext23:
  4001                           	callstack 0
  4002  001F00                     ___lldiv:
  4003                           	callstack 28
  4004  001F00  0E00               	movlw	0
  4005  001F02  6E15               	movwf	___lldiv@quotient^0,c
  4006  001F04  0E00               	movlw	0
  4007  001F06  6E16               	movwf	(___lldiv@quotient+1)^0,c
  4008  001F08  0E00               	movlw	0
  4009  001F0A  6E17               	movwf	(___lldiv@quotient+2)^0,c
  4010  001F0C  0E00               	movlw	0
  4011  001F0E  6E18               	movwf	(___lldiv@quotient+3)^0,c
  4012  001F10  5011               	movf	___lldiv@divisor^0,w,c
  4013  001F12  1012               	iorwf	(___lldiv@divisor+1)^0,w,c
  4014  001F14  1013               	iorwf	(___lldiv@divisor+2)^0,w,c
  4015  001F16  1014               	iorwf	(___lldiv@divisor+3)^0,w,c
  4016  001F18  B4D8               	btfsc	status,2,c
  4017  001F1A  EF91  F00F         	goto	u2511
  4018  001F1E  EF93  F00F         	goto	u2510
  4019  001F22                     u2511:
  4020  001F22  EFC9  F00F         	goto	l580
  4021  001F26                     u2510:
  4022  001F26  0E01               	movlw	1
  4023  001F28  6E19               	movwf	___lldiv@counter^0,c
  4024  001F2A  EF9D  F00F         	goto	l2730
  4025  001F2E                     l2728:
  4026  001F2E  90D8               	bcf	status,0,c
  4027  001F30  3611               	rlcf	___lldiv@divisor^0,f,c
  4028  001F32  3612               	rlcf	(___lldiv@divisor+1)^0,f,c
  4029  001F34  3613               	rlcf	(___lldiv@divisor+2)^0,f,c
  4030  001F36  3614               	rlcf	(___lldiv@divisor+3)^0,f,c
  4031  001F38  2A19               	incf	___lldiv@counter^0,f,c
  4032  001F3A                     l2730:
  4033  001F3A  AE14               	btfss	(___lldiv@divisor+3)^0,7,c
  4034  001F3C  EFA2  F00F         	goto	u2521
  4035  001F40  EFA4  F00F         	goto	u2520
  4036  001F44                     u2521:
  4037  001F44  EF97  F00F         	goto	l2728
  4038  001F48                     u2520:
  4039  001F48                     l2732:
  4040  001F48  90D8               	bcf	status,0,c
  4041  001F4A  3615               	rlcf	___lldiv@quotient^0,f,c
  4042  001F4C  3616               	rlcf	(___lldiv@quotient+1)^0,f,c
  4043  001F4E  3617               	rlcf	(___lldiv@quotient+2)^0,f,c
  4044  001F50  3618               	rlcf	(___lldiv@quotient+3)^0,f,c
  4045  001F52  5011               	movf	___lldiv@divisor^0,w,c
  4046  001F54  5C0D               	subwf	___lldiv@dividend^0,w,c
  4047  001F56  5012               	movf	(___lldiv@divisor+1)^0,w,c
  4048  001F58  580E               	subwfb	(___lldiv@dividend+1)^0,w,c
  4049  001F5A  5013               	movf	(___lldiv@divisor+2)^0,w,c
  4050  001F5C  580F               	subwfb	(___lldiv@dividend+2)^0,w,c
  4051  001F5E  5014               	movf	(___lldiv@divisor+3)^0,w,c
  4052  001F60  5810               	subwfb	(___lldiv@dividend+3)^0,w,c
  4053  001F62  A0D8               	btfss	status,0,c
  4054  001F64  EFB6  F00F         	goto	u2531
  4055  001F68  EFB8  F00F         	goto	u2530
  4056  001F6C                     u2531:
  4057  001F6C  EFC1  F00F         	goto	l2740
  4058  001F70                     u2530:
  4059  001F70  5011               	movf	___lldiv@divisor^0,w,c
  4060  001F72  5E0D               	subwf	___lldiv@dividend^0,f,c
  4061  001F74  5012               	movf	(___lldiv@divisor+1)^0,w,c
  4062  001F76  5A0E               	subwfb	(___lldiv@dividend+1)^0,f,c
  4063  001F78  5013               	movf	(___lldiv@divisor+2)^0,w,c
  4064  001F7A  5A0F               	subwfb	(___lldiv@dividend+2)^0,f,c
  4065  001F7C  5014               	movf	(___lldiv@divisor+3)^0,w,c
  4066  001F7E  5A10               	subwfb	(___lldiv@dividend+3)^0,f,c
  4067  001F80  8015               	bsf	___lldiv@quotient^0,0,c
  4068  001F82                     l2740:
  4069  001F82  90D8               	bcf	status,0,c
  4070  001F84  3214               	rrcf	(___lldiv@divisor+3)^0,f,c
  4071  001F86  3213               	rrcf	(___lldiv@divisor+2)^0,f,c
  4072  001F88  3212               	rrcf	(___lldiv@divisor+1)^0,f,c
  4073  001F8A  3211               	rrcf	___lldiv@divisor^0,f,c
  4074  001F8C  2E19               	decfsz	___lldiv@counter^0,f,c
  4075  001F8E  EFA4  F00F         	goto	l2732
  4076  001F92                     l580:
  4077  001F92  C015  F00D         	movff	___lldiv@quotient,?___lldiv
  4078  001F96  C016  F00E         	movff	___lldiv@quotient+1,?___lldiv+1
  4079  001F9A  C017  F00F         	movff	___lldiv@quotient+2,?___lldiv+2
  4080  001F9E  C018  F010         	movff	___lldiv@quotient+3,?___lldiv+3
  4081  001FA2  0012               	return		;funcret
  4082  001FA4                     __end_of___lldiv:
  4083                           	callstack 0
  4084                           
  4085 ;; *************** function _lcdInit *****************
  4086 ;; Defined at:
  4087 ;;		line 72 in file "lcd.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;		None
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;		None
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  1    wreg      void 
  4094 ;; Registers used:
  4095 ;;		wreg, status,2, status,0, cstack
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4101 ;;      Params:         0       0       0       0       0       0       0
  4102 ;;      Locals:         0       0       0       0       0       0       0
  4103 ;;      Temps:          0       0       0       0       0       0       0
  4104 ;;      Totals:         0       0       0       0       0       0       0
  4105 ;;Total ram usage:        0 bytes
  4106 ;; Hardware stack levels used: 1
  4107 ;; Hardware stack levels required when called: 5
  4108 ;; This function calls:
  4109 ;;		_delayMicro
  4110 ;;		_delayMili
  4111 ;;		_lcdCommand
  4112 ;;		_pinMode
  4113 ;;		_pushNibble
  4114 ;;		_soInit
  4115 ;; This function is called by:
  4116 ;;		_main
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text24
  4121  001D9C                     __ptext24:
  4122                           	callstack 0
  4123  001D9C                     _lcdInit:
  4124                           	callstack 25
  4125  001D9C                     
  4126                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  4127  001D9C  0E00               	movlw	0
  4128  001D9E  6E02               	movwf	(pinMode@pin+1)^0,c
  4129  001DA0  0E1C               	movlw	28
  4130  001DA2  6E01               	movwf	pinMode@pin^0,c
  4131  001DA4  0E00               	movlw	0
  4132  001DA6  6E04               	movwf	(pinMode@type+1)^0,c
  4133  001DA8  0E00               	movlw	0
  4134  001DAA  6E03               	movwf	pinMode@type^0,c
  4135  001DAC  EC8D  F007         	call	_pinMode	;wreg free
  4136                           
  4137                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  4138  001DB0  0E00               	movlw	0
  4139  001DB2  6E02               	movwf	(pinMode@pin+1)^0,c
  4140  001DB4  0E1D               	movlw	29
  4141  001DB6  6E01               	movwf	pinMode@pin^0,c
  4142  001DB8  0E00               	movlw	0
  4143  001DBA  6E04               	movwf	(pinMode@type+1)^0,c
  4144  001DBC  0E00               	movlw	0
  4145  001DBE  6E03               	movwf	pinMode@type^0,c
  4146  001DC0  EC8D  F007         	call	_pinMode	;wreg free
  4147                           
  4148                           ;lcd.c: 75:  soInit();
  4149  001DC4  ECED  F013         	call	_soInit	;wreg free
  4150                           
  4151                           ;lcd.c: 76:  delayMili(15);
  4152  001DC8  0E00               	movlw	0
  4153  001DCA  6E02               	movwf	(delayMili@a+1)^0,c
  4154  001DCC  0E0F               	movlw	15
  4155  001DCE  6E01               	movwf	delayMili@a^0,c
  4156  001DD0  ECAE  F014         	call	_delayMili	;wreg free
  4157                           
  4158                           ;lcd.c: 78:  pushNibble(0x03, 0);
  4159  001DD4  0E00               	movlw	0
  4160  001DD6  6E0B               	movwf	(pushNibble@rs+1)^0,c
  4161  001DD8  0E00               	movlw	0
  4162  001DDA  6E0A               	movwf	pushNibble@rs^0,c
  4163  001DDC  0E03               	movlw	3
  4164  001DDE  EC44  F015         	call	_pushNibble
  4165                           
  4166                           ;lcd.c: 79:  delayMili(5);
  4167  001DE2  0E00               	movlw	0
  4168  001DE4  6E02               	movwf	(delayMili@a+1)^0,c
  4169  001DE6  0E05               	movlw	5
  4170  001DE8  6E01               	movwf	delayMili@a^0,c
  4171  001DEA  ECAE  F014         	call	_delayMili	;wreg free
  4172                           
  4173                           ;lcd.c: 80:  pushNibble(0x03, 0);
  4174  001DEE  0E00               	movlw	0
  4175  001DF0  6E0B               	movwf	(pushNibble@rs+1)^0,c
  4176  001DF2  0E00               	movlw	0
  4177  001DF4  6E0A               	movwf	pushNibble@rs^0,c
  4178  001DF6  0E03               	movlw	3
  4179  001DF8  EC44  F015         	call	_pushNibble
  4180  001DFC                     
  4181                           ;lcd.c: 81:  delayMicro(160);
  4182  001DFC  0E00               	movlw	0
  4183  001DFE  6E02               	movwf	(delayMicro@a+1)^0,c
  4184  001E00  0EA0               	movlw	160
  4185  001E02  6E01               	movwf	delayMicro@a^0,c
  4186  001E04  ECD7  F015         	call	_delayMicro	;wreg free
  4187  001E08                     
  4188                           ;lcd.c: 82:  pushNibble(0x03, 0);
  4189  001E08  0E00               	movlw	0
  4190  001E0A  6E0B               	movwf	(pushNibble@rs+1)^0,c
  4191  001E0C  0E00               	movlw	0
  4192  001E0E  6E0A               	movwf	pushNibble@rs^0,c
  4193  001E10  0E03               	movlw	3
  4194  001E12  EC44  F015         	call	_pushNibble
  4195                           
  4196                           ;lcd.c: 83:  delayMicro(160);
  4197  001E16  0E00               	movlw	0
  4198  001E18  6E02               	movwf	(delayMicro@a+1)^0,c
  4199  001E1A  0EA0               	movlw	160
  4200  001E1C  6E01               	movwf	delayMicro@a^0,c
  4201  001E1E  ECD7  F015         	call	_delayMicro	;wreg free
  4202  001E22                     
  4203                           ;lcd.c: 85:  pushNibble(0x02, 0);
  4204  001E22  0E00               	movlw	0
  4205  001E24  6E0B               	movwf	(pushNibble@rs+1)^0,c
  4206  001E26  0E00               	movlw	0
  4207  001E28  6E0A               	movwf	pushNibble@rs^0,c
  4208  001E2A  0E02               	movlw	2
  4209  001E2C  EC44  F015         	call	_pushNibble
  4210  001E30                     
  4211                           ;lcd.c: 86:  delayMili(10);
  4212  001E30  0E00               	movlw	0
  4213  001E32  6E02               	movwf	(delayMili@a+1)^0,c
  4214  001E34  0E0A               	movlw	10
  4215  001E36  6E01               	movwf	delayMili@a^0,c
  4216  001E38  ECAE  F014         	call	_delayMili	;wreg free
  4217  001E3C                     
  4218                           ;lcd.c: 88:  lcdCommand(0x28);
  4219  001E3C  0E28               	movlw	40
  4220  001E3E  EC9D  F015         	call	_lcdCommand
  4221  001E42                     
  4222                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  4223  001E42  0E0C               	movlw	12
  4224  001E44  EC9D  F015         	call	_lcdCommand
  4225  001E48                     
  4226                           ;lcd.c: 90:  lcdCommand(0x01);
  4227  001E48  0E01               	movlw	1
  4228  001E4A  EC9D  F015         	call	_lcdCommand
  4229  001E4E  0012               	return		;funcret
  4230  001E50                     __end_of_lcdInit:
  4231                           	callstack 0
  4232                           
  4233 ;; *************** function _pushNibble *****************
  4234 ;; Defined at:
  4235 ;;		line 25 in file "lcd.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  value           1    wreg     unsigned char 
  4238 ;;  rs              2    9[COMRAM] int 
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  value           1   11[COMRAM] unsigned char 
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      void 
  4243 ;; Registers used:
  4244 ;;		wreg, status,2, status,0, cstack
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4250 ;;      Params:         2       0       0       0       0       0       0
  4251 ;;      Locals:         1       0       0       0       0       0       0
  4252 ;;      Temps:          0       0       0       0       0       0       0
  4253 ;;      Totals:         3       0       0       0       0       0       0
  4254 ;;Total ram usage:        3 bytes
  4255 ;; Hardware stack levels used: 1
  4256 ;; Hardware stack levels required when called: 3
  4257 ;; This function calls:
  4258 ;;		_digitalWrite
  4259 ;;		_pulseEnablePin
  4260 ;;		_soWrite
  4261 ;; This function is called by:
  4262 ;;		_lcdInit
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text25
  4267  002A88                     __ptext25:
  4268                           	callstack 0
  4269  002A88                     _pushNibble:
  4270                           	callstack 26
  4271                           
  4272                           ;incstack = 0
  4273                           ;pushNibble@value stored from wreg
  4274  002A88  6E0C               	movwf	pushNibble@value^0,c
  4275  002A8A                     
  4276                           ;lcd.c: 26:  soWrite(value);
  4277  002A8A  C00C  F007         	movff	pushNibble@value,soWrite@value
  4278  002A8E  6A08               	clrf	(soWrite@value+1)^0,c
  4279  002A90  EC1A  F013         	call	_soWrite	;wreg free
  4280                           
  4281                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  4282  002A94  0E00               	movlw	0
  4283  002A96  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4284  002A98  0E1D               	movlw	29
  4285  002A9A  6E01               	movwf	digitalWrite@pin^0,c
  4286  002A9C  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  4287  002AA0  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  4288  002AA4  EC66  F006         	call	_digitalWrite	;wreg free
  4289                           
  4290                           ;lcd.c: 28:  pulseEnablePin();
  4291  002AA8  ECAB  F013         	call	_pulseEnablePin	;wreg free
  4292  002AAC  0012               	return		;funcret
  4293  002AAE                     __end_of_pushNibble:
  4294                           	callstack 0
  4295                           
  4296 ;; *************** function _kpInit *****************
  4297 ;; Defined at:
  4298 ;;		line 54 in file "keypad.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;		None
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;		None
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  1    wreg      void 
  4305 ;; Registers used:
  4306 ;;		wreg, status,2, status,0, cstack
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4312 ;;      Params:         0       0       0       0       0       0       0
  4313 ;;      Locals:         0       0       0       0       0       0       0
  4314 ;;      Temps:          0       0       0       0       0       0       0
  4315 ;;      Totals:         0       0       0       0       0       0       0
  4316 ;;Total ram usage:        0 bytes
  4317 ;; Hardware stack levels used: 1
  4318 ;; Hardware stack levels required when called: 2
  4319 ;; This function calls:
  4320 ;;		_pinMode
  4321 ;;		_soInit
  4322 ;; This function is called by:
  4323 ;;		_main
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           	psect	text26
  4328  0028F8                     __ptext26:
  4329                           	callstack 0
  4330  0028F8                     _kpInit:
  4331                           	callstack 28
  4332  0028F8                     
  4333                           ;keypad.c: 55:   soInit();
  4334  0028F8  ECED  F013         	call	_soInit	;wreg free
  4335                           
  4336                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  4337  0028FC  0E00               	movlw	0
  4338  0028FE  6E02               	movwf	(pinMode@pin+1)^0,c
  4339  002900  0E0A               	movlw	10
  4340  002902  6E01               	movwf	pinMode@pin^0,c
  4341  002904  0E00               	movlw	0
  4342  002906  6E04               	movwf	(pinMode@type+1)^0,c
  4343  002908  0E01               	movlw	1
  4344  00290A  6E03               	movwf	pinMode@type^0,c
  4345  00290C  EC8D  F007         	call	_pinMode	;wreg free
  4346                           
  4347                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  4348  002910  0E00               	movlw	0
  4349  002912  6E02               	movwf	(pinMode@pin+1)^0,c
  4350  002914  0E09               	movlw	9
  4351  002916  6E01               	movwf	pinMode@pin^0,c
  4352  002918  0E00               	movlw	0
  4353  00291A  6E04               	movwf	(pinMode@type+1)^0,c
  4354  00291C  0E01               	movlw	1
  4355  00291E  6E03               	movwf	pinMode@type^0,c
  4356  002920  EC8D  F007         	call	_pinMode	;wreg free
  4357  002924                     
  4358                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  4359  002924  0E0C               	movlw	12
  4360  002926  6EC1               	movwf	193,c	;volatile
  4361  002928  0012               	return		;funcret
  4362  00292A                     __end_of_kpInit:
  4363                           	callstack 0
  4364                           
  4365 ;; *************** function _soInit *****************
  4366 ;; Defined at:
  4367 ;;		line 3 in file "so.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;		None
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;		None
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		wreg, status,2, status,0, cstack
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4381 ;;      Params:         0       0       0       0       0       0       0
  4382 ;;      Locals:         0       0       0       0       0       0       0
  4383 ;;      Temps:          0       0       0       0       0       0       0
  4384 ;;      Totals:         0       0       0       0       0       0       0
  4385 ;;Total ram usage:        0 bytes
  4386 ;; Hardware stack levels used: 1
  4387 ;; Hardware stack levels required when called: 1
  4388 ;; This function calls:
  4389 ;;		_pinMode
  4390 ;; This function is called by:
  4391 ;;		_kpInit
  4392 ;;		_lcdInit
  4393 ;;		_ssdInit
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text27
  4398  0027DA                     __ptext27:
  4399                           	callstack 0
  4400  0027DA                     _soInit:
  4401                           	callstack 28
  4402  0027DA                     
  4403                           ;so.c: 4:  pinMode(PIN_D7, 0);
  4404  0027DA  0E00               	movlw	0
  4405  0027DC  6E02               	movwf	(pinMode@pin+1)^0,c
  4406  0027DE  0E1F               	movlw	31
  4407  0027E0  6E01               	movwf	pinMode@pin^0,c
  4408  0027E2  0E00               	movlw	0
  4409  0027E4  6E04               	movwf	(pinMode@type+1)^0,c
  4410  0027E6  0E00               	movlw	0
  4411  0027E8  6E03               	movwf	pinMode@type^0,c
  4412  0027EA  EC8D  F007         	call	_pinMode	;wreg free
  4413                           
  4414                           ;so.c: 5:  pinMode(PIN_B0, 0);
  4415  0027EE  0E00               	movlw	0
  4416  0027F0  6E02               	movwf	(pinMode@pin+1)^0,c
  4417  0027F2  0E08               	movlw	8
  4418  0027F4  6E01               	movwf	pinMode@pin^0,c
  4419  0027F6  0E00               	movlw	0
  4420  0027F8  6E04               	movwf	(pinMode@type+1)^0,c
  4421  0027FA  0E00               	movlw	0
  4422  0027FC  6E03               	movwf	pinMode@type^0,c
  4423  0027FE  EC8D  F007         	call	_pinMode	;wreg free
  4424                           
  4425                           ;so.c: 6:  pinMode(PIN_D6, 0);
  4426  002802  0E00               	movlw	0
  4427  002804  6E02               	movwf	(pinMode@pin+1)^0,c
  4428  002806  0E1E               	movlw	30
  4429  002808  6E01               	movwf	pinMode@pin^0,c
  4430  00280A  0E00               	movlw	0
  4431  00280C  6E04               	movwf	(pinMode@type+1)^0,c
  4432  00280E  0E00               	movlw	0
  4433  002810  6E03               	movwf	pinMode@type^0,c
  4434  002812  EC8D  F007         	call	_pinMode	;wreg free
  4435  002816  0012               	return		;funcret
  4436  002818                     __end_of_soInit:
  4437                           	callstack 0
  4438                           
  4439 ;; *************** function _iniSimbolos *****************
  4440 ;; Defined at:
  4441 ;;		line 31 in file "main.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;		None
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;  cimaBaixo       8   30[COMRAM] unsigned char [8]
  4446 ;;  baixo           8   22[COMRAM] unsigned char [8]
  4447 ;;  cima            8   14[COMRAM] unsigned char [8]
  4448 ;;  i               1   38[COMRAM] unsigned char 
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  1    wreg      void 
  4451 ;; Registers used:
  4452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4458 ;;      Params:         0       0       0       0       0       0       0
  4459 ;;      Locals:        25       0       0       0       0       0       0
  4460 ;;      Temps:          0       0       0       0       0       0       0
  4461 ;;      Totals:        25       0       0       0       0       0       0
  4462 ;;Total ram usage:       25 bytes
  4463 ;; Hardware stack levels used: 1
  4464 ;; Hardware stack levels required when called: 5
  4465 ;; This function calls:
  4466 ;;		_lcdChar
  4467 ;;		_lcdCommand
  4468 ;; This function is called by:
  4469 ;;		_main
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473                           	psect	text28
  4474  001CDA                     __ptext28:
  4475                           	callstack 0
  4476  001CDA                     _iniSimbolos:
  4477                           	callstack 25
  4478  001CDA                     
  4479                           ;main.c: 32:     char i;;main.c: 34:     char cima[8] = {0x04, 0x0E, 0x15, 0x04, 0x04, 0
      +                          x04, 0x04, 0x04};
  4480  001CDA  EE20  F05E         	lfsr	2,iniSimbolos@F2412
  4481  001CDE  EE10  F00F         	lfsr	1,iniSimbolos@cima
  4482  001CE2  0E07               	movlw	7
  4483  001CE4                     u2931:
  4484  001CE4  CFDB FFE3          	movff	plusw2,plusw1
  4485  001CE8  06E8               	decf	wreg,f,c
  4486  001CEA  E2FC               	bc	u2931
  4487                           
  4488                           ;main.c: 35:     char baixo[8] = {0x04, 0x04, 0x04, 0x04, 0x04, 0x15, 0x0E, 0x04};
  4489  001CEC  EE20  F056         	lfsr	2,iniSimbolos@F2414
  4490  001CF0  EE10  F017         	lfsr	1,iniSimbolos@baixo
  4491  001CF4  0E07               	movlw	7
  4492  001CF6                     u2941:
  4493  001CF6  CFDB FFE3          	movff	plusw2,plusw1
  4494  001CFA  06E8               	decf	wreg,f,c
  4495  001CFC  E2FC               	bc	u2941
  4496                           
  4497                           ;main.c: 36:     char cimaBaixo[8] = {0x04, 0x0E, 0x15, 0x04, 0x04, 0x15, 0x0E, 0x04};
  4498  001CFE  EE20  F04E         	lfsr	2,iniSimbolos@F2416
  4499  001D02  EE10  F01F         	lfsr	1,iniSimbolos@cimaBaixo
  4500  001D06  0E07               	movlw	7
  4501  001D08                     u2951:
  4502  001D08  CFDB FFE3          	movff	plusw2,plusw1
  4503  001D0C  06E8               	decf	wreg,f,c
  4504  001D0E  E2FC               	bc	u2951
  4505  001D10                     
  4506                           ;main.c: 39:     lcdCommand(0x40);
  4507  001D10  0E40               	movlw	64
  4508  001D12  EC9D  F015         	call	_lcdCommand
  4509  001D16                     
  4510                           ;main.c: 40:     for(i=0; i<8; i++){
  4511  001D16  0E00               	movlw	0
  4512  001D18  6E27               	movwf	iniSimbolos@i^0,c
  4513  001D1A                     l3092:
  4514                           
  4515                           ;main.c: 41:         lcdChar(cima[i]);
  4516  001D1A  0E0F               	movlw	low iniSimbolos@cima
  4517  001D1C  2427               	addwf	iniSimbolos@i^0,w,c
  4518  001D1E  6ED9               	movwf	fsr2l,c
  4519  001D20  6ADA               	clrf	fsr2h,c
  4520  001D22  0E00               	movlw	high iniSimbolos@cima
  4521  001D24  22DA               	addwfc	fsr2h,f,c
  4522  001D26  50DF               	movf	indf2,w,c
  4523  001D28  EC8E  F015         	call	_lcdChar
  4524  001D2C                     
  4525                           ;main.c: 42:     }
  4526  001D2C  2A27               	incf	iniSimbolos@i^0,f,c
  4527  001D2E  0E07               	movlw	7
  4528  001D30  6427               	cpfsgt	iniSimbolos@i^0,c
  4529  001D32  EF9D  F00E         	goto	u2961
  4530  001D36  EF9F  F00E         	goto	u2960
  4531  001D3A                     u2961:
  4532  001D3A  EF8D  F00E         	goto	l3092
  4533  001D3E                     u2960:
  4534  001D3E                     
  4535                           ;main.c: 44:     lcdCommand(0x48);
  4536  001D3E  0E48               	movlw	72
  4537  001D40  EC9D  F015         	call	_lcdCommand
  4538  001D44                     
  4539                           ;main.c: 45:     for(i=0; i<8; i++){
  4540  001D44  0E00               	movlw	0
  4541  001D46  6E27               	movwf	iniSimbolos@i^0,c
  4542  001D48                     l3106:
  4543                           
  4544                           ;main.c: 46:         lcdChar(baixo[i]);
  4545  001D48  0E17               	movlw	low iniSimbolos@baixo
  4546  001D4A  2427               	addwf	iniSimbolos@i^0,w,c
  4547  001D4C  6ED9               	movwf	fsr2l,c
  4548  001D4E  6ADA               	clrf	fsr2h,c
  4549  001D50  0E00               	movlw	high iniSimbolos@baixo
  4550  001D52  22DA               	addwfc	fsr2h,f,c
  4551  001D54  50DF               	movf	indf2,w,c
  4552  001D56  EC8E  F015         	call	_lcdChar
  4553  001D5A                     
  4554                           ;main.c: 47:     }
  4555  001D5A  2A27               	incf	iniSimbolos@i^0,f,c
  4556  001D5C  0E07               	movlw	7
  4557  001D5E  6427               	cpfsgt	iniSimbolos@i^0,c
  4558  001D60  EFB4  F00E         	goto	u2971
  4559  001D64  EFB6  F00E         	goto	u2970
  4560  001D68                     u2971:
  4561  001D68  EFA4  F00E         	goto	l3106
  4562  001D6C                     u2970:
  4563  001D6C                     
  4564                           ;main.c: 49:     lcdCommand(0x50);
  4565  001D6C  0E50               	movlw	80
  4566  001D6E  EC9D  F015         	call	_lcdCommand
  4567  001D72                     
  4568                           ;main.c: 50:     for(i=0; i<8; i++){
  4569  001D72  0E00               	movlw	0
  4570  001D74  6E27               	movwf	iniSimbolos@i^0,c
  4571  001D76                     l3120:
  4572                           
  4573                           ;main.c: 51:         lcdChar(cimaBaixo[i]);
  4574  001D76  0E1F               	movlw	low iniSimbolos@cimaBaixo
  4575  001D78  2427               	addwf	iniSimbolos@i^0,w,c
  4576  001D7A  6ED9               	movwf	fsr2l,c
  4577  001D7C  6ADA               	clrf	fsr2h,c
  4578  001D7E  0E00               	movlw	high iniSimbolos@cimaBaixo
  4579  001D80  22DA               	addwfc	fsr2h,f,c
  4580  001D82  50DF               	movf	indf2,w,c
  4581  001D84  EC8E  F015         	call	_lcdChar
  4582  001D88                     
  4583                           ;main.c: 52:     }
  4584  001D88  2A27               	incf	iniSimbolos@i^0,f,c
  4585  001D8A  0E07               	movlw	7
  4586  001D8C  6427               	cpfsgt	iniSimbolos@i^0,c
  4587  001D8E  EFCB  F00E         	goto	u2981
  4588  001D92  EFCD  F00E         	goto	u2980
  4589  001D96                     u2981:
  4590  001D96  EFBB  F00E         	goto	l3120
  4591  001D9A                     u2980:
  4592  001D9A  0012               	return		;funcret
  4593  001D9C                     __end_of_iniSimbolos:
  4594                           	callstack 0
  4595                           
  4596 ;; *************** function _escolherModo *****************
  4597 ;; Defined at:
  4598 ;;		line 160 in file "main.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;		None
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;		None
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1    wreg      void 
  4605 ;; Registers used:
  4606 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4612 ;;      Params:         0       0       0       0       0       0       0
  4613 ;;      Locals:         0       0       0       0       0       0       0
  4614 ;;      Temps:          0       0       0       0       0       0       0
  4615 ;;      Totals:         0       0       0       0       0       0       0
  4616 ;;Total ram usage:        0 bytes
  4617 ;; Hardware stack levels used: 1
  4618 ;; Hardware stack levels required when called: 6
  4619 ;; This function calls:
  4620 ;;		_lcdCommand
  4621 ;;		_lcdString
  4622 ;; This function is called by:
  4623 ;;		_main
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text29
  4628  002AAE                     __ptext29:
  4629                           	callstack 0
  4630  002AAE                     _escolherModo:
  4631                           	callstack 24
  4632  002AAE                     
  4633                           ;main.c: 161:     lcdCommand(0x80);
  4634  002AAE  0E80               	movlw	128
  4635  002AB0  EC9D  F015         	call	_lcdCommand
  4636  002AB4                     
  4637                           ;main.c: 162:     lcdString("Escolha o modo: ");
  4638  002AB4  0E1B               	movlw	low STR_9
  4639  002AB6  6E0F               	movwf	lcdString@msg^0,c
  4640  002AB8  0E06               	movlw	high STR_9
  4641  002ABA  6E10               	movwf	(lcdString@msg+1)^0,c
  4642  002ABC  EC9D  F012         	call	_lcdString	;wreg free
  4643  002AC0                     
  4644                           ;main.c: 163:     lcdCommand(0xC0);
  4645  002AC0  0EC0               	movlw	192
  4646  002AC2  EC9D  F015         	call	_lcdCommand
  4647                           
  4648                           ;main.c: 164:     lcdString("8-M 5-PAQ 6-Gr");
  4649  002AC6  0E2C               	movlw	low STR_10
  4650  002AC8  6E0F               	movwf	lcdString@msg^0,c
  4651  002ACA  0E06               	movlw	high STR_10
  4652  002ACC  6E10               	movwf	(lcdString@msg+1)^0,c
  4653  002ACE  EC9D  F012         	call	_lcdString	;wreg free
  4654  002AD2  0012               	return		;funcret
  4655  002AD4                     __end_of_escolherModo:
  4656                           	callstack 0
  4657                           
  4658 ;; *************** function _desligado *****************
  4659 ;; Defined at:
  4660 ;;		line 55 in file "main.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;		None
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;		None
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  1    wreg      void 
  4667 ;; Registers used:
  4668 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4674 ;;      Params:         0       0       0       0       0       0       0
  4675 ;;      Locals:         2       0       0       0       0       0       0
  4676 ;;      Temps:          0       0       0       0       0       0       0
  4677 ;;      Totals:         2       0       0       0       0       0       0
  4678 ;;Total ram usage:        2 bytes
  4679 ;; Hardware stack levels used: 1
  4680 ;; Hardware stack levels required when called: 6
  4681 ;; This function calls:
  4682 ;;		___awdiv
  4683 ;;		___awmod
  4684 ;;		_bcd2dec
  4685 ;;		_dsReadData
  4686 ;;		_lcdChar
  4687 ;;		_lcdCommand
  4688 ;;		_lcdString
  4689 ;; This function is called by:
  4690 ;;		_main
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694                           	psect	text30
  4695  00066E                     __ptext30:
  4696                           	callstack 0
  4697  00066E                     _desligado:
  4698                           	callstack 24
  4699  00066E                     
  4700                           ;main.c: 57:     lcdCommand(0x80);
  4701  00066E  0E80               	movlw	128
  4702  000670  EC9D  F015         	call	_lcdCommand
  4703  000674                     
  4704                           ;main.c: 58:     lcdString("    ");
  4705  000674  0E66               	movlw	low STR_1
  4706  000676  6E0F               	movwf	lcdString@msg^0,c
  4707  000678  0E06               	movlw	high STR_1
  4708  00067A  6E10               	movwf	(lcdString@msg+1)^0,c
  4709  00067C  EC9D  F012         	call	_lcdString	;wreg free
  4710  000680                     
  4711                           ;main.c: 59:     lcdChar((((bcd2dec(dsReadData(4)& 0x5f)) / 10) % 10) + 48);
  4712  000680  0E00               	movlw	0
  4713  000682  6E0F               	movwf	(dsReadData@address+1)^0,c
  4714  000684  0E04               	movlw	4
  4715  000686  6E0E               	movwf	dsReadData@address^0,c
  4716  000688  EC65  F013         	call	_dsReadData	;wreg free
  4717  00068C  0E5F               	movlw	95
  4718  00068E  140E               	andwf	?_dsReadData^0,w,c
  4719  000690  6E21               	movwf	bcd2dec@value^0,c
  4720  000692  6A22               	clrf	(bcd2dec@value+1)^0,c
  4721  000694  ECCC  F013         	call	_bcd2dec	;wreg free
  4722  000698  C021  F02B         	movff	?_bcd2dec,_desligado$1315
  4723  00069C  C022  F02C         	movff	?_bcd2dec+1,_desligado$1315+1
  4724  0006A0                     
  4725                           ;main.c: 59:     lcdChar((((bcd2dec(dsReadData(4)& 0x5f)) / 10) % 10) + 48);
  4726  0006A0  0E00               	movlw	0
  4727  0006A2  6E16               	movwf	(___awdiv@divisor+1)^0,c
  4728  0006A4  0E0A               	movlw	10
  4729  0006A6  6E15               	movwf	___awdiv@divisor^0,c
  4730  0006A8  C02B  F013         	movff	_desligado$1315,___awdiv@dividend
  4731  0006AC  C02C  F014         	movff	_desligado$1315+1,___awdiv@dividend+1
  4732  0006B0  EC0B  F00E         	call	___awdiv	;wreg free
  4733  0006B4  C013  F025         	movff	?___awdiv,___awmod@dividend
  4734  0006B8  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  4735  0006BC  0E00               	movlw	0
  4736  0006BE  6E28               	movwf	(___awmod@divisor+1)^0,c
  4737  0006C0  0E0A               	movlw	10
  4738  0006C2  6E27               	movwf	___awmod@divisor^0,c
  4739  0006C4  EC28  F00F         	call	___awmod	;wreg free
  4740  0006C8  5025               	movf	?___awmod^0,w,c
  4741  0006CA  0F30               	addlw	48
  4742  0006CC  EC8E  F015         	call	_lcdChar
  4743  0006D0                     
  4744                           ;main.c: 60:     lcdChar(((bcd2dec(dsReadData(4)& 0x5f)) % 10) + 48);
  4745  0006D0  0E00               	movlw	0
  4746  0006D2  6E0F               	movwf	(dsReadData@address+1)^0,c
  4747  0006D4  0E04               	movlw	4
  4748  0006D6  6E0E               	movwf	dsReadData@address^0,c
  4749  0006D8  EC65  F013         	call	_dsReadData	;wreg free
  4750  0006DC  0E5F               	movlw	95
  4751  0006DE  140E               	andwf	?_dsReadData^0,w,c
  4752  0006E0  6E21               	movwf	bcd2dec@value^0,c
  4753  0006E2  6A22               	clrf	(bcd2dec@value+1)^0,c
  4754  0006E4  ECCC  F013         	call	_bcd2dec	;wreg free
  4755  0006E8  C021  F025         	movff	?_bcd2dec,___awmod@dividend
  4756  0006EC  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
  4757  0006F0  0E00               	movlw	0
  4758  0006F2  6E28               	movwf	(___awmod@divisor+1)^0,c
  4759  0006F4  0E0A               	movlw	10
  4760  0006F6  6E27               	movwf	___awmod@divisor^0,c
  4761  0006F8  EC28  F00F         	call	___awmod	;wreg free
  4762  0006FC  5025               	movf	?___awmod^0,w,c
  4763  0006FE  0F30               	addlw	48
  4764  000700  EC8E  F015         	call	_lcdChar
  4765  000704                     
  4766                           ;main.c: 61:     lcdChar('/');
  4767  000704  0E2F               	movlw	47
  4768  000706  EC8E  F015         	call	_lcdChar
  4769  00070A                     
  4770                           ;main.c: 62:     lcdChar((((bcd2dec(dsReadData(5)& 0x3f)) / 10) % 10) + 48);
  4771  00070A  0E00               	movlw	0
  4772  00070C  6E0F               	movwf	(dsReadData@address+1)^0,c
  4773  00070E  0E05               	movlw	5
  4774  000710  6E0E               	movwf	dsReadData@address^0,c
  4775  000712  EC65  F013         	call	_dsReadData	;wreg free
  4776  000716  0E3F               	movlw	63
  4777  000718  140E               	andwf	?_dsReadData^0,w,c
  4778  00071A  6E21               	movwf	bcd2dec@value^0,c
  4779  00071C  6A22               	clrf	(bcd2dec@value+1)^0,c
  4780  00071E  ECCC  F013         	call	_bcd2dec	;wreg free
  4781  000722  C021  F02B         	movff	?_bcd2dec,_desligado$1315
  4782  000726  C022  F02C         	movff	?_bcd2dec+1,_desligado$1315+1
  4783  00072A                     
  4784                           ;main.c: 62:     lcdChar((((bcd2dec(dsReadData(5)& 0x3f)) / 10) % 10) + 48);
  4785  00072A  0E00               	movlw	0
  4786  00072C  6E16               	movwf	(___awdiv@divisor+1)^0,c
  4787  00072E  0E0A               	movlw	10
  4788  000730  6E15               	movwf	___awdiv@divisor^0,c
  4789  000732  C02B  F013         	movff	_desligado$1315,___awdiv@dividend
  4790  000736  C02C  F014         	movff	_desligado$1315+1,___awdiv@dividend+1
  4791  00073A  EC0B  F00E         	call	___awdiv	;wreg free
  4792  00073E  C013  F025         	movff	?___awdiv,___awmod@dividend
  4793  000742  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  4794  000746  0E00               	movlw	0
  4795  000748  6E28               	movwf	(___awmod@divisor+1)^0,c
  4796  00074A  0E0A               	movlw	10
  4797  00074C  6E27               	movwf	___awmod@divisor^0,c
  4798  00074E  EC28  F00F         	call	___awmod	;wreg free
  4799  000752  5025               	movf	?___awmod^0,w,c
  4800  000754  0F30               	addlw	48
  4801  000756  EC8E  F015         	call	_lcdChar
  4802  00075A                     
  4803                           ;main.c: 63:     lcdChar(((bcd2dec(dsReadData(5)& 0x3f)) % 10) + 48); lcdChar('/');
  4804  00075A  0E00               	movlw	0
  4805  00075C  6E0F               	movwf	(dsReadData@address+1)^0,c
  4806  00075E  0E05               	movlw	5
  4807  000760  6E0E               	movwf	dsReadData@address^0,c
  4808  000762  EC65  F013         	call	_dsReadData	;wreg free
  4809  000766  0E3F               	movlw	63
  4810  000768  140E               	andwf	?_dsReadData^0,w,c
  4811  00076A  6E21               	movwf	bcd2dec@value^0,c
  4812  00076C  6A22               	clrf	(bcd2dec@value+1)^0,c
  4813  00076E  ECCC  F013         	call	_bcd2dec	;wreg free
  4814  000772  C021  F025         	movff	?_bcd2dec,___awmod@dividend
  4815  000776  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
  4816  00077A  0E00               	movlw	0
  4817  00077C  6E28               	movwf	(___awmod@divisor+1)^0,c
  4818  00077E  0E0A               	movlw	10
  4819  000780  6E27               	movwf	___awmod@divisor^0,c
  4820  000782  EC28  F00F         	call	___awmod	;wreg free
  4821  000786  5025               	movf	?___awmod^0,w,c
  4822  000788  0F30               	addlw	48
  4823  00078A  EC8E  F015         	call	_lcdChar
  4824  00078E  0E2F               	movlw	47
  4825  000790  EC8E  F015         	call	_lcdChar
  4826  000794                     
  4827                           ;main.c: 64:     lcdChar((((bcd2dec(dsReadData(6)& 0xff)) / 10) % 10) + 48);
  4828  000794  0E00               	movlw	0
  4829  000796  6E0F               	movwf	(dsReadData@address+1)^0,c
  4830  000798  0E06               	movlw	6
  4831  00079A  6E0E               	movwf	dsReadData@address^0,c
  4832  00079C  EC65  F013         	call	_dsReadData	;wreg free
  4833  0007A0  500E               	movf	?_dsReadData^0,w,c
  4834  0007A2  6E21               	movwf	bcd2dec@value^0,c
  4835  0007A4  6A22               	clrf	(bcd2dec@value+1)^0,c
  4836  0007A6  ECCC  F013         	call	_bcd2dec	;wreg free
  4837  0007AA  C021  F02B         	movff	?_bcd2dec,_desligado$1315
  4838  0007AE  C022  F02C         	movff	?_bcd2dec+1,_desligado$1315+1
  4839  0007B2                     
  4840                           ;main.c: 64:     lcdChar((((bcd2dec(dsReadData(6)& 0xff)) / 10) % 10) + 48);
  4841  0007B2  0E00               	movlw	0
  4842  0007B4  6E16               	movwf	(___awdiv@divisor+1)^0,c
  4843  0007B6  0E0A               	movlw	10
  4844  0007B8  6E15               	movwf	___awdiv@divisor^0,c
  4845  0007BA  C02B  F013         	movff	_desligado$1315,___awdiv@dividend
  4846  0007BE  C02C  F014         	movff	_desligado$1315+1,___awdiv@dividend+1
  4847  0007C2  EC0B  F00E         	call	___awdiv	;wreg free
  4848  0007C6  C013  F025         	movff	?___awdiv,___awmod@dividend
  4849  0007CA  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  4850  0007CE  0E00               	movlw	0
  4851  0007D0  6E28               	movwf	(___awmod@divisor+1)^0,c
  4852  0007D2  0E0A               	movlw	10
  4853  0007D4  6E27               	movwf	___awmod@divisor^0,c
  4854  0007D6  EC28  F00F         	call	___awmod	;wreg free
  4855  0007DA  5025               	movf	?___awmod^0,w,c
  4856  0007DC  0F30               	addlw	48
  4857  0007DE  EC8E  F015         	call	_lcdChar
  4858  0007E2                     
  4859                           ;main.c: 65:     lcdChar(((bcd2dec(dsReadData(6)& 0xff)) % 10) + 48);
  4860  0007E2  0E00               	movlw	0
  4861  0007E4  6E0F               	movwf	(dsReadData@address+1)^0,c
  4862  0007E6  0E06               	movlw	6
  4863  0007E8  6E0E               	movwf	dsReadData@address^0,c
  4864  0007EA  EC65  F013         	call	_dsReadData	;wreg free
  4865  0007EE  500E               	movf	?_dsReadData^0,w,c
  4866  0007F0  6E21               	movwf	bcd2dec@value^0,c
  4867  0007F2  6A22               	clrf	(bcd2dec@value+1)^0,c
  4868  0007F4  ECCC  F013         	call	_bcd2dec	;wreg free
  4869  0007F8  C021  F025         	movff	?_bcd2dec,___awmod@dividend
  4870  0007FC  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
  4871  000800  0E00               	movlw	0
  4872  000802  6E28               	movwf	(___awmod@divisor+1)^0,c
  4873  000804  0E0A               	movlw	10
  4874  000806  6E27               	movwf	___awmod@divisor^0,c
  4875  000808  EC28  F00F         	call	___awmod	;wreg free
  4876  00080C  5025               	movf	?___awmod^0,w,c
  4877  00080E  0F30               	addlw	48
  4878  000810  EC8E  F015         	call	_lcdChar
  4879  000814                     
  4880                           ;main.c: 68:     lcdCommand(0xC0);
  4881  000814  0EC0               	movlw	192
  4882  000816  EC9D  F015         	call	_lcdCommand
  4883  00081A                     
  4884                           ;main.c: 69:     lcdString("    ");
  4885  00081A  0E66               	movlw	low STR_1
  4886  00081C  6E0F               	movwf	lcdString@msg^0,c
  4887  00081E  0E06               	movlw	high STR_1
  4888  000820  6E10               	movwf	(lcdString@msg+1)^0,c
  4889  000822  EC9D  F012         	call	_lcdString	;wreg free
  4890  000826                     
  4891                           ;main.c: 70:     lcdChar((((bcd2dec(dsReadData(2)& 0x5f)) / 10) % 10) + 48);
  4892  000826  0E00               	movlw	0
  4893  000828  6E0F               	movwf	(dsReadData@address+1)^0,c
  4894  00082A  0E02               	movlw	2
  4895  00082C  6E0E               	movwf	dsReadData@address^0,c
  4896  00082E  EC65  F013         	call	_dsReadData	;wreg free
  4897  000832  0E5F               	movlw	95
  4898  000834  140E               	andwf	?_dsReadData^0,w,c
  4899  000836  6E21               	movwf	bcd2dec@value^0,c
  4900  000838  6A22               	clrf	(bcd2dec@value+1)^0,c
  4901  00083A  ECCC  F013         	call	_bcd2dec	;wreg free
  4902  00083E  C021  F02B         	movff	?_bcd2dec,_desligado$1315
  4903  000842  C022  F02C         	movff	?_bcd2dec+1,_desligado$1315+1
  4904  000846                     
  4905                           ;main.c: 70:     lcdChar((((bcd2dec(dsReadData(2)& 0x5f)) / 10) % 10) + 48);
  4906  000846  0E00               	movlw	0
  4907  000848  6E16               	movwf	(___awdiv@divisor+1)^0,c
  4908  00084A  0E0A               	movlw	10
  4909  00084C  6E15               	movwf	___awdiv@divisor^0,c
  4910  00084E  C02B  F013         	movff	_desligado$1315,___awdiv@dividend
  4911  000852  C02C  F014         	movff	_desligado$1315+1,___awdiv@dividend+1
  4912  000856  EC0B  F00E         	call	___awdiv	;wreg free
  4913  00085A  C013  F025         	movff	?___awdiv,___awmod@dividend
  4914  00085E  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  4915  000862  0E00               	movlw	0
  4916  000864  6E28               	movwf	(___awmod@divisor+1)^0,c
  4917  000866  0E0A               	movlw	10
  4918  000868  6E27               	movwf	___awmod@divisor^0,c
  4919  00086A  EC28  F00F         	call	___awmod	;wreg free
  4920  00086E  5025               	movf	?___awmod^0,w,c
  4921  000870  0F30               	addlw	48
  4922  000872  EC8E  F015         	call	_lcdChar
  4923                           
  4924                           ;main.c: 71:     lcdChar(((bcd2dec(dsReadData(2)& 0x5f)) % 10) + 48);
  4925  000876  0E00               	movlw	0
  4926  000878  6E0F               	movwf	(dsReadData@address+1)^0,c
  4927  00087A  0E02               	movlw	2
  4928  00087C  6E0E               	movwf	dsReadData@address^0,c
  4929  00087E  EC65  F013         	call	_dsReadData	;wreg free
  4930  000882  0E5F               	movlw	95
  4931  000884  140E               	andwf	?_dsReadData^0,w,c
  4932  000886  6E21               	movwf	bcd2dec@value^0,c
  4933  000888  6A22               	clrf	(bcd2dec@value+1)^0,c
  4934  00088A  ECCC  F013         	call	_bcd2dec	;wreg free
  4935  00088E  C021  F025         	movff	?_bcd2dec,___awmod@dividend
  4936  000892  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
  4937  000896  0E00               	movlw	0
  4938  000898  6E28               	movwf	(___awmod@divisor+1)^0,c
  4939  00089A  0E0A               	movlw	10
  4940  00089C  6E27               	movwf	___awmod@divisor^0,c
  4941  00089E  EC28  F00F         	call	___awmod	;wreg free
  4942  0008A2  5025               	movf	?___awmod^0,w,c
  4943  0008A4  0F30               	addlw	48
  4944  0008A6  EC8E  F015         	call	_lcdChar
  4945  0008AA                     
  4946                           ;main.c: 72:     lcdChar(':');
  4947  0008AA  0E3A               	movlw	58
  4948  0008AC  EC8E  F015         	call	_lcdChar
  4949  0008B0                     
  4950                           ;main.c: 73:     lcdChar((((bcd2dec(dsReadData(1)& 0x7f)) / 10) % 10) + 48);
  4951  0008B0  0E00               	movlw	0
  4952  0008B2  6E0F               	movwf	(dsReadData@address+1)^0,c
  4953  0008B4  0E01               	movlw	1
  4954  0008B6  6E0E               	movwf	dsReadData@address^0,c
  4955  0008B8  EC65  F013         	call	_dsReadData	;wreg free
  4956  0008BC  0E7F               	movlw	127
  4957  0008BE  140E               	andwf	?_dsReadData^0,w,c
  4958  0008C0  6E21               	movwf	bcd2dec@value^0,c
  4959  0008C2  6A22               	clrf	(bcd2dec@value+1)^0,c
  4960  0008C4  ECCC  F013         	call	_bcd2dec	;wreg free
  4961  0008C8  C021  F02B         	movff	?_bcd2dec,_desligado$1315
  4962  0008CC  C022  F02C         	movff	?_bcd2dec+1,_desligado$1315+1
  4963                           
  4964                           ;main.c: 73:     lcdChar((((bcd2dec(dsReadData(1)& 0x7f)) / 10) % 10) + 48);
  4965  0008D0  0E00               	movlw	0
  4966  0008D2  6E16               	movwf	(___awdiv@divisor+1)^0,c
  4967  0008D4  0E0A               	movlw	10
  4968  0008D6  6E15               	movwf	___awdiv@divisor^0,c
  4969  0008D8  C02B  F013         	movff	_desligado$1315,___awdiv@dividend
  4970  0008DC  C02C  F014         	movff	_desligado$1315+1,___awdiv@dividend+1
  4971  0008E0  EC0B  F00E         	call	___awdiv	;wreg free
  4972  0008E4  C013  F025         	movff	?___awdiv,___awmod@dividend
  4973  0008E8  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  4974  0008EC  0E00               	movlw	0
  4975  0008EE  6E28               	movwf	(___awmod@divisor+1)^0,c
  4976  0008F0  0E0A               	movlw	10
  4977  0008F2  6E27               	movwf	___awmod@divisor^0,c
  4978  0008F4  EC28  F00F         	call	___awmod	;wreg free
  4979  0008F8  5025               	movf	?___awmod^0,w,c
  4980  0008FA  0F30               	addlw	48
  4981  0008FC  EC8E  F015         	call	_lcdChar
  4982  000900                     
  4983                           ;main.c: 74:     lcdChar(((bcd2dec(dsReadData(1)& 0x7f)) % 10) + 48);
  4984  000900  0E00               	movlw	0
  4985  000902  6E0F               	movwf	(dsReadData@address+1)^0,c
  4986  000904  0E01               	movlw	1
  4987  000906  6E0E               	movwf	dsReadData@address^0,c
  4988  000908  EC65  F013         	call	_dsReadData	;wreg free
  4989  00090C  0E7F               	movlw	127
  4990  00090E  140E               	andwf	?_dsReadData^0,w,c
  4991  000910  6E21               	movwf	bcd2dec@value^0,c
  4992  000912  6A22               	clrf	(bcd2dec@value+1)^0,c
  4993  000914  ECCC  F013         	call	_bcd2dec	;wreg free
  4994  000918  C021  F025         	movff	?_bcd2dec,___awmod@dividend
  4995  00091C  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
  4996  000920  0E00               	movlw	0
  4997  000922  6E28               	movwf	(___awmod@divisor+1)^0,c
  4998  000924  0E0A               	movlw	10
  4999  000926  6E27               	movwf	___awmod@divisor^0,c
  5000  000928  EC28  F00F         	call	___awmod	;wreg free
  5001  00092C  5025               	movf	?___awmod^0,w,c
  5002  00092E  0F30               	addlw	48
  5003  000930  EC8E  F015         	call	_lcdChar
  5004  000934                     
  5005                           ;main.c: 75:     lcdChar(':');
  5006  000934  0E3A               	movlw	58
  5007  000936  EC8E  F015         	call	_lcdChar
  5008                           
  5009                           ;main.c: 76:     lcdChar((((bcd2dec(dsReadData(0)& 0x7f)) / 10) % 10) + 48);
  5010  00093A  0E00               	movlw	0
  5011  00093C  6E0F               	movwf	(dsReadData@address+1)^0,c
  5012  00093E  0E00               	movlw	0
  5013  000940  6E0E               	movwf	dsReadData@address^0,c
  5014  000942  EC65  F013         	call	_dsReadData	;wreg free
  5015  000946  0E7F               	movlw	127
  5016  000948  140E               	andwf	?_dsReadData^0,w,c
  5017  00094A  6E21               	movwf	bcd2dec@value^0,c
  5018  00094C  6A22               	clrf	(bcd2dec@value+1)^0,c
  5019  00094E  ECCC  F013         	call	_bcd2dec	;wreg free
  5020  000952  C021  F02B         	movff	?_bcd2dec,_desligado$1315
  5021  000956  C022  F02C         	movff	?_bcd2dec+1,_desligado$1315+1
  5022  00095A                     
  5023                           ;main.c: 76:     lcdChar((((bcd2dec(dsReadData(0)& 0x7f)) / 10) % 10) + 48);
  5024  00095A  0E00               	movlw	0
  5025  00095C  6E16               	movwf	(___awdiv@divisor+1)^0,c
  5026  00095E  0E0A               	movlw	10
  5027  000960  6E15               	movwf	___awdiv@divisor^0,c
  5028  000962  C02B  F013         	movff	_desligado$1315,___awdiv@dividend
  5029  000966  C02C  F014         	movff	_desligado$1315+1,___awdiv@dividend+1
  5030  00096A  EC0B  F00E         	call	___awdiv	;wreg free
  5031  00096E  C013  F025         	movff	?___awdiv,___awmod@dividend
  5032  000972  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  5033  000976  0E00               	movlw	0
  5034  000978  6E28               	movwf	(___awmod@divisor+1)^0,c
  5035  00097A  0E0A               	movlw	10
  5036  00097C  6E27               	movwf	___awmod@divisor^0,c
  5037  00097E  EC28  F00F         	call	___awmod	;wreg free
  5038  000982  5025               	movf	?___awmod^0,w,c
  5039  000984  0F30               	addlw	48
  5040  000986  EC8E  F015         	call	_lcdChar
  5041  00098A                     
  5042                           ;main.c: 77:     lcdChar(((bcd2dec(dsReadData(0)& 0x7f)) % 10) + 48);
  5043  00098A  0E00               	movlw	0
  5044  00098C  6E0F               	movwf	(dsReadData@address+1)^0,c
  5045  00098E  0E00               	movlw	0
  5046  000990  6E0E               	movwf	dsReadData@address^0,c
  5047  000992  EC65  F013         	call	_dsReadData	;wreg free
  5048  000996  0E7F               	movlw	127
  5049  000998  140E               	andwf	?_dsReadData^0,w,c
  5050  00099A  6E21               	movwf	bcd2dec@value^0,c
  5051  00099C  6A22               	clrf	(bcd2dec@value+1)^0,c
  5052  00099E  ECCC  F013         	call	_bcd2dec	;wreg free
  5053  0009A2  C021  F025         	movff	?_bcd2dec,___awmod@dividend
  5054  0009A6  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
  5055  0009AA  0E00               	movlw	0
  5056  0009AC  6E28               	movwf	(___awmod@divisor+1)^0,c
  5057  0009AE  0E0A               	movlw	10
  5058  0009B0  6E27               	movwf	___awmod@divisor^0,c
  5059  0009B2  EC28  F00F         	call	___awmod	;wreg free
  5060  0009B6  5025               	movf	?___awmod^0,w,c
  5061  0009B8  0F30               	addlw	48
  5062  0009BA  EC8E  F015         	call	_lcdChar
  5063  0009BE  0012               	return		;funcret
  5064  0009C0                     __end_of_desligado:
  5065                           	callstack 0
  5066                           
  5067 ;; *************** function _lcdString *****************
  5068 ;; Defined at:
  5069 ;;		line 57 in file "lcd.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  msg             2   14[COMRAM] PTR unsigned char 
  5072 ;;		 -> STR_10(15), STR_9(17), STR_8(11), STR_7(2), 
  5073 ;;		 -> STR_6(6), STR_5(8), STR_4(7), STR_3(11), 
  5074 ;;		 -> STR_2(5), STR_1(5), 
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;  i               2   18[COMRAM] int 
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  1    wreg      void 
  5079 ;; Registers used:
  5080 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5081 ;; Tracked objects:
  5082 ;;		On entry : 0/0
  5083 ;;		On exit  : 0/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5086 ;;      Params:         2       0       0       0       0       0       0
  5087 ;;      Locals:         2       0       0       0       0       0       0
  5088 ;;      Temps:          2       0       0       0       0       0       0
  5089 ;;      Totals:         6       0       0       0       0       0       0
  5090 ;;Total ram usage:        6 bytes
  5091 ;; Hardware stack levels used: 1
  5092 ;; Hardware stack levels required when called: 5
  5093 ;; This function calls:
  5094 ;;		_lcdChar
  5095 ;; This function is called by:
  5096 ;;		_desligado
  5097 ;;		_atualizaLCD
  5098 ;;		_escolherModo
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           	psect	text31
  5103  00253A                     __ptext31:
  5104                           	callstack 0
  5105  00253A                     _lcdString:
  5106                           	callstack 23
  5107  00253A                     
  5108                           ;lcd.c: 58:  int i = 0;
  5109  00253A  0E00               	movlw	0
  5110  00253C  6E14               	movwf	(lcdString@i+1)^0,c
  5111  00253E  0E00               	movlw	0
  5112  002540  6E13               	movwf	lcdString@i^0,c
  5113                           
  5114                           ;lcd.c: 59:  while (msg[i] != 0) {
  5115  002542  EFB3  F012         	goto	l2694
  5116  002546                     l2690:
  5117                           
  5118                           ;lcd.c: 60:   lcdChar(msg[i]);
  5119  002546  5013               	movf	lcdString@i^0,w,c
  5120  002548  240F               	addwf	lcdString@msg^0,w,c
  5121  00254A  6E11               	movwf	??_lcdString^0,c
  5122  00254C  5014               	movf	(lcdString@i+1)^0,w,c
  5123  00254E  2010               	addwfc	(lcdString@msg+1)^0,w,c
  5124  002550  6E12               	movwf	(??_lcdString+1)^0,c
  5125  002552  C011  FFF6         	movff	??_lcdString,tblptrl
  5126  002556  C012  FFF7         	movff	??_lcdString+1,tblptrh
  5127  00255A                     	if	0	;tblptru may be non-zero
  5128  00255A                     	endif
  5129  00255A                     	if	0	;tblptru may be non-zero
  5130  00255A                     	endif
  5131  00255A  0008               	tblrd		*
  5132  00255C  50F5               	movf	tablat,w,c
  5133  00255E  EC8E  F015         	call	_lcdChar
  5134  002562                     
  5135                           ;lcd.c: 61:   i++;
  5136  002562  4A13               	infsnz	lcdString@i^0,f,c
  5137  002564  2A14               	incf	(lcdString@i+1)^0,f,c
  5138  002566                     l2694:
  5139                           
  5140                           ;lcd.c: 59:  while (msg[i] != 0) {
  5141  002566  5013               	movf	lcdString@i^0,w,c
  5142  002568  240F               	addwf	lcdString@msg^0,w,c
  5143  00256A  6E11               	movwf	??_lcdString^0,c
  5144  00256C  5014               	movf	(lcdString@i+1)^0,w,c
  5145  00256E  2010               	addwfc	(lcdString@msg+1)^0,w,c
  5146  002570  6E12               	movwf	(??_lcdString+1)^0,c
  5147  002572  C011  FFF6         	movff	??_lcdString,tblptrl
  5148  002576  C012  FFF7         	movff	??_lcdString+1,tblptrh
  5149  00257A                     	if	0	;tblptru may be non-zero
  5150  00257A                     	endif
  5151  00257A                     	if	0	;tblptru may be non-zero
  5152  00257A                     	endif
  5153  00257A  0008               	tblrd		*
  5154  00257C  50F5               	movf	tablat,w,c
  5155  00257E  0900               	iorlw	0
  5156  002580  A4D8               	btfss	status,2,c
  5157  002582  EFC5  F012         	goto	u2481
  5158  002586  EFC7  F012         	goto	u2480
  5159  00258A                     u2481:
  5160  00258A  EFA3  F012         	goto	l2690
  5161  00258E                     u2480:
  5162  00258E  0012               	return		;funcret
  5163  002590                     __end_of_lcdString:
  5164                           	callstack 0
  5165                           
  5166 ;; *************** function _lcdChar *****************
  5167 ;; Defined at:
  5168 ;;		line 52 in file "lcd.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;  value           1    wreg     unsigned char 
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;  value           1   13[COMRAM] unsigned char 
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  1    wreg      void 
  5175 ;; Registers used:
  5176 ;;		wreg, status,2, status,0, cstack
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5182 ;;      Params:         0       0       0       0       0       0       0
  5183 ;;      Locals:         1       0       0       0       0       0       0
  5184 ;;      Temps:          0       0       0       0       0       0       0
  5185 ;;      Totals:         1       0       0       0       0       0       0
  5186 ;;Total ram usage:        1 bytes
  5187 ;; Hardware stack levels used: 1
  5188 ;; Hardware stack levels required when called: 4
  5189 ;; This function calls:
  5190 ;;		_delayMicro
  5191 ;;		_pushByte
  5192 ;; This function is called by:
  5193 ;;		_lcdString
  5194 ;;		_iniSimbolos
  5195 ;;		_desligado
  5196 ;;		_atualizaLCD
  5197 ;;		_temperatura
  5198 ;;		_lcdNumber
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           
  5202                           	psect	text32
  5203  002B1C                     __ptext32:
  5204                           	callstack 0
  5205  002B1C                     _lcdChar:
  5206                           	callstack 23
  5207                           
  5208                           ;incstack = 0
  5209                           ;lcdChar@value stored from wreg
  5210  002B1C  6E0E               	movwf	lcdChar@value^0,c
  5211  002B1E                     
  5212                           ;lcd.c: 53:  pushByte(value, 1);
  5213  002B1E  0E00               	movlw	0
  5214  002B20  6E0B               	movwf	(pushByte@rs+1)^0,c
  5215  002B22  0E01               	movlw	1
  5216  002B24  6E0A               	movwf	pushByte@rs^0,c
  5217  002B26  500E               	movf	lcdChar@value^0,w,c
  5218  002B28  ECED  F011         	call	_pushByte
  5219  002B2C                     
  5220                           ;lcd.c: 54:  delayMicro(80);
  5221  002B2C  0E00               	movlw	0
  5222  002B2E  6E02               	movwf	(delayMicro@a+1)^0,c
  5223  002B30  0E50               	movlw	80
  5224  002B32  6E01               	movwf	delayMicro@a^0,c
  5225  002B34  ECD7  F015         	call	_delayMicro	;wreg free
  5226  002B38  0012               	return		;funcret
  5227  002B3A                     __end_of_lcdChar:
  5228                           	callstack 0
  5229                           
  5230 ;; *************** function _lcdCommand *****************
  5231 ;; Defined at:
  5232 ;;		line 40 in file "lcd.c"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;  value           1    wreg     unsigned char 
  5235 ;; Auto vars:     Size  Location     Type
  5236 ;;  value           1   13[COMRAM] unsigned char 
  5237 ;; Return value:  Size  Location     Type
  5238 ;;                  1    wreg      void 
  5239 ;; Registers used:
  5240 ;;		wreg, status,2, status,0, cstack
  5241 ;; Tracked objects:
  5242 ;;		On entry : 0/0
  5243 ;;		On exit  : 0/0
  5244 ;;		Unchanged: 0/0
  5245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5246 ;;      Params:         0       0       0       0       0       0       0
  5247 ;;      Locals:         1       0       0       0       0       0       0
  5248 ;;      Temps:          0       0       0       0       0       0       0
  5249 ;;      Totals:         1       0       0       0       0       0       0
  5250 ;;Total ram usage:        1 bytes
  5251 ;; Hardware stack levels used: 1
  5252 ;; Hardware stack levels required when called: 4
  5253 ;; This function calls:
  5254 ;;		_delayMili
  5255 ;;		_pushByte
  5256 ;; This function is called by:
  5257 ;;		_lcdPosition
  5258 ;;		_lcdInit
  5259 ;;		_iniSimbolos
  5260 ;;		_desligado
  5261 ;;		_atualizaLCD
  5262 ;;		_leTeclado
  5263 ;;		_escolherModo
  5264 ;;		_main
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           	psect	text33
  5269  002B3A                     __ptext33:
  5270                           	callstack 0
  5271  002B3A                     _lcdCommand:
  5272                           	callstack 23
  5273                           
  5274                           ;incstack = 0
  5275                           ;lcdCommand@value stored from wreg
  5276  002B3A  6E0E               	movwf	lcdCommand@value^0,c
  5277  002B3C                     
  5278                           ;lcd.c: 41:  pushByte(value, 0);
  5279  002B3C  0E00               	movlw	0
  5280  002B3E  6E0B               	movwf	(pushByte@rs+1)^0,c
  5281  002B40  0E00               	movlw	0
  5282  002B42  6E0A               	movwf	pushByte@rs^0,c
  5283  002B44  500E               	movf	lcdCommand@value^0,w,c
  5284  002B46  ECED  F011         	call	_pushByte
  5285                           
  5286                           ;lcd.c: 42:  delayMili(2);
  5287  002B4A  0E00               	movlw	0
  5288  002B4C  6E02               	movwf	(delayMili@a+1)^0,c
  5289  002B4E  0E02               	movlw	2
  5290  002B50  6E01               	movwf	delayMili@a^0,c
  5291  002B52  ECAE  F014         	call	_delayMili	;wreg free
  5292  002B56  0012               	return		;funcret
  5293  002B58                     __end_of_lcdCommand:
  5294                           	callstack 0
  5295                           
  5296 ;; *************** function _pushByte *****************
  5297 ;; Defined at:
  5298 ;;		line 31 in file "lcd.c"
  5299 ;; Parameters:    Size  Location     Type
  5300 ;;  value           1    wreg     unsigned char 
  5301 ;;  rs              2    9[COMRAM] int 
  5302 ;; Auto vars:     Size  Location     Type
  5303 ;;  value           1   12[COMRAM] unsigned char 
  5304 ;; Return value:  Size  Location     Type
  5305 ;;                  1    wreg      void 
  5306 ;; Registers used:
  5307 ;;		wreg, status,2, status,0, cstack
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5313 ;;      Params:         2       0       0       0       0       0       0
  5314 ;;      Locals:         1       0       0       0       0       0       0
  5315 ;;      Temps:          1       0       0       0       0       0       0
  5316 ;;      Totals:         4       0       0       0       0       0       0
  5317 ;;Total ram usage:        4 bytes
  5318 ;; Hardware stack levels used: 1
  5319 ;; Hardware stack levels required when called: 3
  5320 ;; This function calls:
  5321 ;;		_digitalWrite
  5322 ;;		_pulseEnablePin
  5323 ;;		_soWrite
  5324 ;; This function is called by:
  5325 ;;		_lcdCommand
  5326 ;;		_lcdChar
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           	psect	text34
  5331  0023DA                     __ptext34:
  5332                           	callstack 0
  5333  0023DA                     _pushByte:
  5334                           	callstack 23
  5335                           
  5336                           ;incstack = 0
  5337                           ;pushByte@value stored from wreg
  5338  0023DA  6E0D               	movwf	pushByte@value^0,c
  5339  0023DC                     
  5340                           ;lcd.c: 32:  soWrite(value >> 4);
  5341  0023DC  C00D  F00C         	movff	pushByte@value,??_pushByte
  5342  0023E0  3A0C               	swapf	??_pushByte^0,f,c
  5343  0023E2  0E0F               	movlw	15
  5344  0023E4  160C               	andwf	??_pushByte^0,f,c
  5345  0023E6  500C               	movf	??_pushByte^0,w,c
  5346  0023E8  6E07               	movwf	soWrite@value^0,c
  5347  0023EA  6A08               	clrf	(soWrite@value+1)^0,c
  5348  0023EC  EC1A  F013         	call	_soWrite	;wreg free
  5349                           
  5350                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  5351  0023F0  0E00               	movlw	0
  5352  0023F2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5353  0023F4  0E1D               	movlw	29
  5354  0023F6  6E01               	movwf	digitalWrite@pin^0,c
  5355  0023F8  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  5356  0023FC  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  5357  002400  EC66  F006         	call	_digitalWrite	;wreg free
  5358                           
  5359                           ;lcd.c: 34:  pulseEnablePin();
  5360  002404  ECAB  F013         	call	_pulseEnablePin	;wreg free
  5361                           
  5362                           ;lcd.c: 36:  soWrite(value & 0x0F);
  5363  002408  C00D  F00C         	movff	pushByte@value,??_pushByte
  5364  00240C  0E0F               	movlw	15
  5365  00240E  160C               	andwf	??_pushByte^0,f,c
  5366  002410  500C               	movf	??_pushByte^0,w,c
  5367  002412  6E07               	movwf	soWrite@value^0,c
  5368  002414  6A08               	clrf	(soWrite@value+1)^0,c
  5369  002416  EC1A  F013         	call	_soWrite	;wreg free
  5370                           
  5371                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  5372  00241A  0E00               	movlw	0
  5373  00241C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5374  00241E  0E1D               	movlw	29
  5375  002420  6E01               	movwf	digitalWrite@pin^0,c
  5376  002422  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  5377  002426  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  5378  00242A  EC66  F006         	call	_digitalWrite	;wreg free
  5379                           
  5380                           ;lcd.c: 38:  pulseEnablePin();
  5381  00242E  ECAB  F013         	call	_pulseEnablePin	;wreg free
  5382  002432  0012               	return		;funcret
  5383  002434                     __end_of_pushByte:
  5384                           	callstack 0
  5385                           
  5386 ;; *************** function _soWrite *****************
  5387 ;; Defined at:
  5388 ;;		line 18 in file "so.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;  value           2    6[COMRAM] int 
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;  i               1    8[COMRAM] unsigned char 
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  1    wreg      void 
  5395 ;; Registers used:
  5396 ;;		wreg, status,2, status,0, cstack
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5402 ;;      Params:         2       0       0       0       0       0       0
  5403 ;;      Locals:         1       0       0       0       0       0       0
  5404 ;;      Temps:          0       0       0       0       0       0       0
  5405 ;;      Totals:         3       0       0       0       0       0       0
  5406 ;;Total ram usage:        3 bytes
  5407 ;; Hardware stack levels used: 1
  5408 ;; Hardware stack levels required when called: 2
  5409 ;; This function calls:
  5410 ;;		_PulseClockData
  5411 ;;		_PulseEnClock
  5412 ;;		_digitalWrite
  5413 ;; This function is called by:
  5414 ;;		_kpDebounce
  5415 ;;		_pushNibble
  5416 ;;		_pushByte
  5417 ;;		_ssdUpdate
  5418 ;; This function uses a non-reentrant model
  5419 ;;
  5420                           
  5421                           	psect	text35
  5422  002634                     __ptext35:
  5423                           	callstack 0
  5424  002634                     _soWrite:
  5425                           	callstack 23
  5426  002634                     
  5427                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  5428  002634  0E00               	movlw	0
  5429  002636  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5430  002638  0E08               	movlw	8
  5431  00263A  6E01               	movwf	digitalWrite@pin^0,c
  5432  00263C  0E00               	movlw	0
  5433  00263E  6E04               	movwf	(digitalWrite@value+1)^0,c
  5434  002640  0E00               	movlw	0
  5435  002642  6E03               	movwf	digitalWrite@value^0,c
  5436  002644  EC66  F006         	call	_digitalWrite	;wreg free
  5437  002648                     
  5438                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  5439  002648  0E00               	movlw	0
  5440  00264A  6E09               	movwf	soWrite@i^0,c
  5441  00264C                     l2456:
  5442                           
  5443                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  5444  00264C  0E00               	movlw	0
  5445  00264E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5446  002650  0E1E               	movlw	30
  5447  002652  6E01               	movwf	digitalWrite@pin^0,c
  5448  002654  0E80               	movlw	128
  5449  002656  1407               	andwf	soWrite@value^0,w,c
  5450  002658  6E03               	movwf	digitalWrite@value^0,c
  5451  00265A  6A04               	clrf	(digitalWrite@value+1)^0,c
  5452  00265C  EC66  F006         	call	_digitalWrite	;wreg free
  5453                           
  5454                           ;so.c: 23:   PulseClockData();
  5455  002660  ECF2  F014         	call	_PulseClockData	;wreg free
  5456  002664                     
  5457                           ;so.c: 24:   value <<= 1;
  5458  002664  90D8               	bcf	status,0,c
  5459  002666  3607               	rlcf	soWrite@value^0,f,c
  5460  002668  3608               	rlcf	(soWrite@value+1)^0,f,c
  5461  00266A                     
  5462                           ;so.c: 25:  }
  5463  00266A  2A09               	incf	soWrite@i^0,f,c
  5464  00266C  0E07               	movlw	7
  5465  00266E  6409               	cpfsgt	soWrite@i^0,c
  5466  002670  EF3C  F013         	goto	u2201
  5467  002674  EF3E  F013         	goto	u2200
  5468  002678                     u2201:
  5469  002678  EF26  F013         	goto	l2456
  5470  00267C                     u2200:
  5471  00267C                     
  5472                           ;so.c: 26:  PulseEnClock();
  5473  00267C  ECDD  F014         	call	_PulseEnClock	;wreg free
  5474  002680  0012               	return		;funcret
  5475  002682                     __end_of_soWrite:
  5476                           	callstack 0
  5477                           
  5478 ;; *************** function _PulseEnClock *****************
  5479 ;; Defined at:
  5480 ;;		line 9 in file "so.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;		None
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;		None
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      void 
  5487 ;; Registers used:
  5488 ;;		wreg, status,2, status,0, cstack
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5494 ;;      Params:         0       0       0       0       0       0       0
  5495 ;;      Locals:         0       0       0       0       0       0       0
  5496 ;;      Temps:          0       0       0       0       0       0       0
  5497 ;;      Totals:         0       0       0       0       0       0       0
  5498 ;;Total ram usage:        0 bytes
  5499 ;; Hardware stack levels used: 1
  5500 ;; Hardware stack levels required when called: 1
  5501 ;; This function calls:
  5502 ;;		_digitalWrite
  5503 ;; This function is called by:
  5504 ;;		_soWrite
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           	psect	text36
  5509  0029BA                     __ptext36:
  5510                           	callstack 0
  5511  0029BA                     _PulseEnClock:
  5512                           	callstack 23
  5513  0029BA                     
  5514                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  5515  0029BA  0E00               	movlw	0
  5516  0029BC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5517  0029BE  0E1F               	movlw	31
  5518  0029C0  6E01               	movwf	digitalWrite@pin^0,c
  5519  0029C2  0E00               	movlw	0
  5520  0029C4  6E04               	movwf	(digitalWrite@value+1)^0,c
  5521  0029C6  0E01               	movlw	1
  5522  0029C8  6E03               	movwf	digitalWrite@value^0,c
  5523  0029CA  EC66  F006         	call	_digitalWrite	;wreg free
  5524                           
  5525                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  5526  0029CE  0E00               	movlw	0
  5527  0029D0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5528  0029D2  0E1F               	movlw	31
  5529  0029D4  6E01               	movwf	digitalWrite@pin^0,c
  5530  0029D6  0E00               	movlw	0
  5531  0029D8  6E04               	movwf	(digitalWrite@value+1)^0,c
  5532  0029DA  0E00               	movlw	0
  5533  0029DC  6E03               	movwf	digitalWrite@value^0,c
  5534  0029DE  EC66  F006         	call	_digitalWrite	;wreg free
  5535  0029E2  0012               	return		;funcret
  5536  0029E4                     __end_of_PulseEnClock:
  5537                           	callstack 0
  5538                           
  5539 ;; *************** function _PulseClockData *****************
  5540 ;; Defined at:
  5541 ;;		line 14 in file "so.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;		None
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;		None
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  1    wreg      void 
  5548 ;; Registers used:
  5549 ;;		wreg, status,2, status,0, cstack
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5555 ;;      Params:         0       0       0       0       0       0       0
  5556 ;;      Locals:         0       0       0       0       0       0       0
  5557 ;;      Temps:          0       0       0       0       0       0       0
  5558 ;;      Totals:         0       0       0       0       0       0       0
  5559 ;;Total ram usage:        0 bytes
  5560 ;; Hardware stack levels used: 1
  5561 ;; Hardware stack levels required when called: 1
  5562 ;; This function calls:
  5563 ;;		_digitalWrite
  5564 ;; This function is called by:
  5565 ;;		_soWrite
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           	psect	text37
  5570  0029E4                     __ptext37:
  5571                           	callstack 0
  5572  0029E4                     _PulseClockData:
  5573                           	callstack 23
  5574  0029E4                     
  5575                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  5576  0029E4  0E00               	movlw	0
  5577  0029E6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5578  0029E8  0E08               	movlw	8
  5579  0029EA  6E01               	movwf	digitalWrite@pin^0,c
  5580  0029EC  0E00               	movlw	0
  5581  0029EE  6E04               	movwf	(digitalWrite@value+1)^0,c
  5582  0029F0  0E01               	movlw	1
  5583  0029F2  6E03               	movwf	digitalWrite@value^0,c
  5584  0029F4  EC66  F006         	call	_digitalWrite	;wreg free
  5585                           
  5586                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  5587  0029F8  0E00               	movlw	0
  5588  0029FA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5589  0029FC  0E08               	movlw	8
  5590  0029FE  6E01               	movwf	digitalWrite@pin^0,c
  5591  002A00  0E00               	movlw	0
  5592  002A02  6E04               	movwf	(digitalWrite@value+1)^0,c
  5593  002A04  0E00               	movlw	0
  5594  002A06  6E03               	movwf	digitalWrite@value^0,c
  5595  002A08  EC66  F006         	call	_digitalWrite	;wreg free
  5596  002A0C  0012               	return		;funcret
  5597  002A0E                     __end_of_PulseClockData:
  5598                           	callstack 0
  5599                           
  5600 ;; *************** function _pulseEnablePin *****************
  5601 ;; Defined at:
  5602 ;;		line 18 in file "lcd.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;		None
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;		None
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  1    wreg      void 
  5609 ;; Registers used:
  5610 ;;		wreg, status,2, status,0, cstack
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5616 ;;      Params:         0       0       0       0       0       0       0
  5617 ;;      Locals:         0       0       0       0       0       0       0
  5618 ;;      Temps:          0       0       0       0       0       0       0
  5619 ;;      Totals:         0       0       0       0       0       0       0
  5620 ;;Total ram usage:        0 bytes
  5621 ;; Hardware stack levels used: 1
  5622 ;; Hardware stack levels required when called: 1
  5623 ;; This function calls:
  5624 ;;		_delayMicro
  5625 ;;		_digitalWrite
  5626 ;; This function is called by:
  5627 ;;		_pushNibble
  5628 ;;		_pushByte
  5629 ;; This function uses a non-reentrant model
  5630 ;;
  5631                           
  5632                           	psect	text38
  5633  002756                     __ptext38:
  5634                           	callstack 0
  5635  002756                     _pulseEnablePin:
  5636                           	callstack 24
  5637  002756                     
  5638                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  5639  002756  0E00               	movlw	0
  5640  002758  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5641  00275A  0E1C               	movlw	28
  5642  00275C  6E01               	movwf	digitalWrite@pin^0,c
  5643  00275E  0E00               	movlw	0
  5644  002760  6E04               	movwf	(digitalWrite@value+1)^0,c
  5645  002762  0E01               	movlw	1
  5646  002764  6E03               	movwf	digitalWrite@value^0,c
  5647  002766  EC66  F006         	call	_digitalWrite	;wreg free
  5648  00276A                     
  5649                           ;lcd.c: 20:  delayMicro(5);
  5650  00276A  0E00               	movlw	0
  5651  00276C  6E02               	movwf	(delayMicro@a+1)^0,c
  5652  00276E  0E05               	movlw	5
  5653  002770  6E01               	movwf	delayMicro@a^0,c
  5654  002772  ECD7  F015         	call	_delayMicro	;wreg free
  5655  002776                     
  5656                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  5657  002776  0E00               	movlw	0
  5658  002778  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5659  00277A  0E1C               	movlw	28
  5660  00277C  6E01               	movwf	digitalWrite@pin^0,c
  5661  00277E  0E00               	movlw	0
  5662  002780  6E04               	movwf	(digitalWrite@value+1)^0,c
  5663  002782  0E00               	movlw	0
  5664  002784  6E03               	movwf	digitalWrite@value^0,c
  5665  002786  EC66  F006         	call	_digitalWrite	;wreg free
  5666                           
  5667                           ;lcd.c: 22:  delayMicro(5);
  5668  00278A  0E00               	movlw	0
  5669  00278C  6E02               	movwf	(delayMicro@a+1)^0,c
  5670  00278E  0E05               	movlw	5
  5671  002790  6E01               	movwf	delayMicro@a^0,c
  5672  002792  ECD7  F015         	call	_delayMicro	;wreg free
  5673  002796  0012               	return		;funcret
  5674  002798                     __end_of_pulseEnablePin:
  5675                           	callstack 0
  5676                           
  5677 ;; *************** function _delayMicro *****************
  5678 ;; Defined at:
  5679 ;;		line 5 in file "lcd.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;  a               2    0[COMRAM] int 
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;  i               2    0        volatile int 
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  1    wreg      void 
  5686 ;; Registers used:
  5687 ;;		None
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5693 ;;      Params:         2       0       0       0       0       0       0
  5694 ;;      Locals:         0       0       0       0       0       0       0
  5695 ;;      Temps:          0       0       0       0       0       0       0
  5696 ;;      Totals:         2       0       0       0       0       0       0
  5697 ;;Total ram usage:        2 bytes
  5698 ;; Hardware stack levels used: 1
  5699 ;; This function calls:
  5700 ;;		Nothing
  5701 ;; This function is called by:
  5702 ;;		_pulseEnablePin
  5703 ;;		_lcdChar
  5704 ;;		_lcdInit
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           	psect	text39
  5709  002BAE                     __ptext39:
  5710                           	callstack 0
  5711  002BAE                     _delayMicro:
  5712                           	callstack 24
  5713  002BAE  0012               	return		;funcret
  5714  002BB0                     __end_of_delayMicro:
  5715                           	callstack 0
  5716                           
  5717 ;; *************** function _delayMili *****************
  5718 ;; Defined at:
  5719 ;;		line 10 in file "lcd.c"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;  a               2    0[COMRAM] int 
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;  i               2    3[COMRAM] volatile int 
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  1    wreg      void 
  5726 ;; Registers used:
  5727 ;;		wreg, status,2, status,0
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5733 ;;      Params:         2       0       0       0       0       0       0
  5734 ;;      Locals:         2       0       0       0       0       0       0
  5735 ;;      Temps:          1       0       0       0       0       0       0
  5736 ;;      Totals:         5       0       0       0       0       0       0
  5737 ;;Total ram usage:        5 bytes
  5738 ;; Hardware stack levels used: 1
  5739 ;; This function calls:
  5740 ;;		Nothing
  5741 ;; This function is called by:
  5742 ;;		_lcdCommand
  5743 ;;		_lcdInit
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           	psect	text40
  5748  00295C                     __ptext40:
  5749                           	callstack 0
  5750  00295C                     _delayMili:
  5751                           	callstack 26
  5752  00295C                     
  5753                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  5754  00295C  0E00               	movlw	0
  5755  00295E  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  5756  002960  0E00               	movlw	0
  5757  002962  6E04               	movwf	delayMili@i^0,c	;volatile
  5758  002964  EFB6  F014         	goto	l2488
  5759  002968                     l2486:
  5760                           
  5761                           ;lcd.c: 15:  }
  5762  002968  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  5763  00296A  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  5764  00296C                     l2488:
  5765  00296C  5001               	movf	delayMili@a^0,w,c
  5766  00296E  5C04               	subwf	delayMili@i^0,w,c	;volatile
  5767  002970  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  5768  002972  0A80               	xorlw	128
  5769  002974  6E03               	movwf	??_delayMili^0,c
  5770  002976  5002               	movf	(delayMili@a+1)^0,w,c
  5771  002978  0A80               	xorlw	128
  5772  00297A  5803               	subwfb	??_delayMili^0,w,c
  5773  00297C  A0D8               	btfss	status,0,c
  5774  00297E  EFC3  F014         	goto	u2251
  5775  002982  EFC5  F014         	goto	u2250
  5776  002986                     u2251:
  5777  002986  EFB4  F014         	goto	l2486
  5778  00298A                     u2250:
  5779  00298A  0012               	return		;funcret
  5780  00298C                     __end_of_delayMili:
  5781                           	callstack 0
  5782                           
  5783 ;; *************** function _dsReadData *****************
  5784 ;; Defined at:
  5785 ;;		line 29 in file "ds1307.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;  address         2   13[COMRAM] int 
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;  result          2   16[COMRAM] int 
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  2   13[COMRAM] int 
  5792 ;; Registers used:
  5793 ;;		wreg, status,2, status,0, cstack
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5799 ;;      Params:         2       0       0       0       0       0       0
  5800 ;;      Locals:         2       0       0       0       0       0       0
  5801 ;;      Temps:          1       0       0       0       0       0       0
  5802 ;;      Totals:         5       0       0       0       0       0       0
  5803 ;;Total ram usage:        5 bytes
  5804 ;; Hardware stack levels used: 1
  5805 ;; Hardware stack levels required when called: 4
  5806 ;; This function calls:
  5807 ;;		_i2cReadByte
  5808 ;;		_i2cWriteByte
  5809 ;; This function is called by:
  5810 ;;		_desligado
  5811 ;;		_dsStartClock
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           	psect	text41
  5816  0026CA                     __ptext41:
  5817                           	callstack 0
  5818  0026CA                     _dsReadData:
  5819                           	callstack 25
  5820  0026CA                     
  5821                           ;ds1307.c: 30:  int result;;ds1307.c: 31:  i2cWriteByte(1,0,(0x68<<1) | 0);
  5822  0026CA  0E00               	movlw	0
  5823  0026CC  6E08               	movwf	i2cWriteByte@send_stop^0,c
  5824  0026CE  0ED0               	movlw	208
  5825  0026D0  6E09               	movwf	i2cWriteByte@byte^0,c
  5826  0026D2  0E01               	movlw	1
  5827  0026D4  ECBD  F011         	call	_i2cWriteByte
  5828                           
  5829                           ;ds1307.c: 32:  i2cWriteByte(0,0,address);
  5830  0026D8  0E00               	movlw	0
  5831  0026DA  6E08               	movwf	i2cWriteByte@send_stop^0,c
  5832  0026DC  C00E  F009         	movff	dsReadData@address,i2cWriteByte@byte
  5833  0026E0  0E00               	movlw	0
  5834  0026E2  ECBD  F011         	call	_i2cWriteByte
  5835                           
  5836                           ;ds1307.c: 33:  i2cWriteByte(1,0, (0x68<<1) | 1);
  5837  0026E6  0E00               	movlw	0
  5838  0026E8  6E08               	movwf	i2cWriteByte@send_stop^0,c
  5839  0026EA  0ED1               	movlw	209
  5840  0026EC  6E09               	movwf	i2cWriteByte@byte^0,c
  5841  0026EE  0E01               	movlw	1
  5842  0026F0  ECBD  F011         	call	_i2cWriteByte
  5843                           
  5844                           ;ds1307.c: 34:  result = i2cReadByte(1,1 );
  5845  0026F4  0E01               	movlw	1
  5846  0026F6  6E08               	movwf	i2cReadByte@send_stop^0,c
  5847  0026F8  0E01               	movlw	1
  5848  0026FA  ECC8  F012         	call	_i2cReadByte
  5849  0026FE  6E10               	movwf	??_dsReadData^0,c
  5850  002700  5010               	movf	??_dsReadData^0,w,c
  5851  002702  6E11               	movwf	dsReadData@result^0,c
  5852  002704  6A12               	clrf	(dsReadData@result+1)^0,c
  5853  002706                     
  5854                           ;ds1307.c: 35:  return result;
  5855  002706  C011  F00E         	movff	dsReadData@result,?_dsReadData
  5856  00270A  C012  F00F         	movff	dsReadData@result+1,?_dsReadData+1
  5857  00270E  0012               	return		;funcret
  5858  002710                     __end_of_dsReadData:
  5859                           	callstack 0
  5860                           
  5861 ;; *************** function _i2cWriteByte *****************
  5862 ;; Defined at:
  5863 ;;		line 113 in file "i2c.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;  send_start      1    wreg     unsigned char 
  5866 ;;  send_stop       1    7[COMRAM] unsigned char 
  5867 ;;  byte            1    8[COMRAM] unsigned char 
  5868 ;; Auto vars:     Size  Location     Type
  5869 ;;  send_start      1    9[COMRAM] unsigned char 
  5870 ;;  bit             1   10[COMRAM] unsigned char 
  5871 ;;  nack            1    0        unsigned char 
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1    wreg      unsigned char 
  5874 ;; Registers used:
  5875 ;;		wreg, status,2, status,0, cstack
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5881 ;;      Params:         2       0       0       0       0       0       0
  5882 ;;      Locals:         2       0       0       0       0       0       0
  5883 ;;      Temps:          0       0       0       0       0       0       0
  5884 ;;      Totals:         4       0       0       0       0       0       0
  5885 ;;Total ram usage:        4 bytes
  5886 ;; Hardware stack levels used: 1
  5887 ;; Hardware stack levels required when called: 3
  5888 ;; This function calls:
  5889 ;;		_i2c_read_bit
  5890 ;;		_i2c_start
  5891 ;;		_i2c_stop
  5892 ;;		_i2c_write_bit
  5893 ;; This function is called by:
  5894 ;;		_dsReadData
  5895 ;;		_dsWriteData
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           	psect	text42
  5900  00237A                     __ptext42:
  5901                           	callstack 0
  5902  00237A                     _i2cWriteByte:
  5903                           	callstack 25
  5904                           
  5905                           ;incstack = 0
  5906                           ;i2cWriteByte@send_start stored from wreg
  5907  00237A  6E0A               	movwf	i2cWriteByte@send_start^0,c
  5908  00237C                     
  5909                           ;i2c.c: 114:  unsigned char bit;;i2c.c: 115:  unsigned char nack;;i2c.c: 116:  if (send_
      +                          start) {
  5910  00237C  500A               	movf	i2cWriteByte@send_start^0,w,c
  5911  00237E  B4D8               	btfsc	status,2,c
  5912  002380  EFC4  F011         	goto	u2391
  5913  002384  EFC6  F011         	goto	u2390
  5914  002388                     u2391:
  5915  002388  EFC8  F011         	goto	l2636
  5916  00238C                     u2390:
  5917  00238C                     
  5918                           ;i2c.c: 117:   i2c_start();
  5919  00238C  EC88  F013         	call	_i2c_start	;wreg free
  5920  002390                     l2636:
  5921                           
  5922                           ;i2c.c: 119:  for (bit = 0; bit < 8; bit++) {
  5923  002390  0E00               	movlw	0
  5924  002392  6E0B               	movwf	i2cWriteByte@bit^0,c
  5925  002394                     l2642:
  5926                           
  5927                           ;i2c.c: 120:   i2c_write_bit((byte & 0x80) != 0);
  5928  002394  BE09               	btfsc	i2cWriteByte@byte^0,7,c
  5929  002396  EFCF  F011         	goto	u2401
  5930  00239A  EFD2  F011         	goto	u2400
  5931  00239E                     u2401:
  5932  00239E  0E01               	movlw	1
  5933  0023A0  EFD3  F011         	goto	u2410
  5934  0023A4                     u2400:
  5935  0023A4  0E00               	movlw	0
  5936  0023A6                     u2410:
  5937  0023A6  EC1A  F012         	call	_i2c_write_bit
  5938  0023AA                     
  5939                           ;i2c.c: 121:   byte <<= 1;
  5940  0023AA  90D8               	bcf	status,0,c
  5941  0023AC  3609               	rlcf	i2cWriteByte@byte^0,f,c
  5942  0023AE                     
  5943                           ;i2c.c: 122:  }
  5944  0023AE  2A0B               	incf	i2cWriteByte@bit^0,f,c
  5945  0023B0  0E07               	movlw	7
  5946  0023B2  640B               	cpfsgt	i2cWriteByte@bit^0,c
  5947  0023B4  EFDE  F011         	goto	u2421
  5948  0023B8  EFE0  F011         	goto	u2420
  5949  0023BC                     u2421:
  5950  0023BC  EFCA  F011         	goto	l2642
  5951  0023C0                     u2420:
  5952  0023C0  EC95  F014         	call	_i2c_read_bit	;wreg free
  5953  0023C4                     
  5954                           ;i2c.c: 124:  if (send_stop) {
  5955  0023C4  5008               	movf	i2cWriteByte@send_stop^0,w,c
  5956  0023C6  B4D8               	btfsc	status,2,c
  5957  0023C8  EFE8  F011         	goto	u2431
  5958  0023CC  EFEA  F011         	goto	u2430
  5959  0023D0                     u2431:
  5960  0023D0  EFEC  F011         	goto	l113
  5961  0023D4                     u2430:
  5962  0023D4                     
  5963                           ;i2c.c: 125:   i2c_stop();
  5964  0023D4  ECC6  F014         	call	_i2c_stop	;wreg free
  5965  0023D8                     l113:
  5966  0023D8  0012               	return		;funcret
  5967  0023DA                     __end_of_i2cWriteByte:
  5968                           	callstack 0
  5969                           
  5970 ;; *************** function _i2c_start *****************
  5971 ;; Defined at:
  5972 ;;		line 52 in file "i2c.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;		None
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;		None
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  1    wreg      void 
  5979 ;; Registers used:
  5980 ;;		wreg, status,2, status,0, cstack
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5986 ;;      Params:         0       0       0       0       0       0       0
  5987 ;;      Locals:         0       0       0       0       0       0       0
  5988 ;;      Temps:          0       0       0       0       0       0       0
  5989 ;;      Totals:         0       0       0       0       0       0       0
  5990 ;;Total ram usage:        0 bytes
  5991 ;; Hardware stack levels used: 1
  5992 ;; Hardware stack levels required when called: 2
  5993 ;; This function calls:
  5994 ;;		_I2C_delay
  5995 ;;		_clear_SCL
  5996 ;;		_clear_SDA
  5997 ;;		_read_SCL
  5998 ;;		_read_SDA
  5999 ;; This function is called by:
  6000 ;;		_i2cWriteByte
  6001 ;; This function uses a non-reentrant model
  6002 ;;
  6003                           
  6004                           	psect	text43
  6005  002710                     __ptext43:
  6006                           	callstack 0
  6007  002710                     _i2c_start:
  6008                           	callstack 25
  6009  002710                     
  6010                           ;i2c.c: 54:  if (started) {
  6011  002710  504D               	movf	_started^0,w,c
  6012  002712  B4D8               	btfsc	status,2,c
  6013  002714  EF8E  F013         	goto	u2291
  6014  002718  EF90  F013         	goto	u2290
  6015  00271C                     u2291:
  6016  00271C  EFA0  F013         	goto	l2530
  6017  002720                     u2290:
  6018  002720                     
  6019                           ;i2c.c: 55:   read_SDA();
  6020  002720  EC29  F014         	call	_read_SDA	;wreg free
  6021  002724                     
  6022                           ;i2c.c: 56:   I2C_delay();
  6023  002724  ECD8  F015         	call	_I2C_delay	;wreg free
  6024  002728                     l2526:
  6025  002728  EC45  F014         	call	_read_SCL	;wreg free
  6026  00272C  0900               	iorlw	0
  6027  00272E  B4D8               	btfsc	status,2,c
  6028  002730  EF9C  F013         	goto	u2301
  6029  002734  EF9E  F013         	goto	u2300
  6030  002738                     u2301:
  6031  002738  EF94  F013         	goto	l2526
  6032  00273C                     u2300:
  6033  00273C                     
  6034                           ;i2c.c: 59:   I2C_delay();
  6035  00273C  ECD8  F015         	call	_I2C_delay	;wreg free
  6036  002740                     l2530:
  6037                           
  6038                           ;i2c.c: 61:  if (read_SDA() == 0) {
  6039  002740  EC29  F014         	call	_read_SDA	;wreg free
  6040  002744                     
  6041                           ;i2c.c: 65:  clear_SDA();
  6042  002744  EC07  F015         	call	_clear_SDA	;wreg free
  6043  002748                     
  6044                           ;i2c.c: 66:  I2C_delay();
  6045  002748  ECD8  F015         	call	_I2C_delay	;wreg free
  6046  00274C                     
  6047                           ;i2c.c: 67:  clear_SCL();
  6048  00274C  EC1C  F015         	call	_clear_SCL	;wreg free
  6049  002750                     
  6050                           ;i2c.c: 68:  started = 1;
  6051  002750  0E01               	movlw	1
  6052  002752  6E4D               	movwf	_started^0,c
  6053  002754  0012               	return		;funcret
  6054  002756                     __end_of_i2c_start:
  6055                           	callstack 0
  6056                           
  6057 ;; *************** function _i2cReadByte *****************
  6058 ;; Defined at:
  6059 ;;		line 131 in file "i2c.c"
  6060 ;; Parameters:    Size  Location     Type
  6061 ;;  nack            1    wreg     unsigned char 
  6062 ;;  send_stop       1    7[COMRAM] unsigned char 
  6063 ;; Auto vars:     Size  Location     Type
  6064 ;;  nack            1    9[COMRAM] unsigned char 
  6065 ;;  bit             2   10[COMRAM] unsigned int 
  6066 ;;  byte            1   12[COMRAM] unsigned char 
  6067 ;; Return value:  Size  Location     Type
  6068 ;;                  1    wreg      unsigned char 
  6069 ;; Registers used:
  6070 ;;		wreg, status,2, status,0, cstack
  6071 ;; Tracked objects:
  6072 ;;		On entry : 0/0
  6073 ;;		On exit  : 0/0
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6076 ;;      Params:         1       0       0       0       0       0       0
  6077 ;;      Locals:         4       0       0       0       0       0       0
  6078 ;;      Temps:          1       0       0       0       0       0       0
  6079 ;;      Totals:         6       0       0       0       0       0       0
  6080 ;;Total ram usage:        6 bytes
  6081 ;; Hardware stack levels used: 1
  6082 ;; Hardware stack levels required when called: 3
  6083 ;; This function calls:
  6084 ;;		_i2c_read_bit
  6085 ;;		_i2c_stop
  6086 ;;		_i2c_write_bit
  6087 ;; This function is called by:
  6088 ;;		_dsReadData
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           
  6092                           	psect	text44
  6093  002590                     __ptext44:
  6094                           	callstack 0
  6095  002590                     _i2cReadByte:
  6096                           	callstack 25
  6097                           
  6098                           ;incstack = 0
  6099                           ;i2cReadByte@nack stored from wreg
  6100  002590  6E0A               	movwf	i2cReadByte@nack^0,c
  6101  002592                     
  6102                           ;i2c.c: 132:  unsigned char byte = 0;
  6103  002592  0E00               	movlw	0
  6104  002594  6E0D               	movwf	i2cReadByte@byte^0,c
  6105                           
  6106                           ;i2c.c: 133:  unsigned bit;;i2c.c: 134:  for (bit = 0; bit < 8; bit++) {
  6107  002596  0E00               	movlw	0
  6108  002598  6E0C               	movwf	(i2cReadByte@bit+1)^0,c
  6109  00259A  0E00               	movlw	0
  6110  00259C  6E0B               	movwf	i2cReadByte@bit^0,c
  6111  00259E                     l2664:
  6112                           
  6113                           ;i2c.c: 135:   byte = (byte << 1) | i2c_read_bit();
  6114  00259E  EC95  F014         	call	_i2c_read_bit	;wreg free
  6115  0025A2  6E09               	movwf	??_i2cReadByte^0,c
  6116  0025A4  500D               	movf	i2cReadByte@byte^0,w,c
  6117  0025A6  240D               	addwf	i2cReadByte@byte^0,w,c
  6118  0025A8  1009               	iorwf	??_i2cReadByte^0,w,c
  6119  0025AA  6E0D               	movwf	i2cReadByte@byte^0,c
  6120  0025AC                     
  6121                           ;i2c.c: 136:  }
  6122  0025AC  4A0B               	infsnz	i2cReadByte@bit^0,f,c
  6123  0025AE  2A0C               	incf	(i2cReadByte@bit+1)^0,f,c
  6124  0025B0  500C               	movf	(i2cReadByte@bit+1)^0,w,c
  6125  0025B2  E109               	bnz	u2440
  6126  0025B4  0E08               	movlw	8
  6127  0025B6  5C0B               	subwf	i2cReadByte@bit^0,w,c
  6128  0025B8  A0D8               	btfss	status,0,c
  6129  0025BA  EFE1  F012         	goto	u2441
  6130  0025BE  EFE3  F012         	goto	u2440
  6131  0025C2                     u2441:
  6132  0025C2  EFCF  F012         	goto	l2664
  6133  0025C6                     u2440:
  6134  0025C6                     
  6135                           ;i2c.c: 137:  i2c_write_bit(nack);
  6136  0025C6  500A               	movf	i2cReadByte@nack^0,w,c
  6137  0025C8  EC1A  F012         	call	_i2c_write_bit
  6138  0025CC                     
  6139                           ;i2c.c: 138:  if (send_stop) {
  6140  0025CC  5008               	movf	i2cReadByte@send_stop^0,w,c
  6141  0025CE  B4D8               	btfsc	status,2,c
  6142  0025D0  EFEC  F012         	goto	u2451
  6143  0025D4  EFEE  F012         	goto	u2450
  6144  0025D8                     u2451:
  6145  0025D8  EFF0  F012         	goto	l2676
  6146  0025DC                     u2450:
  6147  0025DC                     
  6148                           ;i2c.c: 139:   i2c_stop();
  6149  0025DC  ECC6  F014         	call	_i2c_stop	;wreg free
  6150  0025E0                     l2676:
  6151                           
  6152                           ;i2c.c: 141:  return byte;
  6153  0025E0  500D               	movf	i2cReadByte@byte^0,w,c
  6154  0025E2  0012               	return		;funcret
  6155  0025E4                     __end_of_i2cReadByte:
  6156                           	callstack 0
  6157                           
  6158 ;; *************** function _i2c_write_bit *****************
  6159 ;; Defined at:
  6160 ;;		line 84 in file "i2c.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;  bit             1    wreg     unsigned char 
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;  bit             1    6[COMRAM] unsigned char 
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1    wreg      void 
  6167 ;; Registers used:
  6168 ;;		wreg, status,2, status,0, cstack
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6174 ;;      Params:         0       0       0       0       0       0       0
  6175 ;;      Locals:         1       0       0       0       0       0       0
  6176 ;;      Temps:          0       0       0       0       0       0       0
  6177 ;;      Totals:         1       0       0       0       0       0       0
  6178 ;;Total ram usage:        1 bytes
  6179 ;; Hardware stack levels used: 1
  6180 ;; Hardware stack levels required when called: 2
  6181 ;; This function calls:
  6182 ;;		_I2C_delay
  6183 ;;		_clear_SCL
  6184 ;;		_clear_SDA
  6185 ;;		_read_SCL
  6186 ;;		_read_SDA
  6187 ;; This function is called by:
  6188 ;;		_i2cWriteByte
  6189 ;;		_i2cReadByte
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           	psect	text45
  6194  002434                     __ptext45:
  6195                           	callstack 0
  6196  002434                     _i2c_write_bit:
  6197                           	callstack 25
  6198                           
  6199                           ;incstack = 0
  6200                           ;i2c_write_bit@bit stored from wreg
  6201  002434  6E07               	movwf	i2c_write_bit@bit^0,c
  6202  002436                     
  6203                           ;i2c.c: 85:  if (bit) {
  6204  002436  5007               	movf	i2c_write_bit@bit^0,w,c
  6205  002438  B4D8               	btfsc	status,2,c
  6206  00243A  EF21  F012         	goto	u2321
  6207  00243E  EF23  F012         	goto	u2320
  6208  002442                     u2321:
  6209  002442  EF27  F012         	goto	l2558
  6210  002446                     u2320:
  6211  002446                     
  6212                           ;i2c.c: 86:   read_SDA();
  6213  002446  EC29  F014         	call	_read_SDA	;wreg free
  6214                           
  6215                           ;i2c.c: 87:  } else {
  6216  00244A  EF29  F012         	goto	l2560
  6217  00244E                     l2558:
  6218                           
  6219                           ;i2c.c: 88:   clear_SDA();
  6220  00244E  EC07  F015         	call	_clear_SDA	;wreg free
  6221  002452                     l2560:
  6222                           
  6223                           ;i2c.c: 90:  I2C_delay();
  6224  002452  ECD8  F015         	call	_I2C_delay	;wreg free
  6225  002456                     l2562:
  6226  002456  EC45  F014         	call	_read_SCL	;wreg free
  6227  00245A  0900               	iorlw	0
  6228  00245C  B4D8               	btfsc	status,2,c
  6229  00245E  EF33  F012         	goto	u2331
  6230  002462  EF35  F012         	goto	u2330
  6231  002466                     u2331:
  6232  002466  EF2B  F012         	goto	l2562
  6233  00246A                     u2330:
  6234  00246A                     
  6235                           ;i2c.c: 92:  if (bit && read_SDA() == 0) {
  6236  00246A  5007               	movf	i2c_write_bit@bit^0,w,c
  6237  00246C  B4D8               	btfsc	status,2,c
  6238  00246E  EF3B  F012         	goto	u2341
  6239  002472  EF3D  F012         	goto	u2340
  6240  002476                     u2341:
  6241  002476  EF3F  F012         	goto	l2568
  6242  00247A                     u2340:
  6243  00247A  EC29  F014         	call	_read_SDA	;wreg free
  6244  00247E                     l2568:
  6245                           
  6246                           ;i2c.c: 95:  I2C_delay();
  6247  00247E  ECD8  F015         	call	_I2C_delay	;wreg free
  6248  002482                     
  6249                           ;i2c.c: 96:  clear_SCL();
  6250  002482  EC1C  F015         	call	_clear_SCL	;wreg free
  6251  002486                     
  6252                           ;i2c.c: 97:  I2C_delay();
  6253  002486  ECD8  F015         	call	_I2C_delay	;wreg free
  6254  00248A  0012               	return		;funcret
  6255  00248C                     __end_of_i2c_write_bit:
  6256                           	callstack 0
  6257                           
  6258 ;; *************** function _i2c_stop *****************
  6259 ;; Defined at:
  6260 ;;		line 71 in file "i2c.c"
  6261 ;; Parameters:    Size  Location     Type
  6262 ;;		None
  6263 ;; Auto vars:     Size  Location     Type
  6264 ;;		None
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  1    wreg      void 
  6267 ;; Registers used:
  6268 ;;		wreg, status,2, status,0, cstack
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6274 ;;      Params:         0       0       0       0       0       0       0
  6275 ;;      Locals:         0       0       0       0       0       0       0
  6276 ;;      Temps:          0       0       0       0       0       0       0
  6277 ;;      Totals:         0       0       0       0       0       0       0
  6278 ;;Total ram usage:        0 bytes
  6279 ;; Hardware stack levels used: 1
  6280 ;; Hardware stack levels required when called: 2
  6281 ;; This function calls:
  6282 ;;		_I2C_delay
  6283 ;;		_clear_SDA
  6284 ;;		_read_SCL
  6285 ;;		_read_SDA
  6286 ;; This function is called by:
  6287 ;;		_i2cWriteByte
  6288 ;;		_i2cReadByte
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           	psect	text46
  6293  00298C                     __ptext46:
  6294                           	callstack 0
  6295  00298C                     _i2c_stop:
  6296                           	callstack 25
  6297  00298C                     
  6298                           ;i2c.c: 73:  clear_SDA();
  6299  00298C  EC07  F015         	call	_clear_SDA	;wreg free
  6300  002990                     
  6301                           ;i2c.c: 74:  I2C_delay();
  6302  002990  ECD8  F015         	call	_I2C_delay	;wreg free
  6303  002994                     l2544:
  6304  002994  EC45  F014         	call	_read_SCL	;wreg free
  6305  002998  0900               	iorlw	0
  6306  00299A  B4D8               	btfsc	status,2,c
  6307  00299C  EFD2  F014         	goto	u2311
  6308  0029A0  EFD4  F014         	goto	u2310
  6309  0029A4                     u2311:
  6310  0029A4  EFCA  F014         	goto	l2544
  6311  0029A8                     u2310:
  6312  0029A8                     
  6313                           ;i2c.c: 76:  I2C_delay();
  6314  0029A8  ECD8  F015         	call	_I2C_delay	;wreg free
  6315  0029AC                     
  6316                           ;i2c.c: 77:  if (read_SDA() == 0) {
  6317  0029AC  EC29  F014         	call	_read_SDA	;wreg free
  6318  0029B0                     
  6319                           ;i2c.c: 80:  I2C_delay();
  6320  0029B0  ECD8  F015         	call	_I2C_delay	;wreg free
  6321  0029B4                     
  6322                           ;i2c.c: 81:  started = 0;
  6323  0029B4  0E00               	movlw	0
  6324  0029B6  6E4D               	movwf	_started^0,c
  6325  0029B8  0012               	return		;funcret
  6326  0029BA                     __end_of_i2c_stop:
  6327                           	callstack 0
  6328                           
  6329 ;; *************** function _clear_SDA *****************
  6330 ;; Defined at:
  6331 ;;		line 45 in file "i2c.c"
  6332 ;; Parameters:    Size  Location     Type
  6333 ;;		None
  6334 ;; Auto vars:     Size  Location     Type
  6335 ;;		None
  6336 ;; Return value:  Size  Location     Type
  6337 ;;                  1    wreg      void 
  6338 ;; Registers used:
  6339 ;;		wreg, status,2, status,0, cstack
  6340 ;; Tracked objects:
  6341 ;;		On entry : 0/0
  6342 ;;		On exit  : 0/0
  6343 ;;		Unchanged: 0/0
  6344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6345 ;;      Params:         0       0       0       0       0       0       0
  6346 ;;      Locals:         0       0       0       0       0       0       0
  6347 ;;      Temps:          0       0       0       0       0       0       0
  6348 ;;      Totals:         0       0       0       0       0       0       0
  6349 ;;Total ram usage:        0 bytes
  6350 ;; Hardware stack levels used: 1
  6351 ;; Hardware stack levels required when called: 1
  6352 ;; This function calls:
  6353 ;;		_digitalWrite
  6354 ;;		_pinMode
  6355 ;; This function is called by:
  6356 ;;		_i2c_start
  6357 ;;		_i2c_stop
  6358 ;;		_i2c_write_bit
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           	psect	text47
  6363  002A0E                     __ptext47:
  6364                           	callstack 0
  6365  002A0E                     _clear_SDA:
  6366                           	callstack 25
  6367  002A0E                     
  6368                           ;i2c.c: 47:  pinMode(PIN_B4,0);
  6369  002A0E  0E00               	movlw	0
  6370  002A10  6E02               	movwf	(pinMode@pin+1)^0,c
  6371  002A12  0E0C               	movlw	12
  6372  002A14  6E01               	movwf	pinMode@pin^0,c
  6373  002A16  0E00               	movlw	0
  6374  002A18  6E04               	movwf	(pinMode@type+1)^0,c
  6375  002A1A  0E00               	movlw	0
  6376  002A1C  6E03               	movwf	pinMode@type^0,c
  6377  002A1E  EC8D  F007         	call	_pinMode	;wreg free
  6378                           
  6379                           ;i2c.c: 48:  digitalWrite(PIN_B4,0);
  6380  002A22  0E00               	movlw	0
  6381  002A24  6E02               	movwf	(digitalWrite@pin+1)^0,c
  6382  002A26  0E0C               	movlw	12
  6383  002A28  6E01               	movwf	digitalWrite@pin^0,c
  6384  002A2A  0E00               	movlw	0
  6385  002A2C  6E04               	movwf	(digitalWrite@value+1)^0,c
  6386  002A2E  0E00               	movlw	0
  6387  002A30  6E03               	movwf	digitalWrite@value^0,c
  6388  002A32  EC66  F006         	call	_digitalWrite	;wreg free
  6389  002A36  0012               	return		;funcret
  6390  002A38                     __end_of_clear_SDA:
  6391                           	callstack 0
  6392                           
  6393 ;; *************** function _i2c_read_bit *****************
  6394 ;; Defined at:
  6395 ;;		line 100 in file "i2c.c"
  6396 ;; Parameters:    Size  Location     Type
  6397 ;;		None
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;  bit             1    6[COMRAM] unsigned char 
  6400 ;; Return value:  Size  Location     Type
  6401 ;;                  1    wreg      unsigned char 
  6402 ;; Registers used:
  6403 ;;		wreg, status,2, status,0, cstack
  6404 ;; Tracked objects:
  6405 ;;		On entry : 0/0
  6406 ;;		On exit  : 0/0
  6407 ;;		Unchanged: 0/0
  6408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6409 ;;      Params:         0       0       0       0       0       0       0
  6410 ;;      Locals:         1       0       0       0       0       0       0
  6411 ;;      Temps:          0       0       0       0       0       0       0
  6412 ;;      Totals:         1       0       0       0       0       0       0
  6413 ;;Total ram usage:        1 bytes
  6414 ;; Hardware stack levels used: 1
  6415 ;; Hardware stack levels required when called: 2
  6416 ;; This function calls:
  6417 ;;		_I2C_delay
  6418 ;;		_clear_SCL
  6419 ;;		_read_SCL
  6420 ;;		_read_SDA
  6421 ;; This function is called by:
  6422 ;;		_i2cWriteByte
  6423 ;;		_i2cReadByte
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           	psect	text48
  6428  00292A                     __ptext48:
  6429                           	callstack 0
  6430  00292A                     _i2c_read_bit:
  6431                           	callstack 25
  6432  00292A                     
  6433                           ;i2c.c: 101:  unsigned char bit;;i2c.c: 102:  read_SDA();
  6434  00292A  EC29  F014         	call	_read_SDA	;wreg free
  6435  00292E                     
  6436                           ;i2c.c: 103:  I2C_delay();
  6437  00292E  ECD8  F015         	call	_I2C_delay	;wreg free
  6438  002932                     l2578:
  6439  002932  EC45  F014         	call	_read_SCL	;wreg free
  6440  002936  0900               	iorlw	0
  6441  002938  B4D8               	btfsc	status,2,c
  6442  00293A  EFA1  F014         	goto	u2351
  6443  00293E  EFA3  F014         	goto	u2350
  6444  002942                     u2351:
  6445  002942  EF99  F014         	goto	l2578
  6446  002946                     u2350:
  6447  002946                     
  6448                           ;i2c.c: 105:  bit = read_SDA();
  6449  002946  EC29  F014         	call	_read_SDA	;wreg free
  6450  00294A  6E07               	movwf	i2c_read_bit@bit^0,c
  6451  00294C                     
  6452                           ;i2c.c: 106:  I2C_delay();
  6453  00294C  ECD8  F015         	call	_I2C_delay	;wreg free
  6454  002950                     
  6455                           ;i2c.c: 107:  clear_SCL();
  6456  002950  EC1C  F015         	call	_clear_SCL	;wreg free
  6457                           
  6458                           ;i2c.c: 108:  I2C_delay();
  6459  002954  ECD8  F015         	call	_I2C_delay	;wreg free
  6460  002958                     
  6461                           ;i2c.c: 109:  return bit;
  6462  002958  5007               	movf	i2c_read_bit@bit^0,w,c
  6463  00295A  0012               	return		;funcret
  6464  00295C                     __end_of_i2c_read_bit:
  6465                           	callstack 0
  6466                           
  6467 ;; *************** function _read_SDA *****************
  6468 ;; Defined at:
  6469 ;;		line 34 in file "i2c.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;		None
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;		None
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  1    wreg      unsigned char 
  6476 ;; Registers used:
  6477 ;;		wreg, status,2, status,0, cstack
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6483 ;;      Params:         0       0       0       0       0       0       0
  6484 ;;      Locals:         0       0       0       0       0       0       0
  6485 ;;      Temps:          0       0       0       0       0       0       0
  6486 ;;      Totals:         0       0       0       0       0       0       0
  6487 ;;Total ram usage:        0 bytes
  6488 ;; Hardware stack levels used: 1
  6489 ;; Hardware stack levels required when called: 1
  6490 ;; This function calls:
  6491 ;;		_digitalRead
  6492 ;;		_pinMode
  6493 ;; This function is called by:
  6494 ;;		_i2c_start
  6495 ;;		_i2c_stop
  6496 ;;		_i2c_write_bit
  6497 ;;		_i2c_read_bit
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           	psect	text49
  6502  002852                     __ptext49:
  6503                           	callstack 0
  6504  002852                     _read_SDA:
  6505                           	callstack 25
  6506  002852                     
  6507                           ;i2c.c: 36:  pinMode(PIN_B4,1);
  6508  002852  0E00               	movlw	0
  6509  002854  6E02               	movwf	(pinMode@pin+1)^0,c
  6510  002856  0E0C               	movlw	12
  6511  002858  6E01               	movwf	pinMode@pin^0,c
  6512  00285A  0E00               	movlw	0
  6513  00285C  6E04               	movwf	(pinMode@type+1)^0,c
  6514  00285E  0E01               	movlw	1
  6515  002860  6E03               	movwf	pinMode@type^0,c
  6516  002862  EC8D  F007         	call	_pinMode	;wreg free
  6517                           
  6518                           ;i2c.c: 37:  return !!digitalRead(PIN_B4);
  6519  002866  0E00               	movlw	0
  6520  002868  6E02               	movwf	(digitalRead@pin+1)^0,c
  6521  00286A  0E0C               	movlw	12
  6522  00286C  6E01               	movwf	digitalRead@pin^0,c
  6523  00286E  ECA9  F00B         	call	_digitalRead	;wreg free
  6524  002872  5001               	movf	?_digitalRead^0,w,c
  6525  002874  1002               	iorwf	(?_digitalRead+1)^0,w,c
  6526  002876  A4D8               	btfss	status,2,c
  6527  002878  EF40  F014         	goto	u2231
  6528  00287C  EF43  F014         	goto	u2230
  6529  002880                     u2231:
  6530  002880  0E01               	movlw	1
  6531  002882  EF44  F014         	goto	u2240
  6532  002886                     u2230:
  6533  002886  0E00               	movlw	0
  6534  002888                     u2240:
  6535  002888  0012               	return		;funcret
  6536  00288A                     __end_of_read_SDA:
  6537                           	callstack 0
  6538                           
  6539 ;; *************** function _read_SCL *****************
  6540 ;; Defined at:
  6541 ;;		line 29 in file "i2c.c"
  6542 ;; Parameters:    Size  Location     Type
  6543 ;;		None
  6544 ;; Auto vars:     Size  Location     Type
  6545 ;;		None
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  1    wreg      unsigned char 
  6548 ;; Registers used:
  6549 ;;		wreg, status,2, status,0, cstack
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6555 ;;      Params:         0       0       0       0       0       0       0
  6556 ;;      Locals:         0       0       0       0       0       0       0
  6557 ;;      Temps:          0       0       0       0       0       0       0
  6558 ;;      Totals:         0       0       0       0       0       0       0
  6559 ;;Total ram usage:        0 bytes
  6560 ;; Hardware stack levels used: 1
  6561 ;; Hardware stack levels required when called: 1
  6562 ;; This function calls:
  6563 ;;		_digitalRead
  6564 ;;		_pinMode
  6565 ;; This function is called by:
  6566 ;;		_i2c_start
  6567 ;;		_i2c_stop
  6568 ;;		_i2c_write_bit
  6569 ;;		_i2c_read_bit
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573                           	psect	text50
  6574  00288A                     __ptext50:
  6575                           	callstack 0
  6576  00288A                     _read_SCL:
  6577                           	callstack 25
  6578  00288A                     
  6579                           ;i2c.c: 31:  pinMode(PIN_B3,1);
  6580  00288A  0E00               	movlw	0
  6581  00288C  6E02               	movwf	(pinMode@pin+1)^0,c
  6582  00288E  0E0B               	movlw	11
  6583  002890  6E01               	movwf	pinMode@pin^0,c
  6584  002892  0E00               	movlw	0
  6585  002894  6E04               	movwf	(pinMode@type+1)^0,c
  6586  002896  0E01               	movlw	1
  6587  002898  6E03               	movwf	pinMode@type^0,c
  6588  00289A  EC8D  F007         	call	_pinMode	;wreg free
  6589                           
  6590                           ;i2c.c: 32:  return !!digitalRead(PIN_B3);
  6591  00289E  0E00               	movlw	0
  6592  0028A0  6E02               	movwf	(digitalRead@pin+1)^0,c
  6593  0028A2  0E0B               	movlw	11
  6594  0028A4  6E01               	movwf	digitalRead@pin^0,c
  6595  0028A6  ECA9  F00B         	call	_digitalRead	;wreg free
  6596  0028AA  5001               	movf	?_digitalRead^0,w,c
  6597  0028AC  1002               	iorwf	(?_digitalRead+1)^0,w,c
  6598  0028AE  A4D8               	btfss	status,2,c
  6599  0028B0  EF5C  F014         	goto	u2211
  6600  0028B4  EF5F  F014         	goto	u2210
  6601  0028B8                     u2211:
  6602  0028B8  0E01               	movlw	1
  6603  0028BA  EF60  F014         	goto	u2220
  6604  0028BE                     u2210:
  6605  0028BE  0E00               	movlw	0
  6606  0028C0                     u2220:
  6607  0028C0  0012               	return		;funcret
  6608  0028C2                     __end_of_read_SCL:
  6609                           	callstack 0
  6610                           
  6611 ;; *************** function _digitalRead *****************
  6612 ;; Defined at:
  6613 ;;		line 39 in file "io.c"
  6614 ;; Parameters:    Size  Location     Type
  6615 ;;  pin             2    0[COMRAM] int 
  6616 ;; Auto vars:     Size  Location     Type
  6617 ;;		None
  6618 ;; Return value:  Size  Location     Type
  6619 ;;                  2    0[COMRAM] int 
  6620 ;; Registers used:
  6621 ;;		wreg, status,2, status,0
  6622 ;; Tracked objects:
  6623 ;;		On entry : 0/0
  6624 ;;		On exit  : 0/0
  6625 ;;		Unchanged: 0/0
  6626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6627 ;;      Params:         2       0       0       0       0       0       0
  6628 ;;      Locals:         0       0       0       0       0       0       0
  6629 ;;      Temps:          3       0       0       0       0       0       0
  6630 ;;      Totals:         5       0       0       0       0       0       0
  6631 ;;Total ram usage:        5 bytes
  6632 ;; Hardware stack levels used: 1
  6633 ;; This function calls:
  6634 ;;		Nothing
  6635 ;; This function is called by:
  6636 ;;		_read_SCL
  6637 ;;		_read_SDA
  6638 ;;		_kpDebounce
  6639 ;; This function uses a non-reentrant model
  6640 ;;
  6641                           
  6642                           	psect	text51
  6643  001752                     __ptext51:
  6644                           	callstack 0
  6645  001752                     _digitalRead:
  6646                           	callstack 28
  6647  001752                     
  6648                           ;io.c: 40:     if(pin <8){
  6649  001752  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  6650  001754  EFB7  F00B         	goto	u2100
  6651  001758  5002               	movf	(digitalRead@pin+1)^0,w,c
  6652  00175A  E107               	bnz	u2101
  6653  00175C  0E08               	movlw	8
  6654  00175E  5C01               	subwf	digitalRead@pin^0,w,c
  6655  001760  B0D8               	btfsc	status,0,c
  6656  001762  EFB5  F00B         	goto	u2101
  6657  001766  EFB7  F00B         	goto	u2100
  6658  00176A                     u2101:
  6659  00176A  EFCB  F00B         	goto	l2418
  6660  00176E                     u2100:
  6661  00176E                     
  6662                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  6663  00176E  C001  F003         	movff	digitalRead@pin,??_digitalRead
  6664  001772  0E01               	movlw	1
  6665  001774  6E04               	movwf	(??_digitalRead+1)^0,c
  6666  001776  2A03               	incf	??_digitalRead^0,f,c
  6667  001778  EFC0  F00B         	goto	u2114
  6668  00177C                     u2115:
  6669  00177C  90D8               	bcf	status,0,c
  6670  00177E  3604               	rlcf	(??_digitalRead+1)^0,f,c
  6671  001780                     u2114:
  6672  001780  2E03               	decfsz	??_digitalRead^0,f,c
  6673  001782  EFBE  F00B         	goto	u2115
  6674  001786  5004               	movf	(??_digitalRead+1)^0,w,c
  6675  001788  1480               	andwf	128,w,c	;volatile
  6676  00178A  6E05               	movwf	(??_digitalRead+2)^0,c
  6677  00178C  5005               	movf	(??_digitalRead+2)^0,w,c
  6678  00178E  6E01               	movwf	?_digitalRead^0,c
  6679  001790  6A02               	clrf	(?_digitalRead+1)^0,c
  6680  001792  EF5D  F00C         	goto	l165
  6681  001796                     l2418:
  6682  001796  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  6683  001798  EFD9  F00B         	goto	u2120
  6684  00179C  5002               	movf	(digitalRead@pin+1)^0,w,c
  6685  00179E  E107               	bnz	u2121
  6686  0017A0  0E10               	movlw	16
  6687  0017A2  5C01               	subwf	digitalRead@pin^0,w,c
  6688  0017A4  B0D8               	btfsc	status,0,c
  6689  0017A6  EFD7  F00B         	goto	u2121
  6690  0017AA  EFD9  F00B         	goto	u2120
  6691  0017AE                     u2121:
  6692  0017AE  EFEF  F00B         	goto	l2426
  6693  0017B2                     u2120:
  6694  0017B2                     
  6695                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  6696  0017B2  C001  F003         	movff	digitalRead@pin,??_digitalRead
  6697  0017B6  0EF8               	movlw	-8
  6698  0017B8  2603               	addwf	??_digitalRead^0,f,c
  6699  0017BA  0E01               	movlw	1
  6700  0017BC  6E04               	movwf	(??_digitalRead+1)^0,c
  6701  0017BE  2A03               	incf	??_digitalRead^0,f,c
  6702  0017C0  EFE4  F00B         	goto	u2134
  6703  0017C4                     u2135:
  6704  0017C4  90D8               	bcf	status,0,c
  6705  0017C6  3604               	rlcf	(??_digitalRead+1)^0,f,c
  6706  0017C8                     u2134:
  6707  0017C8  2E03               	decfsz	??_digitalRead^0,f,c
  6708  0017CA  EFE2  F00B         	goto	u2135
  6709  0017CE  5004               	movf	(??_digitalRead+1)^0,w,c
  6710  0017D0  1481               	andwf	129,w,c	;volatile
  6711  0017D2  6E05               	movwf	(??_digitalRead+2)^0,c
  6712  0017D4  5005               	movf	(??_digitalRead+2)^0,w,c
  6713  0017D6  6E01               	movwf	?_digitalRead^0,c
  6714  0017D8  6A02               	clrf	(?_digitalRead+1)^0,c
  6715  0017DA  EF5D  F00C         	goto	l165
  6716  0017DE                     l2426:
  6717  0017DE  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  6718  0017E0  EFFD  F00B         	goto	u2140
  6719  0017E4  5002               	movf	(digitalRead@pin+1)^0,w,c
  6720  0017E6  E107               	bnz	u2141
  6721  0017E8  0E18               	movlw	24
  6722  0017EA  5C01               	subwf	digitalRead@pin^0,w,c
  6723  0017EC  B0D8               	btfsc	status,0,c
  6724  0017EE  EFFB  F00B         	goto	u2141
  6725  0017F2  EFFD  F00B         	goto	u2140
  6726  0017F6                     u2141:
  6727  0017F6  EF13  F00C         	goto	l2434
  6728  0017FA                     u2140:
  6729  0017FA                     
  6730                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  6731  0017FA  C001  F003         	movff	digitalRead@pin,??_digitalRead
  6732  0017FE  0EF0               	movlw	-16
  6733  001800  2603               	addwf	??_digitalRead^0,f,c
  6734  001802  0E01               	movlw	1
  6735  001804  6E04               	movwf	(??_digitalRead+1)^0,c
  6736  001806  2A03               	incf	??_digitalRead^0,f,c
  6737  001808  EF08  F00C         	goto	u2154
  6738  00180C                     u2155:
  6739  00180C  90D8               	bcf	status,0,c
  6740  00180E  3604               	rlcf	(??_digitalRead+1)^0,f,c
  6741  001810                     u2154:
  6742  001810  2E03               	decfsz	??_digitalRead^0,f,c
  6743  001812  EF06  F00C         	goto	u2155
  6744  001816  5004               	movf	(??_digitalRead+1)^0,w,c
  6745  001818  1482               	andwf	130,w,c	;volatile
  6746  00181A  6E05               	movwf	(??_digitalRead+2)^0,c
  6747  00181C  5005               	movf	(??_digitalRead+2)^0,w,c
  6748  00181E  6E01               	movwf	?_digitalRead^0,c
  6749  001820  6A02               	clrf	(?_digitalRead+1)^0,c
  6750  001822  EF5D  F00C         	goto	l165
  6751  001826                     l2434:
  6752  001826  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  6753  001828  EF21  F00C         	goto	u2160
  6754  00182C  5002               	movf	(digitalRead@pin+1)^0,w,c
  6755  00182E  E107               	bnz	u2161
  6756  001830  0E20               	movlw	32
  6757  001832  5C01               	subwf	digitalRead@pin^0,w,c
  6758  001834  B0D8               	btfsc	status,0,c
  6759  001836  EF1F  F00C         	goto	u2161
  6760  00183A  EF21  F00C         	goto	u2160
  6761  00183E                     u2161:
  6762  00183E  EF37  F00C         	goto	l2442
  6763  001842                     u2160:
  6764  001842                     
  6765                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  6766  001842  C001  F003         	movff	digitalRead@pin,??_digitalRead
  6767  001846  0EE8               	movlw	-24
  6768  001848  2603               	addwf	??_digitalRead^0,f,c
  6769  00184A  0E01               	movlw	1
  6770  00184C  6E04               	movwf	(??_digitalRead+1)^0,c
  6771  00184E  2A03               	incf	??_digitalRead^0,f,c
  6772  001850  EF2C  F00C         	goto	u2174
  6773  001854                     u2175:
  6774  001854  90D8               	bcf	status,0,c
  6775  001856  3604               	rlcf	(??_digitalRead+1)^0,f,c
  6776  001858                     u2174:
  6777  001858  2E03               	decfsz	??_digitalRead^0,f,c
  6778  00185A  EF2A  F00C         	goto	u2175
  6779  00185E  5004               	movf	(??_digitalRead+1)^0,w,c
  6780  001860  1483               	andwf	131,w,c	;volatile
  6781  001862  6E05               	movwf	(??_digitalRead+2)^0,c
  6782  001864  5005               	movf	(??_digitalRead+2)^0,w,c
  6783  001866  6E01               	movwf	?_digitalRead^0,c
  6784  001868  6A02               	clrf	(?_digitalRead+1)^0,c
  6785  00186A  EF5D  F00C         	goto	l165
  6786  00186E                     l2442:
  6787  00186E  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  6788  001870  EF45  F00C         	goto	u2180
  6789  001874  5002               	movf	(digitalRead@pin+1)^0,w,c
  6790  001876  E107               	bnz	u2181
  6791  001878  0E28               	movlw	40
  6792  00187A  5C01               	subwf	digitalRead@pin^0,w,c
  6793  00187C  B0D8               	btfsc	status,0,c
  6794  00187E  EF43  F00C         	goto	u2181
  6795  001882  EF45  F00C         	goto	u2180
  6796  001886                     u2181:
  6797  001886  EF5B  F00C         	goto	l170
  6798  00188A                     u2180:
  6799  00188A                     
  6800                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  6801  00188A  C001  F003         	movff	digitalRead@pin,??_digitalRead
  6802  00188E  0EE0               	movlw	-32
  6803  001890  2603               	addwf	??_digitalRead^0,f,c
  6804  001892  0E01               	movlw	1
  6805  001894  6E04               	movwf	(??_digitalRead+1)^0,c
  6806  001896  2A03               	incf	??_digitalRead^0,f,c
  6807  001898  EF50  F00C         	goto	u2194
  6808  00189C                     u2195:
  6809  00189C  90D8               	bcf	status,0,c
  6810  00189E  3604               	rlcf	(??_digitalRead+1)^0,f,c
  6811  0018A0                     u2194:
  6812  0018A0  2E03               	decfsz	??_digitalRead^0,f,c
  6813  0018A2  EF4E  F00C         	goto	u2195
  6814  0018A6  5004               	movf	(??_digitalRead+1)^0,w,c
  6815  0018A8  1484               	andwf	132,w,c	;volatile
  6816  0018AA  6E05               	movwf	(??_digitalRead+2)^0,c
  6817  0018AC  5005               	movf	(??_digitalRead+2)^0,w,c
  6818  0018AE  6E01               	movwf	?_digitalRead^0,c
  6819  0018B0  6A02               	clrf	(?_digitalRead+1)^0,c
  6820  0018B2  EF5D  F00C         	goto	l165
  6821  0018B6                     l170:
  6822  0018B6                     
  6823                           ;io.c: 51:     return -1;
  6824  0018B6  6801               	setf	?_digitalRead^0,c
  6825  0018B8  6802               	setf	(?_digitalRead+1)^0,c
  6826  0018BA                     l165:
  6827  0018BA  0012               	return		;funcret
  6828  0018BC                     __end_of_digitalRead:
  6829                           	callstack 0
  6830                           
  6831 ;; *************** function _clear_SCL *****************
  6832 ;; Defined at:
  6833 ;;		line 39 in file "i2c.c"
  6834 ;; Parameters:    Size  Location     Type
  6835 ;;		None
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;		None
  6838 ;; Return value:  Size  Location     Type
  6839 ;;                  1    wreg      void 
  6840 ;; Registers used:
  6841 ;;		wreg, status,2, status,0, cstack
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 0/0
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6847 ;;      Params:         0       0       0       0       0       0       0
  6848 ;;      Locals:         0       0       0       0       0       0       0
  6849 ;;      Temps:          0       0       0       0       0       0       0
  6850 ;;      Totals:         0       0       0       0       0       0       0
  6851 ;;Total ram usage:        0 bytes
  6852 ;; Hardware stack levels used: 1
  6853 ;; Hardware stack levels required when called: 1
  6854 ;; This function calls:
  6855 ;;		_digitalWrite
  6856 ;;		_pinMode
  6857 ;; This function is called by:
  6858 ;;		_i2c_start
  6859 ;;		_i2c_write_bit
  6860 ;;		_i2c_read_bit
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864                           	psect	text52
  6865  002A38                     __ptext52:
  6866                           	callstack 0
  6867  002A38                     _clear_SCL:
  6868                           	callstack 25
  6869  002A38                     
  6870                           ;i2c.c: 41:  pinMode(PIN_B3,0);
  6871  002A38  0E00               	movlw	0
  6872  002A3A  6E02               	movwf	(pinMode@pin+1)^0,c
  6873  002A3C  0E0B               	movlw	11
  6874  002A3E  6E01               	movwf	pinMode@pin^0,c
  6875  002A40  0E00               	movlw	0
  6876  002A42  6E04               	movwf	(pinMode@type+1)^0,c
  6877  002A44  0E00               	movlw	0
  6878  002A46  6E03               	movwf	pinMode@type^0,c
  6879  002A48  EC8D  F007         	call	_pinMode	;wreg free
  6880                           
  6881                           ;i2c.c: 42:  digitalWrite(PIN_B3,0);
  6882  002A4C  0E00               	movlw	0
  6883  002A4E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  6884  002A50  0E0B               	movlw	11
  6885  002A52  6E01               	movwf	digitalWrite@pin^0,c
  6886  002A54  0E00               	movlw	0
  6887  002A56  6E04               	movwf	(digitalWrite@value+1)^0,c
  6888  002A58  0E00               	movlw	0
  6889  002A5A  6E03               	movwf	digitalWrite@value^0,c
  6890  002A5C  EC66  F006         	call	_digitalWrite	;wreg free
  6891  002A60  0012               	return		;funcret
  6892  002A62                     __end_of_clear_SCL:
  6893                           	callstack 0
  6894                           
  6895 ;; *************** function _digitalWrite *****************
  6896 ;; Defined at:
  6897 ;;		line 14 in file "io.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;  pin             2    0[COMRAM] int 
  6900 ;;  value           2    2[COMRAM] int 
  6901 ;; Auto vars:     Size  Location     Type
  6902 ;;		None
  6903 ;; Return value:  Size  Location     Type
  6904 ;;                  1    wreg      void 
  6905 ;; Registers used:
  6906 ;;		wreg, status,2, status,0
  6907 ;; Tracked objects:
  6908 ;;		On entry : 0/0
  6909 ;;		On exit  : 0/0
  6910 ;;		Unchanged: 0/0
  6911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6912 ;;      Params:         4       0       0       0       0       0       0
  6913 ;;      Locals:         0       0       0       0       0       0       0
  6914 ;;      Temps:          2       0       0       0       0       0       0
  6915 ;;      Totals:         6       0       0       0       0       0       0
  6916 ;;Total ram usage:        6 bytes
  6917 ;; Hardware stack levels used: 1
  6918 ;; This function calls:
  6919 ;;		Nothing
  6920 ;; This function is called by:
  6921 ;;		_clear_SCL
  6922 ;;		_clear_SDA
  6923 ;;		_pulseEnablePin
  6924 ;;		_pushNibble
  6925 ;;		_pushByte
  6926 ;;		_PulseEnClock
  6927 ;;		_PulseClockData
  6928 ;;		_soWrite
  6929 ;;		_ssdUpdate
  6930 ;; This function uses a non-reentrant model
  6931 ;;
  6932                           
  6933                           	psect	text53
  6934  000CCC                     __ptext53:
  6935                           	callstack 0
  6936  000CCC                     _digitalWrite:
  6937                           	callstack 24
  6938  000CCC                     
  6939                           ;io.c: 16:     if(pin <8){
  6940  000CCC  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6941  000CCE  EF74  F006         	goto	u1700
  6942  000CD2  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6943  000CD4  E107               	bnz	u1701
  6944  000CD6  0E08               	movlw	8
  6945  000CD8  5C01               	subwf	digitalWrite@pin^0,w,c
  6946  000CDA  B0D8               	btfsc	status,0,c
  6947  000CDC  EF72  F006         	goto	u1701
  6948  000CE0  EF74  F006         	goto	u1700
  6949  000CE4                     u1701:
  6950  000CE4  EF9E  F006         	goto	l2334
  6951  000CE8                     u1700:
  6952  000CE8                     
  6953                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  6954  000CE8  5003               	movf	digitalWrite@value^0,w,c
  6955  000CEA  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6956  000CEC  B4D8               	btfsc	status,2,c
  6957  000CEE  EF7B  F006         	goto	u1711
  6958  000CF2  EF7D  F006         	goto	u1710
  6959  000CF6                     u1711:
  6960  000CF6  EF8D  F006         	goto	l2332
  6961  000CFA                     u1710:
  6962  000CFA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6963  000CFE  0E01               	movlw	1
  6964  000D00  6E06               	movwf	(??_digitalWrite+1)^0,c
  6965  000D02  2A05               	incf	??_digitalWrite^0,f,c
  6966  000D04  EF86  F006         	goto	u1724
  6967  000D08                     u1725:
  6968  000D08  90D8               	bcf	status,0,c
  6969  000D0A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6970  000D0C                     u1724:
  6971  000D0C  2E05               	decfsz	??_digitalWrite^0,f,c
  6972  000D0E  EF84  F006         	goto	u1725
  6973  000D12  5006               	movf	(??_digitalWrite+1)^0,w,c
  6974  000D14  1280               	iorwf	128,f,c	;volatile
  6975  000D16  EF8C  F007         	goto	l161
  6976  000D1A                     l2332:
  6977  000D1A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6978  000D1E  0E01               	movlw	1
  6979  000D20  6E06               	movwf	(??_digitalWrite+1)^0,c
  6980  000D22  2A05               	incf	??_digitalWrite^0,f,c
  6981  000D24  EF96  F006         	goto	u1734
  6982  000D28                     u1735:
  6983  000D28  90D8               	bcf	status,0,c
  6984  000D2A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6985  000D2C                     u1734:
  6986  000D2C  2E05               	decfsz	??_digitalWrite^0,f,c
  6987  000D2E  EF94  F006         	goto	u1735
  6988  000D32  5006               	movf	(??_digitalWrite+1)^0,w,c
  6989  000D34  0AFF               	xorlw	255
  6990  000D36  1680               	andwf	128,f,c	;volatile
  6991  000D38  EF8C  F007         	goto	l161
  6992  000D3C                     l2334:
  6993  000D3C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6994  000D3E  EFAC  F006         	goto	u1740
  6995  000D42  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6996  000D44  E107               	bnz	u1741
  6997  000D46  0E10               	movlw	16
  6998  000D48  5C01               	subwf	digitalWrite@pin^0,w,c
  6999  000D4A  B0D8               	btfsc	status,0,c
  7000  000D4C  EFAA  F006         	goto	u1741
  7001  000D50  EFAC  F006         	goto	u1740
  7002  000D54                     u1741:
  7003  000D54  EFDA  F006         	goto	l2342
  7004  000D58                     u1740:
  7005  000D58                     
  7006                           ;io.c: 20:         pin -=8;
  7007  000D58  0EF8               	movlw	248
  7008  000D5A  2601               	addwf	digitalWrite@pin^0,f,c
  7009  000D5C  0EFF               	movlw	255
  7010  000D5E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7011                           
  7012                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  7013  000D60  5003               	movf	digitalWrite@value^0,w,c
  7014  000D62  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7015  000D64  B4D8               	btfsc	status,2,c
  7016  000D66  EFB7  F006         	goto	u1751
  7017  000D6A  EFB9  F006         	goto	u1750
  7018  000D6E                     u1751:
  7019  000D6E  EFC9  F006         	goto	l2340
  7020  000D72                     u1750:
  7021  000D72  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7022  000D76  0E01               	movlw	1
  7023  000D78  6E06               	movwf	(??_digitalWrite+1)^0,c
  7024  000D7A  2A05               	incf	??_digitalWrite^0,f,c
  7025  000D7C  EFC2  F006         	goto	u1764
  7026  000D80                     u1765:
  7027  000D80  90D8               	bcf	status,0,c
  7028  000D82  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7029  000D84                     u1764:
  7030  000D84  2E05               	decfsz	??_digitalWrite^0,f,c
  7031  000D86  EFC0  F006         	goto	u1765
  7032  000D8A  5006               	movf	(??_digitalWrite+1)^0,w,c
  7033  000D8C  1281               	iorwf	129,f,c	;volatile
  7034  000D8E  EF8C  F007         	goto	l161
  7035  000D92                     l2340:
  7036  000D92  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7037  000D96  0E01               	movlw	1
  7038  000D98  6E06               	movwf	(??_digitalWrite+1)^0,c
  7039  000D9A  2A05               	incf	??_digitalWrite^0,f,c
  7040  000D9C  EFD2  F006         	goto	u1774
  7041  000DA0                     u1775:
  7042  000DA0  90D8               	bcf	status,0,c
  7043  000DA2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7044  000DA4                     u1774:
  7045  000DA4  2E05               	decfsz	??_digitalWrite^0,f,c
  7046  000DA6  EFD0  F006         	goto	u1775
  7047  000DAA  5006               	movf	(??_digitalWrite+1)^0,w,c
  7048  000DAC  0AFF               	xorlw	255
  7049  000DAE  1681               	andwf	129,f,c	;volatile
  7050  000DB0  EF8C  F007         	goto	l161
  7051  000DB4                     l2342:
  7052  000DB4  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7053  000DB6  EFE8  F006         	goto	u1780
  7054  000DBA  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7055  000DBC  E107               	bnz	u1781
  7056  000DBE  0E18               	movlw	24
  7057  000DC0  5C01               	subwf	digitalWrite@pin^0,w,c
  7058  000DC2  B0D8               	btfsc	status,0,c
  7059  000DC4  EFE6  F006         	goto	u1781
  7060  000DC8  EFE8  F006         	goto	u1780
  7061  000DCC                     u1781:
  7062  000DCC  EF16  F007         	goto	l2350
  7063  000DD0                     u1780:
  7064  000DD0                     
  7065                           ;io.c: 24:         pin -=16;
  7066  000DD0  0EF0               	movlw	240
  7067  000DD2  2601               	addwf	digitalWrite@pin^0,f,c
  7068  000DD4  0EFF               	movlw	255
  7069  000DD6  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7070                           
  7071                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  7072  000DD8  5003               	movf	digitalWrite@value^0,w,c
  7073  000DDA  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7074  000DDC  B4D8               	btfsc	status,2,c
  7075  000DDE  EFF3  F006         	goto	u1791
  7076  000DE2  EFF5  F006         	goto	u1790
  7077  000DE6                     u1791:
  7078  000DE6  EF05  F007         	goto	l2348
  7079  000DEA                     u1790:
  7080  000DEA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7081  000DEE  0E01               	movlw	1
  7082  000DF0  6E06               	movwf	(??_digitalWrite+1)^0,c
  7083  000DF2  2A05               	incf	??_digitalWrite^0,f,c
  7084  000DF4  EFFE  F006         	goto	u1804
  7085  000DF8                     u1805:
  7086  000DF8  90D8               	bcf	status,0,c
  7087  000DFA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7088  000DFC                     u1804:
  7089  000DFC  2E05               	decfsz	??_digitalWrite^0,f,c
  7090  000DFE  EFFC  F006         	goto	u1805
  7091  000E02  5006               	movf	(??_digitalWrite+1)^0,w,c
  7092  000E04  1282               	iorwf	130,f,c	;volatile
  7093  000E06  EF8C  F007         	goto	l161
  7094  000E0A                     l2348:
  7095  000E0A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7096  000E0E  0E01               	movlw	1
  7097  000E10  6E06               	movwf	(??_digitalWrite+1)^0,c
  7098  000E12  2A05               	incf	??_digitalWrite^0,f,c
  7099  000E14  EF0E  F007         	goto	u1814
  7100  000E18                     u1815:
  7101  000E18  90D8               	bcf	status,0,c
  7102  000E1A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7103  000E1C                     u1814:
  7104  000E1C  2E05               	decfsz	??_digitalWrite^0,f,c
  7105  000E1E  EF0C  F007         	goto	u1815
  7106  000E22  5006               	movf	(??_digitalWrite+1)^0,w,c
  7107  000E24  0AFF               	xorlw	255
  7108  000E26  1682               	andwf	130,f,c	;volatile
  7109  000E28  EF8C  F007         	goto	l161
  7110  000E2C                     l2350:
  7111  000E2C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7112  000E2E  EF24  F007         	goto	u1820
  7113  000E32  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7114  000E34  E107               	bnz	u1821
  7115  000E36  0E20               	movlw	32
  7116  000E38  5C01               	subwf	digitalWrite@pin^0,w,c
  7117  000E3A  B0D8               	btfsc	status,0,c
  7118  000E3C  EF22  F007         	goto	u1821
  7119  000E40  EF24  F007         	goto	u1820
  7120  000E44                     u1821:
  7121  000E44  EF52  F007         	goto	l2358
  7122  000E48                     u1820:
  7123  000E48                     
  7124                           ;io.c: 28:         pin -=24;
  7125  000E48  0EE8               	movlw	232
  7126  000E4A  2601               	addwf	digitalWrite@pin^0,f,c
  7127  000E4C  0EFF               	movlw	255
  7128  000E4E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7129                           
  7130                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  7131  000E50  5003               	movf	digitalWrite@value^0,w,c
  7132  000E52  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7133  000E54  B4D8               	btfsc	status,2,c
  7134  000E56  EF2F  F007         	goto	u1831
  7135  000E5A  EF31  F007         	goto	u1830
  7136  000E5E                     u1831:
  7137  000E5E  EF41  F007         	goto	l2356
  7138  000E62                     u1830:
  7139  000E62  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7140  000E66  0E01               	movlw	1
  7141  000E68  6E06               	movwf	(??_digitalWrite+1)^0,c
  7142  000E6A  2A05               	incf	??_digitalWrite^0,f,c
  7143  000E6C  EF3A  F007         	goto	u1844
  7144  000E70                     u1845:
  7145  000E70  90D8               	bcf	status,0,c
  7146  000E72  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7147  000E74                     u1844:
  7148  000E74  2E05               	decfsz	??_digitalWrite^0,f,c
  7149  000E76  EF38  F007         	goto	u1845
  7150  000E7A  5006               	movf	(??_digitalWrite+1)^0,w,c
  7151  000E7C  1283               	iorwf	131,f,c	;volatile
  7152  000E7E  EF8C  F007         	goto	l161
  7153  000E82                     l2356:
  7154  000E82  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7155  000E86  0E01               	movlw	1
  7156  000E88  6E06               	movwf	(??_digitalWrite+1)^0,c
  7157  000E8A  2A05               	incf	??_digitalWrite^0,f,c
  7158  000E8C  EF4A  F007         	goto	u1854
  7159  000E90                     u1855:
  7160  000E90  90D8               	bcf	status,0,c
  7161  000E92  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7162  000E94                     u1854:
  7163  000E94  2E05               	decfsz	??_digitalWrite^0,f,c
  7164  000E96  EF48  F007         	goto	u1855
  7165  000E9A  5006               	movf	(??_digitalWrite+1)^0,w,c
  7166  000E9C  0AFF               	xorlw	255
  7167  000E9E  1683               	andwf	131,f,c	;volatile
  7168  000EA0  EF8C  F007         	goto	l161
  7169  000EA4                     l2358:
  7170  000EA4  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7171  000EA6  EF60  F007         	goto	u1860
  7172  000EAA  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7173  000EAC  E107               	bnz	u1861
  7174  000EAE  0E28               	movlw	40
  7175  000EB0  5C01               	subwf	digitalWrite@pin^0,w,c
  7176  000EB2  B0D8               	btfsc	status,0,c
  7177  000EB4  EF5E  F007         	goto	u1861
  7178  000EB8  EF60  F007         	goto	u1860
  7179  000EBC                     u1861:
  7180  000EBC  EF8C  F007         	goto	l161
  7181  000EC0                     u1860:
  7182  000EC0                     
  7183                           ;io.c: 32:         pin -=32;
  7184  000EC0  0EE0               	movlw	224
  7185  000EC2  2601               	addwf	digitalWrite@pin^0,f,c
  7186  000EC4  0EFF               	movlw	255
  7187  000EC6  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7188                           
  7189                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  7190  000EC8  5003               	movf	digitalWrite@value^0,w,c
  7191  000ECA  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7192  000ECC  B4D8               	btfsc	status,2,c
  7193  000ECE  EF6B  F007         	goto	u1871
  7194  000ED2  EF6D  F007         	goto	u1870
  7195  000ED6                     u1871:
  7196  000ED6  EF7D  F007         	goto	l2364
  7197  000EDA                     u1870:
  7198  000EDA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7199  000EDE  0E01               	movlw	1
  7200  000EE0  6E06               	movwf	(??_digitalWrite+1)^0,c
  7201  000EE2  2A05               	incf	??_digitalWrite^0,f,c
  7202  000EE4  EF76  F007         	goto	u1884
  7203  000EE8                     u1885:
  7204  000EE8  90D8               	bcf	status,0,c
  7205  000EEA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7206  000EEC                     u1884:
  7207  000EEC  2E05               	decfsz	??_digitalWrite^0,f,c
  7208  000EEE  EF74  F007         	goto	u1885
  7209  000EF2  5006               	movf	(??_digitalWrite+1)^0,w,c
  7210  000EF4  1284               	iorwf	132,f,c	;volatile
  7211  000EF6  EF8C  F007         	goto	l161
  7212  000EFA                     l2364:
  7213  000EFA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7214  000EFE  0E01               	movlw	1
  7215  000F00  6E06               	movwf	(??_digitalWrite+1)^0,c
  7216  000F02  2A05               	incf	??_digitalWrite^0,f,c
  7217  000F04  EF86  F007         	goto	u1894
  7218  000F08                     u1895:
  7219  000F08  90D8               	bcf	status,0,c
  7220  000F0A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7221  000F0C                     u1894:
  7222  000F0C  2E05               	decfsz	??_digitalWrite^0,f,c
  7223  000F0E  EF84  F007         	goto	u1895
  7224  000F12  5006               	movf	(??_digitalWrite+1)^0,w,c
  7225  000F14  0AFF               	xorlw	255
  7226  000F16  1684               	andwf	132,f,c	;volatile
  7227  000F18                     l161:
  7228  000F18  0012               	return		;funcret
  7229  000F1A                     __end_of_digitalWrite:
  7230                           	callstack 0
  7231                           
  7232 ;; *************** function _I2C_delay *****************
  7233 ;; Defined at:
  7234 ;;		line 22 in file "i2c.c"
  7235 ;; Parameters:    Size  Location     Type
  7236 ;;		None
  7237 ;; Auto vars:     Size  Location     Type
  7238 ;;  i               2    0        int 
  7239 ;;  v               2    0        volatile int 
  7240 ;; Return value:  Size  Location     Type
  7241 ;;                  1    wreg      void 
  7242 ;; Registers used:
  7243 ;;		None
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7249 ;;      Params:         0       0       0       0       0       0       0
  7250 ;;      Locals:         0       0       0       0       0       0       0
  7251 ;;      Temps:          0       0       0       0       0       0       0
  7252 ;;      Totals:         0       0       0       0       0       0       0
  7253 ;;Total ram usage:        0 bytes
  7254 ;; Hardware stack levels used: 1
  7255 ;; This function calls:
  7256 ;;		Nothing
  7257 ;; This function is called by:
  7258 ;;		_i2c_start
  7259 ;;		_i2c_stop
  7260 ;;		_i2c_write_bit
  7261 ;;		_i2c_read_bit
  7262 ;; This function uses a non-reentrant model
  7263 ;;
  7264                           
  7265                           	psect	text54
  7266  002BB0                     __ptext54:
  7267                           	callstack 0
  7268  002BB0                     _I2C_delay:
  7269                           	callstack 26
  7270  002BB0  0012               	return		;funcret
  7271  002BB2                     __end_of_I2C_delay:
  7272                           	callstack 0
  7273                           
  7274 ;; *************** function _bcd2dec *****************
  7275 ;; Defined at:
  7276 ;;		line 12 in file "ds1307.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;  value           2   32[COMRAM] int 
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;		None
  7281 ;; Return value:  Size  Location     Type
  7282 ;;                  2   32[COMRAM] int 
  7283 ;; Registers used:
  7284 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7285 ;; Tracked objects:
  7286 ;;		On entry : 0/0
  7287 ;;		On exit  : 0/0
  7288 ;;		Unchanged: 0/0
  7289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7290 ;;      Params:         2       0       0       0       0       0       0
  7291 ;;      Locals:         0       0       0       0       0       0       0
  7292 ;;      Temps:          2       0       0       0       0       0       0
  7293 ;;      Totals:         4       0       0       0       0       0       0
  7294 ;;Total ram usage:        4 bytes
  7295 ;; Hardware stack levels used: 1
  7296 ;; Hardware stack levels required when called: 1
  7297 ;; This function calls:
  7298 ;;		___awdiv
  7299 ;;		___wmul
  7300 ;; This function is called by:
  7301 ;;		_desligado
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           	psect	text55
  7306  002798                     __ptext55:
  7307                           	callstack 0
  7308  002798                     _bcd2dec:
  7309                           	callstack 28
  7310  002798                     
  7311                           ;ds1307.c: 13:  return ((value / 16 * 10) + (value % 16));
  7312  002798  0E0F               	movlw	15
  7313  00279A  1421               	andwf	bcd2dec@value^0,w,c
  7314  00279C  6E23               	movwf	??_bcd2dec^0,c
  7315  00279E  0E00               	movlw	0
  7316  0027A0  1422               	andwf	(bcd2dec@value+1)^0,w,c
  7317  0027A2  6E24               	movwf	(??_bcd2dec+1)^0,c
  7318  0027A4  0E00               	movlw	0
  7319  0027A6  6E16               	movwf	(___awdiv@divisor+1)^0,c
  7320  0027A8  0E10               	movlw	16
  7321  0027AA  6E15               	movwf	___awdiv@divisor^0,c
  7322  0027AC  C021  F013         	movff	bcd2dec@value,___awdiv@dividend
  7323  0027B0  C022  F014         	movff	bcd2dec@value+1,___awdiv@dividend+1
  7324  0027B4  EC0B  F00E         	call	___awdiv	;wreg free
  7325  0027B8  C013  F01B         	movff	?___awdiv,___wmul@multiplier
  7326  0027BC  C014  F01C         	movff	?___awdiv+1,___wmul@multiplier+1
  7327  0027C0  0E00               	movlw	0
  7328  0027C2  6E1E               	movwf	(___wmul@multiplicand+1)^0,c
  7329  0027C4  0E0A               	movlw	10
  7330  0027C6  6E1D               	movwf	___wmul@multiplicand^0,c
  7331  0027C8  EC6A  F015         	call	___wmul	;wreg free
  7332  0027CC  5023               	movf	??_bcd2dec^0,w,c
  7333  0027CE  241B               	addwf	?___wmul^0,w,c
  7334  0027D0  6E21               	movwf	?_bcd2dec^0,c
  7335  0027D2  5024               	movf	(??_bcd2dec+1)^0,w,c
  7336  0027D4  201C               	addwfc	(?___wmul+1)^0,w,c
  7337  0027D6  6E22               	movwf	(?_bcd2dec+1)^0,c
  7338  0027D8  0012               	return		;funcret
  7339  0027DA                     __end_of_bcd2dec:
  7340                           	callstack 0
  7341                           
  7342 ;; *************** function ___wmul *****************
  7343 ;; Defined at:
  7344 ;;		line 15 in file "D:\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;  multiplier      2   26[COMRAM] unsigned int 
  7347 ;;  multiplicand    2   28[COMRAM] unsigned int 
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;  product         2   30[COMRAM] unsigned int 
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  2   26[COMRAM] unsigned int 
  7352 ;; Registers used:
  7353 ;;		wreg, status,2, status,0, prodl, prodh
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7359 ;;      Params:         4       0       0       0       0       0       0
  7360 ;;      Locals:         2       0       0       0       0       0       0
  7361 ;;      Temps:          0       0       0       0       0       0       0
  7362 ;;      Totals:         6       0       0       0       0       0       0
  7363 ;;Total ram usage:        6 bytes
  7364 ;; Hardware stack levels used: 1
  7365 ;; This function calls:
  7366 ;;		Nothing
  7367 ;; This function is called by:
  7368 ;;		_bcd2dec
  7369 ;;		_pwmSet
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           	psect	text56
  7374  002AD4                     __ptext56:
  7375                           	callstack 0
  7376  002AD4                     ___wmul:
  7377                           	callstack 26
  7378  002AD4  501B               	movf	___wmul@multiplier^0,w,c
  7379  002AD6  021D               	mulwf	___wmul@multiplicand^0,c
  7380  002AD8  CFF3 F01F          	movff	prodl,___wmul@product
  7381  002ADC  CFF4 F020          	movff	prodh,___wmul@product+1
  7382  002AE0  501B               	movf	___wmul@multiplier^0,w,c
  7383  002AE2  021E               	mulwf	(___wmul@multiplicand+1)^0,c
  7384  002AE4  50F3               	movf	243,w,c
  7385  002AE6  2620               	addwf	(___wmul@product+1)^0,f,c
  7386  002AE8  501C               	movf	(___wmul@multiplier+1)^0,w,c
  7387  002AEA  021D               	mulwf	___wmul@multiplicand^0,c
  7388  002AEC  50F3               	movf	243,w,c
  7389  002AEE  2620               	addwf	(___wmul@product+1)^0,f,c
  7390  002AF0  C01F  F01B         	movff	___wmul@product,?___wmul
  7391  002AF4  C020  F01C         	movff	___wmul@product+1,?___wmul+1
  7392  002AF8  0012               	return		;funcret
  7393  002AFA                     __end_of___wmul:
  7394                           	callstack 0
  7395                           
  7396 ;; *************** function _atualizaSSD *****************
  7397 ;; Defined at:
  7398 ;;		line 167 in file "main.c"
  7399 ;; Parameters:    Size  Location     Type
  7400 ;;		None
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;		None
  7403 ;; Return value:  Size  Location     Type
  7404 ;;                  1    wreg      void 
  7405 ;; Registers used:
  7406 ;;		wreg, status,2, status,0, cstack
  7407 ;; Tracked objects:
  7408 ;;		On entry : 0/0
  7409 ;;		On exit  : 0/0
  7410 ;;		Unchanged: 0/0
  7411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7412 ;;      Params:         0       0       0       0       0       0       0
  7413 ;;      Locals:         0       0       0       0       0       0       0
  7414 ;;      Temps:          0       0       0       0       0       0       0
  7415 ;;      Totals:         0       0       0       0       0       0       0
  7416 ;;Total ram usage:        0 bytes
  7417 ;; Hardware stack levels used: 1
  7418 ;; Hardware stack levels required when called: 1
  7419 ;; This function calls:
  7420 ;;		___awdiv
  7421 ;;		___awmod
  7422 ;;		_ssdDigit
  7423 ;; This function is called by:
  7424 ;;		_main
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428                           	psect	text57
  7429  001FA4                     __ptext57:
  7430                           	callstack 0
  7431  001FA4                     _atualizaSSD:
  7432                           	callstack 29
  7433  001FA4                     
  7434                           ;main.c: 168:     ssdDigit(((min/10) %10), 0);
  7435  001FA4  0E00               	movlw	0
  7436  001FA6  6E2B               	movwf	ssdDigit@pos^0,c
  7437  001FA8  0E00               	movlw	0
  7438  001FAA  6E16               	movwf	(___awdiv@divisor+1)^0,c
  7439  001FAC  0E0A               	movlw	10
  7440  001FAE  6E15               	movwf	___awdiv@divisor^0,c
  7441  001FB0  C03A  F013         	movff	_min,___awdiv@dividend
  7442  001FB4  C03B  F014         	movff	_min+1,___awdiv@dividend+1
  7443  001FB8  EC0B  F00E         	call	___awdiv	;wreg free
  7444  001FBC  C013  F025         	movff	?___awdiv,___awmod@dividend
  7445  001FC0  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  7446  001FC4  0E00               	movlw	0
  7447  001FC6  6E28               	movwf	(___awmod@divisor+1)^0,c
  7448  001FC8  0E0A               	movlw	10
  7449  001FCA  6E27               	movwf	___awmod@divisor^0,c
  7450  001FCC  EC28  F00F         	call	___awmod	;wreg free
  7451  001FD0  5025               	movf	?___awmod^0,w,c
  7452  001FD2  EC46  F012         	call	_ssdDigit
  7453                           
  7454                           ;main.c: 169:     ssdDigit(((min/1) %10), 1);
  7455  001FD6  0E01               	movlw	1
  7456  001FD8  6E2B               	movwf	ssdDigit@pos^0,c
  7457  001FDA  C03A  F025         	movff	_min,___awmod@dividend
  7458  001FDE  C03B  F026         	movff	_min+1,___awmod@dividend+1
  7459  001FE2  0E00               	movlw	0
  7460  001FE4  6E28               	movwf	(___awmod@divisor+1)^0,c
  7461  001FE6  0E0A               	movlw	10
  7462  001FE8  6E27               	movwf	___awmod@divisor^0,c
  7463  001FEA  EC28  F00F         	call	___awmod	;wreg free
  7464  001FEE  5025               	movf	?___awmod^0,w,c
  7465  001FF0  EC46  F012         	call	_ssdDigit
  7466                           
  7467                           ;main.c: 170:     ssdDigit(((seg/10) %10), 2);
  7468  001FF4  0E02               	movlw	2
  7469  001FF6  6E2B               	movwf	ssdDigit@pos^0,c
  7470  001FF8  0E00               	movlw	0
  7471  001FFA  6E16               	movwf	(___awdiv@divisor+1)^0,c
  7472  001FFC  0E0A               	movlw	10
  7473  001FFE  6E15               	movwf	___awdiv@divisor^0,c
  7474  002000  C038  F013         	movff	_seg,___awdiv@dividend
  7475  002004  C039  F014         	movff	_seg+1,___awdiv@dividend+1
  7476  002008  EC0B  F00E         	call	___awdiv	;wreg free
  7477  00200C  C013  F025         	movff	?___awdiv,___awmod@dividend
  7478  002010  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  7479  002014  0E00               	movlw	0
  7480  002016  6E28               	movwf	(___awmod@divisor+1)^0,c
  7481  002018  0E0A               	movlw	10
  7482  00201A  6E27               	movwf	___awmod@divisor^0,c
  7483  00201C  EC28  F00F         	call	___awmod	;wreg free
  7484  002020  5025               	movf	?___awmod^0,w,c
  7485  002022  EC46  F012         	call	_ssdDigit
  7486                           
  7487                           ;main.c: 171:     ssdDigit(((seg/1) %10), 3);
  7488  002026  0E03               	movlw	3
  7489  002028  6E2B               	movwf	ssdDigit@pos^0,c
  7490  00202A  C038  F025         	movff	_seg,___awmod@dividend
  7491  00202E  C039  F026         	movff	_seg+1,___awmod@dividend+1
  7492  002032  0E00               	movlw	0
  7493  002034  6E28               	movwf	(___awmod@divisor+1)^0,c
  7494  002036  0E0A               	movlw	10
  7495  002038  6E27               	movwf	___awmod@divisor^0,c
  7496  00203A  EC28  F00F         	call	___awmod	;wreg free
  7497  00203E  5025               	movf	?___awmod^0,w,c
  7498  002040  EC46  F012         	call	_ssdDigit
  7499  002044  0012               	return		;funcret
  7500  002046                     __end_of_atualizaSSD:
  7501                           	callstack 0
  7502                           
  7503 ;; *************** function _ssdDigit *****************
  7504 ;; Defined at:
  7505 ;;		line 34 in file "ssd.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;  val             1    wreg     unsigned char 
  7508 ;;  pos             1   42[COMRAM] unsigned char 
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;  val             1   43[COMRAM] unsigned char 
  7511 ;; Return value:  Size  Location     Type
  7512 ;;                  1    wreg      void 
  7513 ;; Registers used:
  7514 ;;		wreg, status,2, status,0
  7515 ;; Tracked objects:
  7516 ;;		On entry : 0/0
  7517 ;;		On exit  : 0/0
  7518 ;;		Unchanged: 0/0
  7519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7520 ;;      Params:         1       0       0       0       0       0       0
  7521 ;;      Locals:         1       0       0       0       0       0       0
  7522 ;;      Temps:          0       0       0       0       0       0       0
  7523 ;;      Totals:         2       0       0       0       0       0       0
  7524 ;;Total ram usage:        2 bytes
  7525 ;; Hardware stack levels used: 1
  7526 ;; This function calls:
  7527 ;;		Nothing
  7528 ;; This function is called by:
  7529 ;;		_atualizaSSD
  7530 ;; This function uses a non-reentrant model
  7531 ;;
  7532                           
  7533                           	psect	text58
  7534  00248C                     __ptext58:
  7535                           	callstack 0
  7536  00248C                     _ssdDigit:
  7537                           	callstack 29
  7538                           
  7539                           ;incstack = 0
  7540                           ;ssdDigit@val stored from wreg
  7541  00248C  6E2C               	movwf	ssdDigit@val^0,c
  7542  00248E                     
  7543                           ;ssd.c: 35:     if (pos == 0) {
  7544  00248E  502B               	movf	ssdDigit@pos^0,w,c
  7545  002490  A4D8               	btfss	status,2,c
  7546  002492  EF4D  F012         	goto	u2791
  7547  002496  EF4F  F012         	goto	u2790
  7548  00249A                     u2791:
  7549  00249A  EF51  F012         	goto	l2910
  7550  00249E                     u2790:
  7551  00249E                     
  7552                           ;ssd.c: 36:         v0 = val;
  7553  00249E  C02C  F04A         	movff	ssdDigit@val,_v0
  7554  0024A2                     l2910:
  7555                           
  7556                           ;ssd.c: 38:     if (pos == 1) {
  7557  0024A2  042B               	decf	ssdDigit@pos^0,w,c
  7558  0024A4  A4D8               	btfss	status,2,c
  7559  0024A6  EF57  F012         	goto	u2801
  7560  0024AA  EF59  F012         	goto	u2800
  7561  0024AE                     u2801:
  7562  0024AE  EF5B  F012         	goto	l2914
  7563  0024B2                     u2800:
  7564  0024B2                     
  7565                           ;ssd.c: 39:         v1 = val;
  7566  0024B2  C02C  F049         	movff	ssdDigit@val,_v1
  7567  0024B6                     l2914:
  7568                           
  7569                           ;ssd.c: 41:     if (pos == 2) {
  7570  0024B6  0E02               	movlw	2
  7571  0024B8  182B               	xorwf	ssdDigit@pos^0,w,c
  7572  0024BA  A4D8               	btfss	status,2,c
  7573  0024BC  EF62  F012         	goto	u2811
  7574  0024C0  EF64  F012         	goto	u2810
  7575  0024C4                     u2811:
  7576  0024C4  EF66  F012         	goto	l2918
  7577  0024C8                     u2810:
  7578  0024C8                     
  7579                           ;ssd.c: 42:         v2 = val;
  7580  0024C8  C02C  F048         	movff	ssdDigit@val,_v2
  7581  0024CC                     l2918:
  7582                           
  7583                           ;ssd.c: 44:     if (pos == 3) {
  7584  0024CC  0E03               	movlw	3
  7585  0024CE  182B               	xorwf	ssdDigit@pos^0,w,c
  7586  0024D0  A4D8               	btfss	status,2,c
  7587  0024D2  EF6D  F012         	goto	u2821
  7588  0024D6  EF6F  F012         	goto	u2820
  7589  0024DA                     u2821:
  7590  0024DA  EF71  F012         	goto	l334
  7591  0024DE                     u2820:
  7592  0024DE                     
  7593                           ;ssd.c: 45:         v3 = val;
  7594  0024DE  C02C  F047         	movff	ssdDigit@val,_v3
  7595  0024E2                     l334:
  7596  0024E2  0012               	return		;funcret
  7597  0024E4                     __end_of_ssdDigit:
  7598                           	callstack 0
  7599                           
  7600 ;; *************** function ___awmod *****************
  7601 ;; Defined at:
  7602 ;;		line 7 in file "D:\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7603 ;; Parameters:    Size  Location     Type
  7604 ;;  dividend        2   36[COMRAM] int 
  7605 ;;  divisor         2   38[COMRAM] int 
  7606 ;; Auto vars:     Size  Location     Type
  7607 ;;  sign            1   41[COMRAM] unsigned char 
  7608 ;;  counter         1   40[COMRAM] unsigned char 
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  2   36[COMRAM] int 
  7611 ;; Registers used:
  7612 ;;		wreg, status,2, status,0
  7613 ;; Tracked objects:
  7614 ;;		On entry : 0/0
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7618 ;;      Params:         4       0       0       0       0       0       0
  7619 ;;      Locals:         2       0       0       0       0       0       0
  7620 ;;      Temps:          0       0       0       0       0       0       0
  7621 ;;      Totals:         6       0       0       0       0       0       0
  7622 ;;Total ram usage:        6 bytes
  7623 ;; Hardware stack levels used: 1
  7624 ;; This function calls:
  7625 ;;		Nothing
  7626 ;; This function is called by:
  7627 ;;		_desligado
  7628 ;;		_atualizaSSD
  7629 ;;		_dec2bcd
  7630 ;;		_lcdNumber
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           	psect	text59
  7635  001E50                     __ptext59:
  7636                           	callstack 0
  7637  001E50                     ___awmod:
  7638                           	callstack 29
  7639  001E50  0E00               	movlw	0
  7640  001E52  6E2A               	movwf	___awmod@sign^0,c
  7641  001E54  BE26               	btfsc	(___awmod@dividend+1)^0,7,c
  7642  001E56  EF31  F00F         	goto	u2870
  7643  001E5A  EF2F  F00F         	goto	u2871
  7644  001E5E                     u2871:
  7645  001E5E  EF37  F00F         	goto	l2976
  7646  001E62                     u2870:
  7647  001E62  6C25               	negf	___awmod@dividend^0,c
  7648  001E64  1E26               	comf	(___awmod@dividend+1)^0,f,c
  7649  001E66  B0D8               	btfsc	status,0,c
  7650  001E68  2A26               	incf	(___awmod@dividend+1)^0,f,c
  7651  001E6A  0E01               	movlw	1
  7652  001E6C  6E2A               	movwf	___awmod@sign^0,c
  7653  001E6E                     l2976:
  7654  001E6E  BE28               	btfsc	(___awmod@divisor+1)^0,7,c
  7655  001E70  EF3E  F00F         	goto	u2880
  7656  001E74  EF3C  F00F         	goto	u2881
  7657  001E78                     u2881:
  7658  001E78  EF42  F00F         	goto	l2980
  7659  001E7C                     u2880:
  7660  001E7C  6C27               	negf	___awmod@divisor^0,c
  7661  001E7E  1E28               	comf	(___awmod@divisor+1)^0,f,c
  7662  001E80  B0D8               	btfsc	status,0,c
  7663  001E82  2A28               	incf	(___awmod@divisor+1)^0,f,c
  7664  001E84                     l2980:
  7665  001E84  5027               	movf	___awmod@divisor^0,w,c
  7666  001E86  1028               	iorwf	(___awmod@divisor+1)^0,w,c
  7667  001E88  B4D8               	btfsc	status,2,c
  7668  001E8A  EF49  F00F         	goto	u2891
  7669  001E8E  EF4B  F00F         	goto	u2890
  7670  001E92                     u2891:
  7671  001E92  EF6F  F00F         	goto	l2996
  7672  001E96                     u2890:
  7673  001E96  0E01               	movlw	1
  7674  001E98  6E29               	movwf	___awmod@counter^0,c
  7675  001E9A  EF53  F00F         	goto	l2986
  7676  001E9E                     l2984:
  7677  001E9E  90D8               	bcf	status,0,c
  7678  001EA0  3627               	rlcf	___awmod@divisor^0,f,c
  7679  001EA2  3628               	rlcf	(___awmod@divisor+1)^0,f,c
  7680  001EA4  2A29               	incf	___awmod@counter^0,f,c
  7681  001EA6                     l2986:
  7682  001EA6  AE28               	btfss	(___awmod@divisor+1)^0,7,c
  7683  001EA8  EF58  F00F         	goto	u2901
  7684  001EAC  EF5A  F00F         	goto	u2900
  7685  001EB0                     u2901:
  7686  001EB0  EF4F  F00F         	goto	l2984
  7687  001EB4                     u2900:
  7688  001EB4                     l2988:
  7689  001EB4  5027               	movf	___awmod@divisor^0,w,c
  7690  001EB6  5C25               	subwf	___awmod@dividend^0,w,c
  7691  001EB8  5028               	movf	(___awmod@divisor+1)^0,w,c
  7692  001EBA  5826               	subwfb	(___awmod@dividend+1)^0,w,c
  7693  001EBC  A0D8               	btfss	status,0,c
  7694  001EBE  EF63  F00F         	goto	u2911
  7695  001EC2  EF65  F00F         	goto	u2910
  7696  001EC6                     u2911:
  7697  001EC6  EF69  F00F         	goto	l2992
  7698  001ECA                     u2910:
  7699  001ECA  5027               	movf	___awmod@divisor^0,w,c
  7700  001ECC  5E25               	subwf	___awmod@dividend^0,f,c
  7701  001ECE  5028               	movf	(___awmod@divisor+1)^0,w,c
  7702  001ED0  5A26               	subwfb	(___awmod@dividend+1)^0,f,c
  7703  001ED2                     l2992:
  7704  001ED2  90D8               	bcf	status,0,c
  7705  001ED4  3228               	rrcf	(___awmod@divisor+1)^0,f,c
  7706  001ED6  3227               	rrcf	___awmod@divisor^0,f,c
  7707  001ED8  2E29               	decfsz	___awmod@counter^0,f,c
  7708  001EDA  EF5A  F00F         	goto	l2988
  7709  001EDE                     l2996:
  7710  001EDE  502A               	movf	___awmod@sign^0,w,c
  7711  001EE0  B4D8               	btfsc	status,2,c
  7712  001EE2  EF75  F00F         	goto	u2921
  7713  001EE6  EF77  F00F         	goto	u2920
  7714  001EEA                     u2921:
  7715  001EEA  EF7B  F00F         	goto	l3000
  7716  001EEE                     u2920:
  7717  001EEE  6C25               	negf	___awmod@dividend^0,c
  7718  001EF0  1E26               	comf	(___awmod@dividend+1)^0,f,c
  7719  001EF2  B0D8               	btfsc	status,0,c
  7720  001EF4  2A26               	incf	(___awmod@dividend+1)^0,f,c
  7721  001EF6                     l3000:
  7722  001EF6  C025  F025         	movff	___awmod@dividend,?___awmod
  7723  001EFA  C026  F026         	movff	___awmod@dividend+1,?___awmod+1
  7724  001EFE  0012               	return		;funcret
  7725  001F00                     __end_of___awmod:
  7726                           	callstack 0
  7727                           
  7728 ;; *************** function ___awdiv *****************
  7729 ;; Defined at:
  7730 ;;		line 7 in file "D:\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7731 ;; Parameters:    Size  Location     Type
  7732 ;;  dividend        2   18[COMRAM] int 
  7733 ;;  divisor         2   20[COMRAM] int 
  7734 ;; Auto vars:     Size  Location     Type
  7735 ;;  quotient        2   24[COMRAM] int 
  7736 ;;  sign            1   23[COMRAM] unsigned char 
  7737 ;;  counter         1   22[COMRAM] unsigned char 
  7738 ;; Return value:  Size  Location     Type
  7739 ;;                  2   18[COMRAM] int 
  7740 ;; Registers used:
  7741 ;;		wreg, status,2, status,0
  7742 ;; Tracked objects:
  7743 ;;		On entry : 0/0
  7744 ;;		On exit  : 0/0
  7745 ;;		Unchanged: 0/0
  7746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7747 ;;      Params:         4       0       0       0       0       0       0
  7748 ;;      Locals:         4       0       0       0       0       0       0
  7749 ;;      Temps:          0       0       0       0       0       0       0
  7750 ;;      Totals:         8       0       0       0       0       0       0
  7751 ;;Total ram usage:        8 bytes
  7752 ;; Hardware stack levels used: 1
  7753 ;; This function calls:
  7754 ;;		Nothing
  7755 ;; This function is called by:
  7756 ;;		_bcd2dec
  7757 ;;		_desligado
  7758 ;;		_atualizaSSD
  7759 ;;		_dec2bcd
  7760 ;;		_lcdNumber
  7761 ;; This function uses a non-reentrant model
  7762 ;;
  7763                           
  7764                           	psect	text60
  7765  001C16                     __ptext60:
  7766                           	callstack 0
  7767  001C16                     ___awdiv:
  7768                           	callstack 28
  7769  001C16  0E00               	movlw	0
  7770  001C18  6E18               	movwf	___awdiv@sign^0,c
  7771  001C1A  BE16               	btfsc	(___awdiv@divisor+1)^0,7,c
  7772  001C1C  EF14  F00E         	goto	u2600
  7773  001C20  EF12  F00E         	goto	u2601
  7774  001C24                     u2601:
  7775  001C24  EF1A  F00E         	goto	l2796
  7776  001C28                     u2600:
  7777  001C28  6C15               	negf	___awdiv@divisor^0,c
  7778  001C2A  1E16               	comf	(___awdiv@divisor+1)^0,f,c
  7779  001C2C  B0D8               	btfsc	status,0,c
  7780  001C2E  2A16               	incf	(___awdiv@divisor+1)^0,f,c
  7781  001C30  0E01               	movlw	1
  7782  001C32  6E18               	movwf	___awdiv@sign^0,c
  7783  001C34                     l2796:
  7784  001C34  BE14               	btfsc	(___awdiv@dividend+1)^0,7,c
  7785  001C36  EF21  F00E         	goto	u2610
  7786  001C3A  EF1F  F00E         	goto	u2611
  7787  001C3E                     u2611:
  7788  001C3E  EF27  F00E         	goto	l2802
  7789  001C42                     u2610:
  7790  001C42  6C13               	negf	___awdiv@dividend^0,c
  7791  001C44  1E14               	comf	(___awdiv@dividend+1)^0,f,c
  7792  001C46  B0D8               	btfsc	status,0,c
  7793  001C48  2A14               	incf	(___awdiv@dividend+1)^0,f,c
  7794  001C4A  0E01               	movlw	1
  7795  001C4C  1A18               	xorwf	___awdiv@sign^0,f,c
  7796  001C4E                     l2802:
  7797  001C4E  0E00               	movlw	0
  7798  001C50  6E1A               	movwf	(___awdiv@quotient+1)^0,c
  7799  001C52  0E00               	movlw	0
  7800  001C54  6E19               	movwf	___awdiv@quotient^0,c
  7801  001C56  5015               	movf	___awdiv@divisor^0,w,c
  7802  001C58  1016               	iorwf	(___awdiv@divisor+1)^0,w,c
  7803  001C5A  B4D8               	btfsc	status,2,c
  7804  001C5C  EF32  F00E         	goto	u2621
  7805  001C60  EF34  F00E         	goto	u2620
  7806  001C64                     u2621:
  7807  001C64  EF5C  F00E         	goto	l2824
  7808  001C68                     u2620:
  7809  001C68  0E01               	movlw	1
  7810  001C6A  6E17               	movwf	___awdiv@counter^0,c
  7811  001C6C  EF3C  F00E         	goto	l2810
  7812  001C70                     l2808:
  7813  001C70  90D8               	bcf	status,0,c
  7814  001C72  3615               	rlcf	___awdiv@divisor^0,f,c
  7815  001C74  3616               	rlcf	(___awdiv@divisor+1)^0,f,c
  7816  001C76  2A17               	incf	___awdiv@counter^0,f,c
  7817  001C78                     l2810:
  7818  001C78  AE16               	btfss	(___awdiv@divisor+1)^0,7,c
  7819  001C7A  EF41  F00E         	goto	u2631
  7820  001C7E  EF43  F00E         	goto	u2630
  7821  001C82                     u2631:
  7822  001C82  EF38  F00E         	goto	l2808
  7823  001C86                     u2630:
  7824  001C86                     l2812:
  7825  001C86  90D8               	bcf	status,0,c
  7826  001C88  3619               	rlcf	___awdiv@quotient^0,f,c
  7827  001C8A  361A               	rlcf	(___awdiv@quotient+1)^0,f,c
  7828  001C8C  5015               	movf	___awdiv@divisor^0,w,c
  7829  001C8E  5C13               	subwf	___awdiv@dividend^0,w,c
  7830  001C90  5016               	movf	(___awdiv@divisor+1)^0,w,c
  7831  001C92  5814               	subwfb	(___awdiv@dividend+1)^0,w,c
  7832  001C94  A0D8               	btfss	status,0,c
  7833  001C96  EF4F  F00E         	goto	u2641
  7834  001C9A  EF51  F00E         	goto	u2640
  7835  001C9E                     u2641:
  7836  001C9E  EF56  F00E         	goto	l2820
  7837  001CA2                     u2640:
  7838  001CA2  5015               	movf	___awdiv@divisor^0,w,c
  7839  001CA4  5E13               	subwf	___awdiv@dividend^0,f,c
  7840  001CA6  5016               	movf	(___awdiv@divisor+1)^0,w,c
  7841  001CA8  5A14               	subwfb	(___awdiv@dividend+1)^0,f,c
  7842  001CAA  8019               	bsf	___awdiv@quotient^0,0,c
  7843  001CAC                     l2820:
  7844  001CAC  90D8               	bcf	status,0,c
  7845  001CAE  3216               	rrcf	(___awdiv@divisor+1)^0,f,c
  7846  001CB0  3215               	rrcf	___awdiv@divisor^0,f,c
  7847  001CB2  2E17               	decfsz	___awdiv@counter^0,f,c
  7848  001CB4  EF43  F00E         	goto	l2812
  7849  001CB8                     l2824:
  7850  001CB8  5018               	movf	___awdiv@sign^0,w,c
  7851  001CBA  B4D8               	btfsc	status,2,c
  7852  001CBC  EF62  F00E         	goto	u2651
  7853  001CC0  EF64  F00E         	goto	u2650
  7854  001CC4                     u2651:
  7855  001CC4  EF68  F00E         	goto	l2828
  7856  001CC8                     u2650:
  7857  001CC8  6C19               	negf	___awdiv@quotient^0,c
  7858  001CCA  1E1A               	comf	(___awdiv@quotient+1)^0,f,c
  7859  001CCC  B0D8               	btfsc	status,0,c
  7860  001CCE  2A1A               	incf	(___awdiv@quotient+1)^0,f,c
  7861  001CD0                     l2828:
  7862  001CD0  C019  F013         	movff	___awdiv@quotient,?___awdiv
  7863  001CD4  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
  7864  001CD8  0012               	return		;funcret
  7865  001CDA                     __end_of___awdiv:
  7866                           	callstack 0
  7867                           
  7868 ;; *************** function _adcInit *****************
  7869 ;; Defined at:
  7870 ;;		line 25 in file "adc.c"
  7871 ;; Parameters:    Size  Location     Type
  7872 ;;		None
  7873 ;; Auto vars:     Size  Location     Type
  7874 ;;		None
  7875 ;; Return value:  Size  Location     Type
  7876 ;;                  1    wreg      void 
  7877 ;; Registers used:
  7878 ;;		wreg, status,2, status,0, cstack
  7879 ;; Tracked objects:
  7880 ;;		On entry : 0/0
  7881 ;;		On exit  : 0/0
  7882 ;;		Unchanged: 0/0
  7883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7884 ;;      Params:         0       0       0       0       0       0       0
  7885 ;;      Locals:         0       0       0       0       0       0       0
  7886 ;;      Temps:          0       0       0       0       0       0       0
  7887 ;;      Totals:         0       0       0       0       0       0       0
  7888 ;;Total ram usage:        0 bytes
  7889 ;; Hardware stack levels used: 1
  7890 ;; Hardware stack levels required when called: 1
  7891 ;; This function calls:
  7892 ;;		_pinMode
  7893 ;; This function is called by:
  7894 ;;		_main
  7895 ;; This function uses a non-reentrant model
  7896 ;;
  7897                           
  7898                           	psect	text61
  7899  002682                     __ptext61:
  7900                           	callstack 0
  7901  002682                     _adcInit:
  7902                           	callstack 29
  7903  002682                     
  7904                           ;adc.c: 27:     pinMode(PIN_A0, 1);
  7905  002682  0E00               	movlw	0
  7906  002684  6E02               	movwf	(pinMode@pin+1)^0,c
  7907  002686  0E00               	movlw	0
  7908  002688  6E01               	movwf	pinMode@pin^0,c
  7909  00268A  0E00               	movlw	0
  7910  00268C  6E04               	movwf	(pinMode@type+1)^0,c
  7911  00268E  0E01               	movlw	1
  7912  002690  6E03               	movwf	pinMode@type^0,c
  7913  002692  EC8D  F007         	call	_pinMode	;wreg free
  7914                           
  7915                           ;adc.c: 28:     pinMode(PIN_A1, 1);
  7916  002696  0E00               	movlw	0
  7917  002698  6E02               	movwf	(pinMode@pin+1)^0,c
  7918  00269A  0E01               	movlw	1
  7919  00269C  6E01               	movwf	pinMode@pin^0,c
  7920  00269E  0E00               	movlw	0
  7921  0026A0  6E04               	movwf	(pinMode@type+1)^0,c
  7922  0026A2  0E01               	movlw	1
  7923  0026A4  6E03               	movwf	pinMode@type^0,c
  7924  0026A6  EC8D  F007         	call	_pinMode	;wreg free
  7925                           
  7926                           ;adc.c: 29:     pinMode(PIN_A2, 1);
  7927  0026AA  0E00               	movlw	0
  7928  0026AC  6E02               	movwf	(pinMode@pin+1)^0,c
  7929  0026AE  0E02               	movlw	2
  7930  0026B0  6E01               	movwf	pinMode@pin^0,c
  7931  0026B2  0E00               	movlw	0
  7932  0026B4  6E04               	movwf	(pinMode@type+1)^0,c
  7933  0026B6  0E01               	movlw	1
  7934  0026B8  6E03               	movwf	pinMode@type^0,c
  7935  0026BA  EC8D  F007         	call	_pinMode	;wreg free
  7936  0026BE                     
  7937                           ;adc.c: 31:     ((ADCON0) |= (1<<(0)));
  7938  0026BE  80C2               	bsf	194,0,c	;volatile
  7939  0026C0                     
  7940                           ;adc.c: 33:     ADCON1 = 0b00001100;
  7941  0026C0  0E0C               	movlw	12
  7942  0026C2  6EC1               	movwf	193,c	;volatile
  7943  0026C4                     
  7944                           ;adc.c: 34:     ADCON2 = 0b10101010;
  7945  0026C4  0EAA               	movlw	170
  7946  0026C6  6EC0               	movwf	192,c	;volatile
  7947  0026C8  0012               	return		;funcret
  7948  0026CA                     __end_of_adcInit:
  7949                           	callstack 0
  7950                           
  7951 ;; *************** function _pinMode *****************
  7952 ;; Defined at:
  7953 ;;		line 54 in file "io.c"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;  pin             2    0[COMRAM] int 
  7956 ;;  type            2    2[COMRAM] int 
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;		None
  7959 ;; Return value:  Size  Location     Type
  7960 ;;                  1    wreg      void 
  7961 ;; Registers used:
  7962 ;;		wreg, status,2, status,0
  7963 ;; Tracked objects:
  7964 ;;		On entry : 0/0
  7965 ;;		On exit  : 0/0
  7966 ;;		Unchanged: 0/0
  7967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7968 ;;      Params:         4       0       0       0       0       0       0
  7969 ;;      Locals:         0       0       0       0       0       0       0
  7970 ;;      Temps:          2       0       0       0       0       0       0
  7971 ;;      Totals:         6       0       0       0       0       0       0
  7972 ;;Total ram usage:        6 bytes
  7973 ;; Hardware stack levels used: 1
  7974 ;; This function calls:
  7975 ;;		Nothing
  7976 ;; This function is called by:
  7977 ;;		_adcInit
  7978 ;;		_read_SCL
  7979 ;;		_read_SDA
  7980 ;;		_clear_SCL
  7981 ;;		_clear_SDA
  7982 ;;		_kpInit
  7983 ;;		_lcdInit
  7984 ;;		_soInit
  7985 ;;		_ssdInit
  7986 ;;		_i2cInit
  7987 ;; This function uses a non-reentrant model
  7988 ;;
  7989                           
  7990                           	psect	text62
  7991  000F1A                     __ptext62:
  7992                           	callstack 0
  7993  000F1A                     _pinMode:
  7994                           	callstack 28
  7995  000F1A                     
  7996                           ;io.c: 56:     if(pin <8){
  7997  000F1A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  7998  000F1C  EF9B  F007         	goto	u1900
  7999  000F20  5002               	movf	(pinMode@pin+1)^0,w,c
  8000  000F22  E107               	bnz	u1901
  8001  000F24  0E08               	movlw	8
  8002  000F26  5C01               	subwf	pinMode@pin^0,w,c
  8003  000F28  B0D8               	btfsc	status,0,c
  8004  000F2A  EF99  F007         	goto	u1901
  8005  000F2E  EF9B  F007         	goto	u1900
  8006  000F32                     u1901:
  8007  000F32  EFC5  F007         	goto	l2378
  8008  000F36                     u1900:
  8009  000F36                     
  8010                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  8011  000F36  5003               	movf	pinMode@type^0,w,c
  8012  000F38  1004               	iorwf	(pinMode@type+1)^0,w,c
  8013  000F3A  B4D8               	btfsc	status,2,c
  8014  000F3C  EFA2  F007         	goto	u1911
  8015  000F40  EFA4  F007         	goto	u1910
  8016  000F44                     u1911:
  8017  000F44  EFB4  F007         	goto	l2376
  8018  000F48                     u1910:
  8019  000F48  C001  F005         	movff	pinMode@pin,??_pinMode
  8020  000F4C  0E01               	movlw	1
  8021  000F4E  6E06               	movwf	(??_pinMode+1)^0,c
  8022  000F50  2A05               	incf	??_pinMode^0,f,c
  8023  000F52  EFAD  F007         	goto	u1924
  8024  000F56                     u1925:
  8025  000F56  90D8               	bcf	status,0,c
  8026  000F58  3606               	rlcf	(??_pinMode+1)^0,f,c
  8027  000F5A                     u1924:
  8028  000F5A  2E05               	decfsz	??_pinMode^0,f,c
  8029  000F5C  EFAB  F007         	goto	u1925
  8030  000F60  5006               	movf	(??_pinMode+1)^0,w,c
  8031  000F62  1292               	iorwf	146,f,c	;volatile
  8032  000F64  EFB3  F008         	goto	l195
  8033  000F68                     l2376:
  8034  000F68  C001  F005         	movff	pinMode@pin,??_pinMode
  8035  000F6C  0E01               	movlw	1
  8036  000F6E  6E06               	movwf	(??_pinMode+1)^0,c
  8037  000F70  2A05               	incf	??_pinMode^0,f,c
  8038  000F72  EFBD  F007         	goto	u1934
  8039  000F76                     u1935:
  8040  000F76  90D8               	bcf	status,0,c
  8041  000F78  3606               	rlcf	(??_pinMode+1)^0,f,c
  8042  000F7A                     u1934:
  8043  000F7A  2E05               	decfsz	??_pinMode^0,f,c
  8044  000F7C  EFBB  F007         	goto	u1935
  8045  000F80  5006               	movf	(??_pinMode+1)^0,w,c
  8046  000F82  0AFF               	xorlw	255
  8047  000F84  1692               	andwf	146,f,c	;volatile
  8048  000F86  EFB3  F008         	goto	l195
  8049  000F8A                     l2378:
  8050  000F8A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  8051  000F8C  EFD3  F007         	goto	u1940
  8052  000F90  5002               	movf	(pinMode@pin+1)^0,w,c
  8053  000F92  E107               	bnz	u1941
  8054  000F94  0E10               	movlw	16
  8055  000F96  5C01               	subwf	pinMode@pin^0,w,c
  8056  000F98  B0D8               	btfsc	status,0,c
  8057  000F9A  EFD1  F007         	goto	u1941
  8058  000F9E  EFD3  F007         	goto	u1940
  8059  000FA2                     u1941:
  8060  000FA2  EF01  F008         	goto	l2386
  8061  000FA6                     u1940:
  8062  000FA6                     
  8063                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  8064  000FA6  5003               	movf	pinMode@type^0,w,c
  8065  000FA8  1004               	iorwf	(pinMode@type+1)^0,w,c
  8066  000FAA  B4D8               	btfsc	status,2,c
  8067  000FAC  EFDA  F007         	goto	u1951
  8068  000FB0  EFDC  F007         	goto	u1950
  8069  000FB4                     u1951:
  8070  000FB4  EFEE  F007         	goto	l2384
  8071  000FB8                     u1950:
  8072  000FB8  C001  F005         	movff	pinMode@pin,??_pinMode
  8073  000FBC  0EF8               	movlw	-8
  8074  000FBE  2605               	addwf	??_pinMode^0,f,c
  8075  000FC0  0E01               	movlw	1
  8076  000FC2  6E06               	movwf	(??_pinMode+1)^0,c
  8077  000FC4  2A05               	incf	??_pinMode^0,f,c
  8078  000FC6  EFE7  F007         	goto	u1964
  8079  000FCA                     u1965:
  8080  000FCA  90D8               	bcf	status,0,c
  8081  000FCC  3606               	rlcf	(??_pinMode+1)^0,f,c
  8082  000FCE                     u1964:
  8083  000FCE  2E05               	decfsz	??_pinMode^0,f,c
  8084  000FD0  EFE5  F007         	goto	u1965
  8085  000FD4  5006               	movf	(??_pinMode+1)^0,w,c
  8086  000FD6  1293               	iorwf	147,f,c	;volatile
  8087  000FD8  EFB3  F008         	goto	l195
  8088  000FDC                     l2384:
  8089  000FDC  C001  F005         	movff	pinMode@pin,??_pinMode
  8090  000FE0  0EF8               	movlw	-8
  8091  000FE2  2605               	addwf	??_pinMode^0,f,c
  8092  000FE4  0E01               	movlw	1
  8093  000FE6  6E06               	movwf	(??_pinMode+1)^0,c
  8094  000FE8  2A05               	incf	??_pinMode^0,f,c
  8095  000FEA  EFF9  F007         	goto	u1974
  8096  000FEE                     u1975:
  8097  000FEE  90D8               	bcf	status,0,c
  8098  000FF0  3606               	rlcf	(??_pinMode+1)^0,f,c
  8099  000FF2                     u1974:
  8100  000FF2  2E05               	decfsz	??_pinMode^0,f,c
  8101  000FF4  EFF7  F007         	goto	u1975
  8102  000FF8  5006               	movf	(??_pinMode+1)^0,w,c
  8103  000FFA  0AFF               	xorlw	255
  8104  000FFC  1693               	andwf	147,f,c	;volatile
  8105  000FFE  EFB3  F008         	goto	l195
  8106  001002                     l2386:
  8107  001002  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  8108  001004  EF0F  F008         	goto	u1980
  8109  001008  5002               	movf	(pinMode@pin+1)^0,w,c
  8110  00100A  E107               	bnz	u1981
  8111  00100C  0E18               	movlw	24
  8112  00100E  5C01               	subwf	pinMode@pin^0,w,c
  8113  001010  B0D8               	btfsc	status,0,c
  8114  001012  EF0D  F008         	goto	u1981
  8115  001016  EF0F  F008         	goto	u1980
  8116  00101A                     u1981:
  8117  00101A  EF3D  F008         	goto	l2394
  8118  00101E                     u1980:
  8119  00101E                     
  8120                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  8121  00101E  5003               	movf	pinMode@type^0,w,c
  8122  001020  1004               	iorwf	(pinMode@type+1)^0,w,c
  8123  001022  B4D8               	btfsc	status,2,c
  8124  001024  EF16  F008         	goto	u1991
  8125  001028  EF18  F008         	goto	u1990
  8126  00102C                     u1991:
  8127  00102C  EF2A  F008         	goto	l2392
  8128  001030                     u1990:
  8129  001030  C001  F005         	movff	pinMode@pin,??_pinMode
  8130  001034  0EF0               	movlw	-16
  8131  001036  2605               	addwf	??_pinMode^0,f,c
  8132  001038  0E01               	movlw	1
  8133  00103A  6E06               	movwf	(??_pinMode+1)^0,c
  8134  00103C  2A05               	incf	??_pinMode^0,f,c
  8135  00103E  EF23  F008         	goto	u2004
  8136  001042                     u2005:
  8137  001042  90D8               	bcf	status,0,c
  8138  001044  3606               	rlcf	(??_pinMode+1)^0,f,c
  8139  001046                     u2004:
  8140  001046  2E05               	decfsz	??_pinMode^0,f,c
  8141  001048  EF21  F008         	goto	u2005
  8142  00104C  5006               	movf	(??_pinMode+1)^0,w,c
  8143  00104E  1294               	iorwf	148,f,c	;volatile
  8144  001050  EFB3  F008         	goto	l195
  8145  001054                     l2392:
  8146  001054  C001  F005         	movff	pinMode@pin,??_pinMode
  8147  001058  0EF0               	movlw	-16
  8148  00105A  2605               	addwf	??_pinMode^0,f,c
  8149  00105C  0E01               	movlw	1
  8150  00105E  6E06               	movwf	(??_pinMode+1)^0,c
  8151  001060  2A05               	incf	??_pinMode^0,f,c
  8152  001062  EF35  F008         	goto	u2014
  8153  001066                     u2015:
  8154  001066  90D8               	bcf	status,0,c
  8155  001068  3606               	rlcf	(??_pinMode+1)^0,f,c
  8156  00106A                     u2014:
  8157  00106A  2E05               	decfsz	??_pinMode^0,f,c
  8158  00106C  EF33  F008         	goto	u2015
  8159  001070  5006               	movf	(??_pinMode+1)^0,w,c
  8160  001072  0AFF               	xorlw	255
  8161  001074  1694               	andwf	148,f,c	;volatile
  8162  001076  EFB3  F008         	goto	l195
  8163  00107A                     l2394:
  8164  00107A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  8165  00107C  EF4B  F008         	goto	u2020
  8166  001080  5002               	movf	(pinMode@pin+1)^0,w,c
  8167  001082  E107               	bnz	u2021
  8168  001084  0E20               	movlw	32
  8169  001086  5C01               	subwf	pinMode@pin^0,w,c
  8170  001088  B0D8               	btfsc	status,0,c
  8171  00108A  EF49  F008         	goto	u2021
  8172  00108E  EF4B  F008         	goto	u2020
  8173  001092                     u2021:
  8174  001092  EF79  F008         	goto	l2402
  8175  001096                     u2020:
  8176  001096                     
  8177                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  8178  001096  5003               	movf	pinMode@type^0,w,c
  8179  001098  1004               	iorwf	(pinMode@type+1)^0,w,c
  8180  00109A  B4D8               	btfsc	status,2,c
  8181  00109C  EF52  F008         	goto	u2031
  8182  0010A0  EF54  F008         	goto	u2030
  8183  0010A4                     u2031:
  8184  0010A4  EF66  F008         	goto	l2400
  8185  0010A8                     u2030:
  8186  0010A8  C001  F005         	movff	pinMode@pin,??_pinMode
  8187  0010AC  0EE8               	movlw	-24
  8188  0010AE  2605               	addwf	??_pinMode^0,f,c
  8189  0010B0  0E01               	movlw	1
  8190  0010B2  6E06               	movwf	(??_pinMode+1)^0,c
  8191  0010B4  2A05               	incf	??_pinMode^0,f,c
  8192  0010B6  EF5F  F008         	goto	u2044
  8193  0010BA                     u2045:
  8194  0010BA  90D8               	bcf	status,0,c
  8195  0010BC  3606               	rlcf	(??_pinMode+1)^0,f,c
  8196  0010BE                     u2044:
  8197  0010BE  2E05               	decfsz	??_pinMode^0,f,c
  8198  0010C0  EF5D  F008         	goto	u2045
  8199  0010C4  5006               	movf	(??_pinMode+1)^0,w,c
  8200  0010C6  1295               	iorwf	149,f,c	;volatile
  8201  0010C8  EFB3  F008         	goto	l195
  8202  0010CC                     l2400:
  8203  0010CC  C001  F005         	movff	pinMode@pin,??_pinMode
  8204  0010D0  0EE8               	movlw	-24
  8205  0010D2  2605               	addwf	??_pinMode^0,f,c
  8206  0010D4  0E01               	movlw	1
  8207  0010D6  6E06               	movwf	(??_pinMode+1)^0,c
  8208  0010D8  2A05               	incf	??_pinMode^0,f,c
  8209  0010DA  EF71  F008         	goto	u2054
  8210  0010DE                     u2055:
  8211  0010DE  90D8               	bcf	status,0,c
  8212  0010E0  3606               	rlcf	(??_pinMode+1)^0,f,c
  8213  0010E2                     u2054:
  8214  0010E2  2E05               	decfsz	??_pinMode^0,f,c
  8215  0010E4  EF6F  F008         	goto	u2055
  8216  0010E8  5006               	movf	(??_pinMode+1)^0,w,c
  8217  0010EA  0AFF               	xorlw	255
  8218  0010EC  1695               	andwf	149,f,c	;volatile
  8219  0010EE  EFB3  F008         	goto	l195
  8220  0010F2                     l2402:
  8221  0010F2  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  8222  0010F4  EF87  F008         	goto	u2060
  8223  0010F8  5002               	movf	(pinMode@pin+1)^0,w,c
  8224  0010FA  E107               	bnz	u2061
  8225  0010FC  0E28               	movlw	40
  8226  0010FE  5C01               	subwf	pinMode@pin^0,w,c
  8227  001100  B0D8               	btfsc	status,0,c
  8228  001102  EF85  F008         	goto	u2061
  8229  001106  EF87  F008         	goto	u2060
  8230  00110A                     u2061:
  8231  00110A  EFB3  F008         	goto	l195
  8232  00110E                     u2060:
  8233  00110E                     
  8234                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  8235  00110E  5003               	movf	pinMode@type^0,w,c
  8236  001110  1004               	iorwf	(pinMode@type+1)^0,w,c
  8237  001112  B4D8               	btfsc	status,2,c
  8238  001114  EF8E  F008         	goto	u2071
  8239  001118  EF90  F008         	goto	u2070
  8240  00111C                     u2071:
  8241  00111C  EFA2  F008         	goto	l2408
  8242  001120                     u2070:
  8243  001120  C001  F005         	movff	pinMode@pin,??_pinMode
  8244  001124  0EE0               	movlw	-32
  8245  001126  2605               	addwf	??_pinMode^0,f,c
  8246  001128  0E01               	movlw	1
  8247  00112A  6E06               	movwf	(??_pinMode+1)^0,c
  8248  00112C  2A05               	incf	??_pinMode^0,f,c
  8249  00112E  EF9B  F008         	goto	u2084
  8250  001132                     u2085:
  8251  001132  90D8               	bcf	status,0,c
  8252  001134  3606               	rlcf	(??_pinMode+1)^0,f,c
  8253  001136                     u2084:
  8254  001136  2E05               	decfsz	??_pinMode^0,f,c
  8255  001138  EF99  F008         	goto	u2085
  8256  00113C  5006               	movf	(??_pinMode+1)^0,w,c
  8257  00113E  1296               	iorwf	150,f,c	;volatile
  8258  001140  EFB3  F008         	goto	l195
  8259  001144                     l2408:
  8260  001144  C001  F005         	movff	pinMode@pin,??_pinMode
  8261  001148  0EE0               	movlw	-32
  8262  00114A  2605               	addwf	??_pinMode^0,f,c
  8263  00114C  0E01               	movlw	1
  8264  00114E  6E06               	movwf	(??_pinMode+1)^0,c
  8265  001150  2A05               	incf	??_pinMode^0,f,c
  8266  001152  EFAD  F008         	goto	u2094
  8267  001156                     u2095:
  8268  001156  90D8               	bcf	status,0,c
  8269  001158  3606               	rlcf	(??_pinMode+1)^0,f,c
  8270  00115A                     u2094:
  8271  00115A  2E05               	decfsz	??_pinMode^0,f,c
  8272  00115C  EFAB  F008         	goto	u2095
  8273  001160  5006               	movf	(??_pinMode+1)^0,w,c
  8274  001162  0AFF               	xorlw	255
  8275  001164  1696               	andwf	150,f,c	;volatile
  8276  001166                     l195:
  8277  001166  0012               	return		;funcret
  8278  001168                     __end_of_pinMode:
  8279                           	callstack 0
  8280                           
  8281                           	psect	rparam
  8282  0000                     
  8283                           	psect	idloc
  8284                           
  8285                           ;Config register IDLOC0 @ 0x200000
  8286                           ;	unspecified, using default values
  8287  200000                     	org	2097152
  8288  200000  FF                 	db	255
  8289                           
  8290                           ;Config register IDLOC1 @ 0x200001
  8291                           ;	unspecified, using default values
  8292  200001                     	org	2097153
  8293  200001  FF                 	db	255
  8294                           
  8295                           ;Config register IDLOC2 @ 0x200002
  8296                           ;	unspecified, using default values
  8297  200002                     	org	2097154
  8298  200002  FF                 	db	255
  8299                           
  8300                           ;Config register IDLOC3 @ 0x200003
  8301                           ;	unspecified, using default values
  8302  200003                     	org	2097155
  8303  200003  FF                 	db	255
  8304                           
  8305                           ;Config register IDLOC4 @ 0x200004
  8306                           ;	unspecified, using default values
  8307  200004                     	org	2097156
  8308  200004  FF                 	db	255
  8309                           
  8310                           ;Config register IDLOC5 @ 0x200005
  8311                           ;	unspecified, using default values
  8312  200005                     	org	2097157
  8313  200005  FF                 	db	255
  8314                           
  8315                           ;Config register IDLOC6 @ 0x200006
  8316                           ;	unspecified, using default values
  8317  200006                     	org	2097158
  8318  200006  FF                 	db	255
  8319                           
  8320                           ;Config register IDLOC7 @ 0x200007
  8321                           ;	unspecified, using default values
  8322  200007                     	org	2097159
  8323  200007  FF                 	db	255
  8324                           
  8325                           	psect	config
  8326                           
  8327                           ; Padding undefined space
  8328  300000                     	org	3145728
  8329  300000  FF                 	db	255
  8330                           
  8331                           ;Config register CONFIG1H @ 0x300001
  8332                           ;	Oscillator Selection bits
  8333                           ;	OSC = HS, HS oscillator
  8334                           ;	Fail-Safe Clock Monitor Enable bit
  8335                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8336                           ;	Internal/External Oscillator Switchover bit
  8337                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8338  300001                     	org	3145729
  8339  300001  02                 	db	2
  8340                           
  8341                           ;Config register CONFIG2L @ 0x300002
  8342                           ;	Power-up Timer Enable bit
  8343                           ;	PWRT = OFF, PWRT disabled
  8344                           ;	Brown-out Reset Enable bits
  8345                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  8346                           ;	Brown Out Reset Voltage bits
  8347                           ;	BORV = 0x2E, user specified literal
  8348  300002                     	org	3145730
  8349  300002  71                 	db	369
  8350                           
  8351                           ;Config register CONFIG2H @ 0x300003
  8352                           ;	Watchdog Timer Enable bit
  8353                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8354                           ;	Watchdog Timer Postscale Select bits
  8355                           ;	WDTPS = 1, 1:1
  8356  300003                     	org	3145731
  8357  300003  00                 	db	0
  8358                           
  8359                           ; Padding undefined space
  8360  300004                     	org	3145732
  8361  300004  FF                 	db	255
  8362                           
  8363                           ;Config register CONFIG3H @ 0x300005
  8364                           ;	CCP2 MUX bit
  8365                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8366                           ;	PORTB A/D Enable bit
  8367                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  8368                           ;	Low-Power Timer1 Oscillator Enable bit
  8369                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8370                           ;	MCLR Pin Enable bit
  8371                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8372  300005                     	org	3145733
  8373  300005  83                 	db	131
  8374                           
  8375                           ;Config register CONFIG4L @ 0x300006
  8376                           ;	Stack Full/Underflow Reset Enable bit
  8377                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  8378                           ;	Single-Supply ICSP Enable bit
  8379                           ;	LVP = OFF, Single-Supply ICSP disabled
  8380                           ;	Extended Instruction Set Enable bit
  8381                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8382                           ;	Background Debugger Enable bit
  8383                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  8384  300006                     	org	3145734
  8385  300006  80                 	db	128
  8386                           
  8387                           ; Padding undefined space
  8388  300007                     	org	3145735
  8389  300007  FF                 	db	255
  8390                           
  8391                           ;Config register CONFIG5L @ 0x300008
  8392                           ;	Code Protection bit
  8393                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  8394                           ;	Code Protection bit
  8395                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  8396                           ;	Code Protection bit
  8397                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  8398                           ;	Code Protection bit
  8399                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  8400  300008                     	org	3145736
  8401  300008  0F                 	db	15
  8402                           
  8403                           ;Config register CONFIG5H @ 0x300009
  8404                           ;	Boot Block Code Protection bit
  8405                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8406                           ;	Data EEPROM Code Protection bit
  8407                           ;	CPD = OFF, Data EEPROM not code-protected
  8408  300009                     	org	3145737
  8409  300009  C0                 	db	192
  8410                           
  8411                           ;Config register CONFIG6L @ 0x30000A
  8412                           ;	Write Protection bit
  8413                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  8414                           ;	Write Protection bit
  8415                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  8416                           ;	Write Protection bit
  8417                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  8418                           ;	Write Protection bit
  8419                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  8420  30000A                     	org	3145738
  8421  30000A  0F                 	db	15
  8422                           
  8423                           ;Config register CONFIG6H @ 0x30000B
  8424                           ;	Configuration Register Write Protection bit
  8425                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8426                           ;	Boot Block Write Protection bit
  8427                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  8428                           ;	Data EEPROM Write Protection bit
  8429                           ;	WRTD = OFF, Data EEPROM not write-protected
  8430  30000B                     	org	3145739
  8431  30000B  E0                 	db	224
  8432                           
  8433                           ;Config register CONFIG7L @ 0x30000C
  8434                           ;	Table Read Protection bit
  8435                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  8436                           ;	Table Read Protection bit
  8437                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  8438                           ;	Table Read Protection bit
  8439                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  8440                           ;	Table Read Protection bit
  8441                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8442  30000C                     	org	3145740
  8443  30000C  0F                 	db	15
  8444                           
  8445                           ;Config register CONFIG7H @ 0x30000D
  8446                           ;	Boot Block Table Read Protection bit
  8447                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8448  30000D                     	org	3145741
  8449  30000D  40                 	db	64
  8450                           tosu	equ	0xFFF
  8451                           tosh	equ	0xFFE
  8452                           tosl	equ	0xFFD
  8453                           stkptr	equ	0xFFC
  8454                           pclatu	equ	0xFFB
  8455                           pclath	equ	0xFFA
  8456                           pcl	equ	0xFF9
  8457                           tblptru	equ	0xFF8
  8458                           tblptrh	equ	0xFF7
  8459                           tblptrl	equ	0xFF6
  8460                           tablat	equ	0xFF5
  8461                           prodh	equ	0xFF4
  8462                           prodl	equ	0xFF3
  8463                           indf0	equ	0xFEF
  8464                           postinc0	equ	0xFEE
  8465                           postdec0	equ	0xFED
  8466                           preinc0	equ	0xFEC
  8467                           plusw0	equ	0xFEB
  8468                           fsr0h	equ	0xFEA
  8469                           fsr0l	equ	0xFE9
  8470                           wreg	equ	0xFE8
  8471                           indf1	equ	0xFE7
  8472                           postinc1	equ	0xFE6
  8473                           postdec1	equ	0xFE5
  8474                           preinc1	equ	0xFE4
  8475                           plusw1	equ	0xFE3
  8476                           fsr1h	equ	0xFE2
  8477                           fsr1l	equ	0xFE1
  8478                           bsr	equ	0xFE0
  8479                           indf2	equ	0xFDF
  8480                           postinc2	equ	0xFDE
  8481                           postdec2	equ	0xFDD
  8482                           preinc2	equ	0xFDC
  8483                           plusw2	equ	0xFDB
  8484                           fsr2h	equ	0xFDA
  8485                           fsr2l	equ	0xFD9
  8486                           status	equ	0xFD8

Data Sizes:
    Strings     82
    Constant    26
    Data        26
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     49     103
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[15]), STR_9(CODE[17]), STR_8(CODE[11]), STR_7(CODE[2]), 
		 -> STR_6(CODE[6]), STR_5(CODE[8]), STR_4(CODE[7]), STR_3(CODE[11]), 
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_desligado
    _timer->_atualizaLCD
    _temperatura->___llmod
    _ssdUpdate->_soWrite
    _ssdInit->_pinMode
    _pwmInit->_pwmFrequency
    _pwmFrequency->___aldiv
    _leTeclado->_atualizaLCD
    _kpDebounce->_soWrite
    _lcdPosition->_lcdCommand
    _buzzer->_pwmSet
    _pwmSet->___wmul
    ___llmod->___lldiv
    ___lldiv->___lmul
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _iniSimbolos->_lcdChar
    _iniSimbolos->_lcdCommand
    _escolherModo->_lcdString
    _desligado->___awmod
    _lcdString->_lcdChar
    _lcdChar->_pushByte
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _pulseEnablePin->_digitalWrite
    _dsReadData->_i2cReadByte
    _i2cWriteByte->_i2c_read_bit
    _i2cWriteByte->_i2c_write_bit
    _i2cReadByte->_i2c_read_bit
    _i2cReadByte->_i2c_write_bit
    _clear_SDA->_digitalWrite
    _clear_SDA->_pinMode
    _read_SDA->_pinMode
    _read_SCL->_pinMode
    _clear_SCL->_digitalWrite
    _clear_SCL->_pinMode
    _bcd2dec->___wmul
    ___wmul->___awdiv
    _atualizaSSD->_ssdDigit
    _ssdDigit->___awmod
    ___awmod->_bcd2dec
    ___awdiv->_dsReadData
    _adcInit->_pinMode

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0  637364
                                             44 COMRAM     5     5      0
                            _adcInit
                        _atualizaSSD
                          _desligado
                       _escolherModo
                        _iniSimbolos
                             _kpInit
                         _lcdCommand
                            _lcdInit
                          _leTeclado
                            _pwmInit
                            _ssdInit
                          _ssdUpdate
                        _temperatura
                              _timer
                          _timerInit
                         _timerReset
                          _timerWait
 ---------------------------------------------------------------------------------
 (1) _timerWait                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timerReset                                           4     2      2     167
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer                                                0     0      0   86925
                        _atualizaLCD
 ---------------------------------------------------------------------------------
 (1) _temperatura                                          8     8      0   44954
                                             34 COMRAM     8     8      0
                            ___lldiv
                            ___llmod
                             ___lmul
                            _adcRead
                            _lcdChar
                        _lcdPosition
 ---------------------------------------------------------------------------------
 (2) _adcRead                                              4     2      2     145
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0   15297
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    6960
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0     550
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (2) _pwmFrequency                                         2     0      2     550
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _leTeclado                                            0     0      0  119147
                        _atualizaLCD
                         _kpDebounce
                             _kpRead
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _kpDebounce                                           5     5      0   12297
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _atualizaLCD                                          4     4      0   86925
                                             37 COMRAM     4     4      0
                            ___lldiv
                            ___llmod
                             ___lmul
                             _buzzer
                            _lcdChar
                         _lcdCommand
                        _lcdPosition
                          _lcdString
 ---------------------------------------------------------------------------------
 (3) _lcdPosition                                          4     0      4   20925
                                             14 COMRAM     4     0      4
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (3) _buzzer                                               0     0      0    1386
                             _atraso
                             _pwmSet
 ---------------------------------------------------------------------------------
 (4) _pwmSet                                               5     5      0     868
                                             32 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _atraso                                              10     8      2     518
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1130
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8    1071
                                             25 COMRAM     9     1      8
                            ___lldiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    1682
                                             12 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   47276
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   19661
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    6960
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    3480
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _iniSimbolos                                         25    25      0   40156
                                             14 COMRAM    25    25      0
                            _lcdChar
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _escolherModo                                         0     0      0   40730
                         _lcdCommand
                          _lcdString
 ---------------------------------------------------------------------------------
 (1) _desligado                                            2     2      0  199149
                                             42 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
                            _bcd2dec
                         _dsReadData
                            _lcdChar
                         _lcdCommand
                          _lcdString
 ---------------------------------------------------------------------------------
 (3) _lcdString                                            6     4      2   20805
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (4) _lcdChar                                              1     1      0   19955
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (4) _lcdCommand                                           1     1      0   19925
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (5) _pushByte                                             4     2      2   19553
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (6) _soWrite                                              3     1      2   11661
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (7) _PulseEnClock                                         0     0      0    3636
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (7) _PulseClockData                                       0     0      0    3636
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _pulseEnablePin                                       0     0      0    4016
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (7) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _dsReadData                                           5     3      2  129627
                                             13 COMRAM     5     3      2
                        _i2cReadByte
                       _i2cWriteByte
 ---------------------------------------------------------------------------------
 (3) _i2cWriteByte                                         5     3      2   75827
                                              7 COMRAM     4     2      2
                       _i2c_read_bit
                          _i2c_start
                           _i2c_stop
                      _i2c_write_bit
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0   22240
                          _I2C_delay
                          _clear_SCL
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (3) _i2cReadByte                                          6     5      1   52767
                                              7 COMRAM     6     5      1
                       _i2c_read_bit
                           _i2c_stop
                      _i2c_write_bit
 ---------------------------------------------------------------------------------
 (4) _i2c_write_bit                                        1     1      0   22284
                                              6 COMRAM     1     1      0
                          _I2C_delay
                          _clear_SCL
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0   15124
                          _I2C_delay
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (5) _clear_SDA                                            0     0      0    7116
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (4) _i2c_read_bit                                         1     1      0   15147
                                              6 COMRAM     1     1      0
                          _I2C_delay
                          _clear_SCL
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (5) _read_SDA                                             0     0      0    4004
                        _digitalRead
                            _pinMode
 ---------------------------------------------------------------------------------
 (5) _read_SCL                                             0     0      0    4004
                        _digitalRead
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _digitalRead                                          5     3      2     524
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) _clear_SCL                                            0     0      0    7116
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (7) _digitalWrite                                         6     2      4    3636
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _I2C_delay                                            4     4      0       0
 ---------------------------------------------------------------------------------
 (2) _bcd2dec                                              4     2      2    3543
                                             32 COMRAM     4     2      2
                            ___awdiv
                             ___wmul
                         _dsReadData (ARG)
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     463
                                             26 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _atualizaSSD                                          0     0      0    5636
                            ___awdiv
                            ___awmod
                           _ssdDigit
 ---------------------------------------------------------------------------------
 (2) _ssdDigit                                             2     1      1     480
                                             42 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    3032
                                             36 COMRAM     6     2      4
                            ___awdiv (ARG)
                            _bcd2dec (ARG)
                         _dsReadData (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    2124
                                             18 COMRAM     8     4      4
                         _dsReadData (ARG)
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0    3480
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    3480
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcInit
     _pinMode
   _atualizaSSD
     ___awdiv
       _dsReadData (ARG)
         _i2cReadByte
           _i2c_read_bit
             _I2C_delay
             _clear_SCL
               _digitalWrite
               _pinMode
             _read_SCL
               _digitalRead
               _pinMode
             _read_SDA
               _digitalRead
               _pinMode
           _i2c_stop
             _I2C_delay
             _clear_SDA
               _digitalWrite
               _pinMode
             _read_SCL
             _read_SDA
           _i2c_write_bit
             _I2C_delay
             _clear_SCL
             _clear_SDA
             _read_SCL
             _read_SDA
         _i2cWriteByte
           _i2c_read_bit
           _i2c_start
             _I2C_delay
             _clear_SCL
             _clear_SDA
             _read_SCL
             _read_SDA
           _i2c_stop
           _i2c_write_bit
     ___awmod
       ___awdiv (ARG)
       _bcd2dec (ARG)
         ___awdiv
         ___wmul
           ___awdiv (ARG)
         _dsReadData (ARG)
       _dsReadData (ARG)
     _ssdDigit
       ___awdiv (ARG)
       ___awmod (ARG)
   _desligado
     ___awdiv
     ___awmod
     _bcd2dec
     _dsReadData
     _lcdChar
       _delayMicro
       _pushByte
         _digitalWrite
         _pulseEnablePin
           _delayMicro
           _digitalWrite
         _soWrite
           _PulseClockData
             _digitalWrite
           _PulseEnClock
             _digitalWrite
           _digitalWrite
     _lcdCommand
       _delayMili
       _pushByte
     _lcdString
       _lcdChar
   _escolherModo
     _lcdCommand
     _lcdString
   _iniSimbolos
     _lcdChar
     _lcdCommand
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _lcdCommand
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _leTeclado
     _atualizaLCD
       ___lldiv
         ___lmul (ARG)
       ___llmod
         ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul
       _buzzer
         _atraso
         _pwmSet
           ___lwdiv
           ___wmul
       _lcdChar
       _lcdCommand
       _lcdPosition
         _lcdCommand
       _lcdString
     _kpDebounce
       _digitalRead
       _soWrite
     _kpRead
     _lcdCommand
   _pwmInit
     _pwmFrequency
       ___aldiv
   _ssdInit
     _pinMode
     _soInit
   _ssdUpdate
     _digitalWrite
     _soWrite
   _temperatura
     ___lldiv
     ___llmod
     ___lmul
     _adcRead
     _lcdChar
     _lcdPosition
   _timer
     _atualizaLCD
   _timerInit
   _timerReset
   _timerWait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     31      67       1       81.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      67      15        0.0%
DATA                 0      0      67       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Dec 08 11:51:47 2021

         _pulseEnablePin 2756             lcdString@msg 000F                       l21 2616  
                     l22 2632                       l15 26C8                       l50 270E  
                     l19 2608                       l38 27D8                       l62 2BB0  
                     l71 2A60                       l65 28C0                       l74 2A36  
                     l91 29B8                       l68 2888                       l84 2754  
           ___awdiv@sign 0018       __size_of_I2C_delay 0002                       _v0 004A  
                     _v1 0049                       _v2 0048                       _v3 0047  
    ___wmul@multiplicand 001D            ??_i2cReadByte 0009   __size_of_i2c_write_bit 0058  
  i2cWriteByte@send_stop 0008           i2cReadByte@bit 000B                      l100 248A  
                    l113 23D8                      l106 295A                      l212 2BA4  
                    l302 2A0C                      l119 25E2                      l232 19D8  
                    l161 0F18                      l170 18B6                      l234 19F0  
                    l307 2680                      l260 2AAC                      l500 20D8  
                    l165 18BA                      l237 2928                      l334 24E2  
                    l166 18B6                      l254 298A                      l263 2432  
                    l271 2850                      l511 1A5E                      l248 2BAE  
                    l280 258E                      l344 1750                      l257 2796  
                    l361 2B8C                      l266 2B56                      l274 2B38  
                    l370 2BAC                      l195 1166                      l443 1D9A  
                    l531 22AC                      l347 2538                      l364 2B9A  
                    l446 09BE                      l550 2B8A                      l367 2B1A  
                    l296 2816                      l544 2240                      l456 0CCA  
                    l480 15D0                      l632 1C14                      l553 2AF8  
                    l289 1E4E                      l449 2378                      l482 15E4  
                    l299 29E2                      l491 2AD2                      l467 1490  
                    l547 2A86                      l580 1F92                      l564 2306  
                    l565 2316                      l477 15A8                      l494 2044  
                    l488 13AE                      l587 1FA2                      l784 1CD8  
                    l980 2160                      l797 1EFE                      l973 2150  
                    _PR2 000FCB                      _fim 0042                      _min 003A  
                    _seg 0038                      _pot 0032             ___awmod@sign 002A  
                    wreg 000FE8             ?_atualizaLCD 0001             ?_atualizaSSD 0001  
       i2c_write_bit@bit 0007             ?_iniSimbolos 0001            ?_i2cWriteByte 0008  
 i2cWriteByte@send_start 000A          i2cReadByte@nack 000A          i2cReadByte@byte 000D  
                   l1051 21D4                     l1044 21CC                     l3000 1EF6  
                   l3010 26C4                     l3004 2682                     l3100 1D44  
                   l3012 28F8                     l3020 1E08                     l3006 26BE  
                   l3110 1D5C                     l3014 2924                     l3030 1E48  
                   l3022 1E22                     l2400 10CC                     l3008 26C0  
                   l3120 1D76                     l3112 1D6C                     l3024 1E30  
                   l3016 1D9C                     l3200 1466                     l3040 167A  
                   l3032 15E6                     l2402 10F2                     l2330 0CFA  
                   l2410 1752                     l3130 0680                     l3122 1D88  
                   l3114 1D72                     l3106 1D48                     l3026 1E3C  
                   l3018 1DFC                     l3210 14A0                     l3202 146C  
                   l3050 16DA                     l3042 1692                     l3034 1646  
                   l2404 110E                     l2340 0D92                     l2332 0D1A  
                   l2420 17B2                     l2412 176E                     l3140 072A  
                   l3132 06A0                     l3124 1D8A                     l3108 1D5A  
                   l3028 1E42                     l2500 216A                     l3220 14E4  
                   l3212 14AE                     l3204 147A                     l3300 2B78  
                   l3052 16E2                     l3044 16A6                     l3036 165E  
                   l2406 1120                     l2350 0E2C                     l2342 0DB4  
                   l2334 0D3C                     l2326 0CCC                     l3150 07E2  
                   l3142 075A                     l3134 06D0                     l3126 066E  
                   l2510 21A0                     l2502 217C                     l3230 1512  
                   l3222 14EA                     l3214 14B2                     l3206 147C  
                   l3302 2B7A                     l3054 16FA                     l3046 16AE  
                   l3038 1672                     l3062 1716                     l3070 2AFA  
                   l2408 1144                     l2360 0EC0                     l2352 0E48  
                   l2344 0DD0                     l2336 0D58                     l2328 0CE8  
                   l2520 2710                     l3160 08AA                     l3152 0814  
                   l3144 078E                     l3136 0704                     l3128 0674  
                   l2512 21B6                     l2504 2184                     l2600 2212  
                   l3232 152E                     l3240 155E                     l3224 14F8  
                   l3216 14CE                     l3208 148C                     l3304 2B7E  
                   l3056 170E                     l3048 16C6                     l3080 2B18  
                   l3072 2B04                     l3400 1AC8                     l2370 0F1A  
                   l2362 0EDA                     l2354 0E62                     l2346 0DEA  
                   l2338 0D72                     l2442 186E                     l2434 1826  
                   l2426 17DE                     l2418 1796                     l2522 2720  
                   l2530 2740                     l2450 2648                     l3170 098A  
                   l3162 08B0                     l3154 081A                     l3146 0794  
                   l3138 070A                     l3082 1CDA                     l2514 21BE  
                   l2506 218C                     l2602 221A                     l3250 158E  
                   l3242 156C                     l3234 1536                     l3226 1500  
                   l3218 14D6                     l3402 172A                     l3074 2B08  
                   l3330 1A02                     l2380 0FA6                     l2372 0F36  
                   l2364 0EFA                     l2356 0E82                     l2348 0E0A  
                   l2444 188A                     l2436 1842                     l2428 17FA  
                   l2540 298C                     l2532 2744                     l2524 2724  
                   l2460 266A                     l3164 0900                     l3156 0826  
                   l3148 07B2                     l3092 1D1A                     l3084 1D10  
                   l2620 225E                     l2516 21C0                     l2508 219A  
                   l2604 2232                     l2700 232A                     l3252 159C  
                   l3244 1572                     l3236 153A                     l3228 150E  
                   l3180 13EE                     l3172 13B0                     l3068 24E4  
                   l3260 1168                     l3076 2B10                     l3340 1A16  
                   l3332 1A06                     l2390 1030                     l2382 0FB8  
                   l2374 0F48                     l2358 0EA4                     l2550 29B0  
                   l2542 2990                     l2534 2748                     l2526 2728  
                   l2470 2776                     l2366 29BA                     l2462 266C  
                   l3166 0934                     l3158 0846                     l3270 2AB4  
                   l3094 1D2C                     l3086 1D16                     l2622 2262  
                   l2614 2256                     l2630 2296                     l2606 2242  
                   l2518 21C6                     l2710 2372                     l2702 233C  
                   l3246 1580                     l3238 1556                     l3254 15A8  
                   l3190 142C                     l3182 13F4                     l3174 13D0  
                   l3262 1186                     l3078 2B14                     l3350 1A44  
                   l3342 1A1E                     l3334 1A0A                     l3326 19F2  
                   l2392 1054                     l2384 0FDC                     l2376 0F68  
                   l2800 1C4A                     l2480 2A38                     l2472 288A  
                   l2552 29B4                     l2544 2994                     l2560 2452  
                   l2536 274C                     l2528 273C                     l2632 237C  
                   l2368 29E4                     l2464 267C                     l2456 264C  
                   l2448 2634                     l3168 095A                     l3272 2AC0  
                   l3096 1D2E                     l2720 22E6                     l2712 22AE  
                   l2624 2278                     l2608 224E                     l2704 2342  
                   l3256 15B6                     l3248 1588                     l3192 143A  
                   l3184 1404                     l3176 13DC                     l3264 11B6  
                   l3280 205C                     l3360 1A7A                     l3352 1A48  
                   l3344 1A26                     l3336 1A0E                     l3328 19FE  
                   l2394 107A                     l2386 1002                     l2378 0F8A  
                   l2810 1C78                     l2802 1C4E                     l3274 1FA4  
                   l2482 2A0E                     l2546 29A8                     l2570 2482  
                   l2562 2456                     l2554 2436                     l2538 2750  
                   l2650 23C0                     l2642 2394                     l2634 238C  
                   l2466 2756                     l2458 2664                     l2490 23DC  
                   l3098 1D3E                     l2730 1F3A                     l2722 1F00  
                   l2714 22BE                     l2626 227C                     l2706 2354  
                   l3258 15E0                     l3194 144E                     l3186 1412  
                   l3178 13EA                     l3266 13A6                     l3290 20A0  
                   l3282 206A                     l3370 1AA8                     l3362 1A7E  
                   l3354 1A58                     l3346 1A36                     l3338 1A12  
                   l2396 1096                     l2388 101E                     l2820 1CAC  
                   l2812 1C86                     l2804 1C56                     l2492 2AD4  
                   l2476 2852                     l2580 2946                     l2548 29AC  
                   l2572 2486                     l2564 246A                     l2556 2446  
                   l2652 23C4                     l2644 23AA                     l2636 2390  
                   l2484 295C                     l2468 276A                     l3268 2AAE  
                   l2740 1F82                     l2732 1F48                     l2724 1F10  
                   l2716 22CC                     l2628 2292                     l2708 2360  
                   l2900 19E8                     l3196 1454                     l3188 1426  
                   l3292 20B2                     l3284 2084                     l3276 2046  
                   l3372 1AAC                     l3364 1A86                     l3380 1AE6  
                   l3356 1A6E                     l3348 1A40                     l2398 10A8  
                   l2822 1CB2                     l2814 1C8C                     l2806 1C68  
                   l2910 24A2                     l2494 2AF0                     l2582 294C  
                   l2574 292A                     l2566 247A                     l2558 244E  
                   l2670 25C6                     l2654 23D4                     l2646 23AE  
                   l2486 2968                     l2590 2B3C                     l2902 27DA  
                   l2742 1F8C                     l2734 1F52                     l2726 1F26  
                   l2718 22DC                     l3198 1462                     l2750 1B2C  
                   l3294 20D4                     l3286 208C                     l3278 2056  
                   l3382 1AF6                     l3366 1A9C                     l3358 1A72  
                   l2816 1CA2                     l2808 1C70                     l2824 1CB8  
                   l2920 24DE                     l2912 24B2                     l2584 2950  
                   l2576 292E                     l2568 247E                     l2672 25CC  
                   l2664 259E                     l2648 23B0                     l2488 296C  
                   l2592 2B1E                     l2904 2A8A                     l2736 1F70  
                   l2728 1F2E                     l2840 2112                     l2832 20DA  
                   l2680 2818                     l2760 1B62                     l2752 1B30  
                   l2744 1B0A                     l3296 2B72                     l3288 2092  
                   l3384 1AFA                     l3368 1AA4                     l2826 1CC8  
                   l2818 1CAA                     l2914 24B6                     l2906 248E  
                   l2586 2958                     l2578 2932                     l2674 25DC  
                   l2666 25AC                     l2658 2592                     l2594 2B2C  
                   l2690 2546                     l2738 1F80                     l2842 2130  
                   l2834 20F0                     l2498 2162                     l2682 282A  
                   l2930 09F8                     l2922 09C0                     l2770 1BA4  
                   l2762 1B78                     l2754 1B3E                     l2746 1B0E  
                   l3298 2B74                     l2850 25FE                     l1970 2B8C  
                   l3386 1AFE                     l3378 1AB4                     l2828 1CD0  
                   l2916 24C8                     l2908 249E                     l2676 25E0  
                   l2668 25B0                     l2692 2562                     l2844 2140  
                   l2836 20F8                     l2596 21D8                     l2684 2834  
                   l2940 0A36                     l2932 09FE                     l2924 09C6  
                   l2772 1BC2                     l2764 1B80                     l2780 1BE4  
                   l2756 1B4E                     l2748 1B1C                     l2852 2606  
                   l2790 1C1A                     l2918 24CC                     l2862 2798  
                   l2694 2566                     l2846 214A                     l2838 2104  
                   l2598 21F6                     l2686 2846                     l2950 0A74  
                   l2942 0A48                     l2934 0A10                     l2926 09D8  
                   l2782 1BF4                     l2774 1BD2                     l2766 1B8C  
                   l2758 1B52                     l2854 261C                     l2792 1C28  
                   l2688 253A                     l2696 2318                     l2960 0CB4  
                   l2952 0C8A                     l2944 0A54                     l2936 0A1C  
                   l2928 09E4                     l2880 18EC                     l2872 2B9C  
                   l2784 1C04                     l2776 1BD4                     l2768 1B9A  
                   l2856 2622                     l2848 25E4                     l1984 2BA6  
                   l2794 1C30                     l2970 1E54                     l2866 26CA  
                   l2698 231E                     l2962 0CBA                     l2954 0C96  
                   l2946 0A68                     l2938 0A30                     l2882 1938  
                   l2874 18BC                     l2778 1BDE                     l2858 262A  
                   l1986 2BAA                     l2796 1C34                     l2788 1C16  
                   l2980 1E84                     l2972 1E62                     l2868 2706  
                   l2964 0CC6                     l2956 0CA6                     l2948 0A6E  
                   l2884 195E                     l2892 19AE                     l2876 18CC  
                   l2798 1C42                     l2990 1ECA                     l2982 1E96  
                   l2974 1E6A                     l2958 0CAE                     l2894 19C6  
                   l2886 197C                     l2966 2A62                     l2992 1ED2  
                   l2984 1E9E                     l2976 1E6E                     l2968 1E50  
                   l2896 19CC                     l2888 19A6                     l2994 1ED8  
                   l2986 1EA6                     l2978 1E7C                     l2898 19D0  
                   l2988 1EB4                     l2996 1EDE                     l2998 1EEE  
                   STR_1 0666                     STR_2 0666                     STR_3 063B  
                   STR_4 0659                     STR_5 0651                     STR_6 0660  
                   STR_7 066B                     STR_8 0646                     STR_9 061B  
                   u2020 1096                     u2004 1046                     u2100 176E  
                   u2021 1092                     u2005 1042                     u2101 176A  
                   u2030 10A8                     u2014 106A                     u2031 10A4  
                   u2015 1066                     u2120 17B2                     u2200 267C  
                   u3000 13EA                     u1240 2B9A                     u2121 17AE  
                   u2201 2678                     u3001 13E6                     u1241 2B96  
                   u2114 1780                     u2210 28BE                     u3010 1404  
                   u2115 177C                     u2211 28B8                     u3011 1400  
                   u2060 110E                     u2044 10BE                     u2140 17FA  
                   u2220 28C0                     u2300 273C                     u3100 14E4  
                   u3020 1412                     u2061 110A                     u2045 10BA  
                   u2141 17F6                     u2301 2738                     u3101 14E0  
                   u3021 140E                     u2070 1120                     u2054 10E2  
                   u2134 17C8                     u2230 2886                     u2310 29A8  
                   u3110 14F8                     u3030 143A                     u2071 111C  
                   u2055 10DE                     u2135 17C4                     u2231 2880  
                   u2311 29A4                     u3111 14F4                     u3031 1436  
                   u2160 1842                     u2240 2888                     u2320 2446  
                   u2400 23A4                     u3200 15CA                     u3120 150E  
                   u3040 1462                     u2161 183E                     u2321 2442  
                   u2401 239E                     u3121 150A                     u3041 145E  
                   u2154 1810                     u2330 246A                     u2410 23A6  
                   u2250 298A                     u3210 15E0                     u3130 152E  
                   u3050 147A                     u2155 180C                     u2331 2466  
                   u2251 2986                     u3211 15DC                     u3131 152A  
                   u3051 1476                     u2084 1136                     u1700 0CE8  
                   u2180 188A                     u2340 247A                     u2420 23C0  
                   u2500 2306                     u2260 217C                     u3140 1556  
                   u3060 148C                     u3220 11B6                     u2085 1132  
                   u1701 0CE4                     u2181 1886                     u2341 2476  
                   u2421 23BC                     u2501 2302                     u2261 2178  
                   u3141 1552                     u3061 1488                     u3221 11B2  
                   u2094 115A                     u1710 0CFA                     u2174 1858  
                   u2350 2946                     u2430 23D4                     u2510 1F26  
                   u2270 219A                     u3150 156C                     u3070 14A0  
                   u3230 2056                     u3310 1A36                     u2095 1156  
                   u1711 0CF6                     u2175 1854                     u2351 2942  
                   u2431 23D0                     u2511 1F22                     u2271 2196  
                   u3151 1568                     u3071 149C                     u3231 2052  
                   u3311 1A32                     u2600 1C28                     u2440 25C6  
                   u2520 1F48                     u2360 2278                     u2280 21B6  
                   u3160 1580                     u3080 14AE                     u3240 206A  
                   u3320 1A58                     u2601 1C24                     u2441 25C2  
                   u2521 1F44                     u2361 2274                     u2281 21B2  
                   u3161 157C                     u3081 14AA                     u3241 2066  
                   u3321 1A54                     u2610 1C42                     u2194 18A0  
                   u2450 25DC                     u2290 2720                     u2530 1F70  
                   u2370 2292                     u3170 159C                     u3090 14CE  
                   u3250 2084                     u3330 1A9C                     u2611 1C3E  
                   u2195 189C                     u2451 25D8                     u2291 271C  
                   u2531 1F6C                     u2371 228E                     u3171 1598  
                   u3091 14CA                     u3251 2080                     u3331 1A98  
                   u1900 0F36                     u2620 1C68                     u1820 0E48  
                   u1804 0DFC                     u1740 0D58                     u1724 0D0C  
                   u2380 22AC                     u2460 282A                     u3180 15B6  
                   u2540 1B1C                     u2700 2616                     u3260 20A0  
                   u3340 1AF6                     u1901 0F32                     u2621 1C64  
                   u1821 0E44                     u1805 0DF8                     u1741 0D54  
                   u1725 0D08                     u2381 22A8                     u2461 2826  
                   u3181 15B2                     u2541 1B18                     u2701 2612  
                   u3261 209C                     u3341 1AF2                     u1910 0F48  
                   u2630 1C86                     u1830 0E62                     u1814 0E1C  
                   u1750 0D72                     u1734 0D2C                     u2390 238C  
                   u2470 2846                     u2710 18E8                     u3190 15C8  
                   u2550 1B3E                     u3270 20B2                     u1911 0F44  
                   u2631 1C82                     u1831 0E5E                     u1815 0E18  
                   u1751 0D6E                     u1735 0D28                     u2391 2388  
                   u2471 2842                     u2711 18E4                     u3191 15C2  
                   u2551 1B3A                     u3271 20AE                     u2640 1CA2  
                   u2800 24B2                     u2480 258E                     u2560 1B78  
                   u3280 20CC                     u2641 1C9E                     u2801 24AE  
                   u2481 258A                     u2561 1B74                     u3281 20C6  
                   u2650 1CC8                     u2810 24C8                     u2490 22CC  
                   u2730 1938                     u2570 1B9A                     u3290 20CE  
                   u2651 1CC4                     u2811 24C4                     u2491 22C8  
                   u2731 1934                     u2571 1B96                     u1940 0FA6  
                   u1924 0F5A                     u2900 1EB4                     u2820 24DE  
                   u1860 0EC0                     u1844 0E74                     u1780 0DD0  
                   u1764 0D84                     u2660 20F0                     u2724 1908  
                   u2580 1BC2                     u1941 0FA2                     u1925 0F56  
                   u2901 1EB0                     u2821 24DA                     u1861 0EBC  
                   u1845 0E70                     u1781 0DCC                     u1765 0D80  
                   u2661 20EC                     u2725 1902                     u2581 1BBE  
                   u1950 0FB8                     u1934 0F7A                     u2910 1ECA  
                   u1870 0EDA                     u1854 0E94                     u1790 0DEA  
                   u1774 0DA4                     u2670 2112                     u2830 09D8  
                   u2750 197C                     u2590 1BF4                     u1951 0FB4  
                   u1935 0F76                     u2911 1EC6                     u1871 0ED6  
                   u1855 0E90                     u1791 0DE6                     u1775 0DA0  
                   u2671 210E                     u2831 09D4                     u2751 1978  
                   u2591 1BF0                     u2920 1EEE                     u2680 2130  
                   u2840 0A10                     u2744 1950                     u2921 1EEA  
                   u2681 212C                     u2841 0A0C                     u2745 194A  
                   u2850 0A48                     u2770 19C6                     u2690 25FE  
                   u2931 1CE4                     u2851 0A44                     u2771 19C2  
                   u2691 25FA                     u1980 101E                     u1964 0FCE  
                   u1884 0EEC                     u2860 0CA6                     u2780 19E8  
                   u2764 1998                     u1981 101A                     u1965 0FCA  
                   u1885 0EE8                     u2941 1CF6                     u2861 0CA2  
                   u2781 19E4                     u2765 1992                     u1990 1030  
                   u1974 0FF2                     u2870 1E62                     u2790 249E  
                   u1894 0F0C                     u1991 102C                     u1975 0FEE  
                   u2871 1E5E                     u2791 249A                     u1895 0F08  
                   u2951 1D08                     u2880 1E7C                     u2960 1D3E  
                   u2881 1E78                     u2961 1D3A                     u2890 1E96  
                   u2970 1D6C                     u2891 1E92                     u2971 1D68  
                   u2980 1D9A                     u2981 1D96                     u2990 13D0  
                   u2991 13CC     iniSimbolos@cimaBaixo 001F                     _main 19F2  
                   _keys 0040                     _modo 0046         ??_PulseClockData 0007  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
          ?_i2c_read_bit 0001                     prodh 000FF4                     prodl 000FF3  
                   start 0000          pushNibble@value 000C             ___param_bank 000000  
 __end_of_pulseEnablePin 2798           pwmSet@porcento 0023          __end_of_bcd2dec 27DA  
          ?_escolherModo 0001          __end_of___aldiv 1C16                    ?_main 0001  
        __end_of_adcInit 26CA          __end_of_adcRead 2634          __end_of___awdiv 1CDA  
                  STR_10 062C          __end_of___awmod 1F00          __end_of___lldiv 1FA4  
                  _T0CON 000FD5          ___awdiv@divisor 0015          __end_of___llmod 2162  
                  _T2CON 000FCA          __end_of___lwdiv 21D6          ___awdiv@counter 0017  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84          __end_of_charKey 061B                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96          __end_of_lcdChar 2B3A      ___lmul@multiplicand 0005  
        __end_of_lcdInit 1E50           ??_i2cWriteByte 000A      __end_of_i2cReadByte 25E4  
        __end_of_pinMode 1168                    _valor 0601                    _timer 2046  
                  _state 0045                    _start 0043          __end_of_soWrite 2682  
                  tablat 000FF5          __end_of_ssdInit 253A        __end_of_I2C_delay 2BB2  
        __end_of_pwmInit 2B8C            _i2c_write_bit 2434                    plusw1 000FE3  
                  plusw2 000FDB                    status 000FD8           ??_i2c_read_bit 0007  
           pushNibble@rs 000A     __end_of_digitalWrite 0F1A          __initialization 28C2  
        ?_pulseEnablePin 0001             __end_of_main 1B0A          i2cWriteByte@bit 000B  
       __end_of_i2c_stop 29BA           ??_escolherModo 0015                   ??_main 002D  
          __activetblptr 000002     __size_of_digitalRead 016A                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0         ___llmod@dividend 001A  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   _CCPR2L 000FBB  
       ___awdiv@dividend 0013                   ?_timer 0001           ?_i2c_write_bit 0001  
                 _INTCON 000FF2     __size_of_lcdPosition 003A       __size_of_i2c_start 0046  
              ??_bcd2dec 0023                   ___lmul 22AE                ??___aldiv 0009  
                 ___wmul 2AD4                ??_adcInit 0007                ??_adcRead 0003  
              ??___awdiv 0017                ??___awmod 0029             iniSimbolos@i 0027  
              ??___lldiv 0015                ??___llmod 0022                ??___lwdiv 0005  
                 _kpInit 28F8                   _kpRead 2B9C         __end_of_read_SDA 288A  
                 _atraso 2242         __end_of_read_SCL 28C2                   _buzzer 2318  
                 clear_0 28E8                   _soInit 27DA         ___awdiv@quotient 0019  
        ___awmod@divisor 0027                ??_lcdChar 000E                   _resist 0044  
                 isa$std 000001              _i2cReadByte 2590                ??_lcdInit 000F  
                 _pwmSet 21D6          ___awmod@counter 0029             ?_temperatura 0001  
       __end_of_ssdDigit 24E4             __pdataCOMRAM 004E                ??_pinMode 0005  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_soWrite 0009                ??_ssdInit 0007  
              ??_pwmInit 0011         __end_of_pushByte 2434     __size_of_atualizaLCD 030C  
   __size_of_atualizaSSD 00A2     __size_of_iniSimbolos 00C2               __accesstop 0080  
__end_of__initialization 28EE            ___rparam_used 000001            pushByte@value 000D  
            pinMode@type 0003     __end_of_i2cWriteByte 23DA           __pcstackCOMRAM 0001  
          __end_of_valor 0611            __end_of_timer 20DA         i2cWriteByte@byte 0009  
     __size_of_delayMili 0030       __size_of_clear_SDA 002A       __size_of_clear_SCL 002A  
      __end_of_i2c_start 2756       __size_of_leTeclado 0236     __end_of_i2c_read_bit 295C  
     __size_of_desligado 0352         iniSimbolos@F2412 005E         iniSimbolos@F2414 0056  
       iniSimbolos@F2416 004E       __size_of_lcdString 0056          ??_i2c_write_bit 0007  
                ??_timer 002A         iniSimbolos@baixo 0017     __end_of_escolherModo 2AD4  
              ?_i2c_stop 0001    __size_of_digitalWrite 024E               _dsReadData 26CA  
       dsReadData@result 0011               _delayMicro 2BAE                  ?___lmul 0001  
             _lcdCommand 2B3A                  ?___wmul 001B                  ?_kpInit 0001  
                ?_kpRead 0001                  ?_atraso 0001                  _CCP2CON 000FBA  
         ___lmul@product 0009                  ?_buzzer 0001                  ?_soInit 0001  
             _kpDebounce 18BC                  ?_pwmSet 0001       __size_of_timerInit 0008  
     __size_of_timerWait 0010       __size_of_ssdUpdate 016C     i2cReadByte@send_stop 0008  
           _digitalWrite 0CCC        __end_of_delayMili 298C        __end_of_clear_SDA 2A38  
      __end_of_clear_SCL 2A62                ?_read_SDA 0001                ?_read_SCL 0001  
             ??_i2c_stop 0007         ??_pulseEnablePin 0007        __end_of_leTeclado 15E6  
              _I2C_delay 2BB0        __end_of_desligado 09C0                  __Hparam 0000  
                __Lparam 0000                ?_ssdDigit 002B        __end_of_lcdString 2590  
        kpDebounce@tempo 004C                  _bcd2dec 2798                  ___aldiv 1B0A  
                _adcInit 2682                  _adcRead 25E4                  ___awdiv 1C16  
        __size_of___lmul 006A                  ___awmod 1E50                ?_pushByte 000A  
                ___lldiv 1F00          __size_of___wmul 0026                  ___llmod 20DA  
                ___lwdiv 2162             __psmallconst 0600          __size_of_kpInit 0032  
        __size_of_kpRead 000A                  _charKey 0611          __size_of_atraso 006C  
            ssdDigit@val 002C              ssdDigit@pos 002B                  __pcinit 28C2  
                _lcdChar 2B1C          __size_of_buzzer 0062                  __ramtop 0600  
        __size_of_soInit 003E                  _lcdInit 1D9C                  __ptext0 19F2  
                __ptext1 2B8C                  __ptext2 2AFA                  __ptext3 2BA6  
                __ptext4 2046                  __ptext5 1168                  __ptext6 25E4  
                __ptext7 15E6                  __ptext8 24E4                  __ptext9 2B72  
        __size_of_pwmSet 006C                  _display 004B                  _pinMode 0F1A  
       ___awmod@dividend 0025         ___aldiv@dividend 0001     __size_of_temperatura 0248  
             delayMili@a 0001               delayMili@i 0004                  _soWrite 2634  
                _ssdInit 24E4                  _pwmInit 2B72                  _started 004D  
                atraso@i 0003                  atraso@j 0005                  atraso@k 0007  
                atraso@n 0001     end_of_initialization 28EE            ?_PulseEnClock 0001  
             ??_read_SDA 0007               ??_read_SCL 0007            __Lmediumconst 0000  
  __size_of_i2cWriteByte 0060              ?_dsReadData 000E           digitalRead@pin 0001  
          ?_pwmFrequency 000F           leTeclado@tecla 0066              ?_delayMicro 0001  
             ?_I2C_delay 0001        __end_of_timerInit 2BAE         _atualizaLCD$1316 0026  
        ___lldiv@divisor 0011        __end_of_timerWait 2B9C        __end_of_ssdUpdate 1752  
        ___lldiv@counter 0019               ??_ssdDigit 002C         ___aldiv@quotient 000B  
                postdec1 000FE5              ?_lcdCommand 0001                  postinc0 000FEE  
             ??_pushByte 000C    __size_of_i2c_read_bit 0032  __size_of_PulseClockData 002A  
          ??_digitalRead 0003               _timerReset 2AFA              ?_kpDebounce 0001  
           ?_i2cReadByte 0008          i2c_read_bit@bit 0007               _pushNibble 2A88  
             lcdString@i 0013    __size_of_escolherModo 0026             _i2cWriteByte 237A  
          ??_lcdPosition 0013           ??_PulseEnClock 0007           ??_pwmFrequency 0011  
           _i2c_read_bit 292A           __end_of___lmul 2318           adcRead@ADvalor 0003  
         __end_of___wmul 2AFA            __pidataCOMRAM 2B58           _desligado$1315 002B  
         __end_of_kpInit 292A           __end_of_kpRead 2BA6           __end_of_atraso 22AE  
           _escolherModo 2AAE           __end_of_buzzer 237A           __end_of_soInit 2818  
         __end_of_pwmSet 2242         _temperatura$1317 0027      __size_of_dsReadData 0046  
          ??_atualizaLCD 0026      __size_of_delayMicro 0002      start_initialization 28C2  
          ??_atualizaSSD 002D      __end_of_digitalRead 18BC            ??_iniSimbolos 000F  
              _i2c_start 2710      __size_of_lcdCommand 001E      __size_of_kpDebounce 0136  
        ___llmod@divisor 001E          ___llmod@counter 0022      __end_of_lcdPosition 2852  
            ??_I2C_delay 0001        __size_of_i2c_stop 002E           adcRead@channel 0001  
      kpDebounce@oldRead 003C        kpDebounce@newRead 003E                 ??___lmul 0009  
               ??___wmul 001F                 ??_kpInit 0007                 ??_kpRead 0003  
               ??_atraso 0003                 ??_buzzer 0026              ?_timerReset 0001  
               ??_soInit 0007                 ??_pwmSet 0021        dsReadData@address 000E  
            __pbssCOMRAM 0032              ?_pushNibble 000A               pinMode@pin 0001  
             ?_i2c_start 0001    __end_of_i2c_write_bit 248C      __end_of_atualizaLCD 0CCC  
    __end_of_atualizaSSD 2046      __end_of_iniSimbolos 1D9C          iniSimbolos@cima 000F  
      __size_of_read_SDA 0038        __size_of_read_SCL 0038                _delayMili 295C  
              _clear_SDA 2A0E                _clear_SCL 2A38         ___lwdiv@dividend 0001  
               ?_bcd2dec 0021                _leTeclado 13B0                 ?___aldiv 0001  
               ?_adcInit 0001                 ?_adcRead 0001                 ?___awdiv 0013  
               ?___awmod 0025                _desligado 066E                 ?___lldiv 000D  
      __size_of_ssdDigit 0058                 ?___llmod 001A           _PulseClockData 29E4  
               ?___lwdiv 0001     __end_of_PulseEnClock 29E4                _lcdString 253A  
            _digitalRead 1752                 ?_lcdChar 0001        __size_of_pushByte 005A  
               ?_lcdInit 0001     __end_of_pwmFrequency 2A88              __smallconst 0600  
   __size_of_i2cReadByte 0054                 ?_pinMode 0001                 ?_soWrite 0007  
               ?_ssdInit 0001                 ?_pwmInit 0001         ___lwdiv@quotient 0005  
         __size_of_timer 0094              _lcdPosition 2818         pwmFrequency@freq 000F  
        ___aldiv@divisor 0005          ___aldiv@counter 0009      __size_of_timerReset 0022  
         ___wmul@product 001F             ??_dsReadData 0010             ??_delayMicro 0003  
             ?_delayMili 0001               ?_clear_SDA 0001               ?_clear_SCL 0001  
 __end_of_PulseClockData 2A0E               ?_leTeclado 0001      __size_of_pushNibble 0026  
           ??_lcdCommand 000E                _timerInit 2BA6               ?_desligado 0001  
              _timerWait 2B8C                _ssdUpdate 15E6               ?_lcdString 000F  
           ??_kpDebounce 000A            ??_temperatura 0023        ___wmul@multiplier 001B  
        lcdCommand@value 000E       __end_of_dsReadData 2710                main@tempo 002F  
            _atualizaLCD 09C0       __end_of_delayMicro 2BB0              _atualizaSSD 1FA4  
            ??_i2c_start 0007              _iniSimbolos 1CDA         timerReset@ciclos 0003  
      ___lmul@multiplier 0001                copy_data0 28D6       __end_of_lcdCommand 2B58  
             pushByte@rs 000A             lcdChar@value 000E                 _i2c_stop 298C  
     __end_of_kpDebounce 19F2                 __Hrparam 0000                 __Lrparam 0000  
        lcdPosition@line 000F          ?_PulseClockData 0001               ?_timerInit 0001  
             ?_timerWait 0001               ?_ssdUpdate 0001         __size_of_bcd2dec 0042  
       __size_of___aldiv 010C         __size_of_adcInit 0048         __size_of_adcRead 0050  
       __size_of___awdiv 00C4         __size_of___awmod 00B0  __size_of_pulseEnablePin 0042  
       __size_of___lldiv 00A4         __size_of___llmod 0088         __size_of___lwdiv 0074  
       __size_of_lcdChar 001E         __size_of_lcdInit 00B4           temperatura@ant 0036  
       __size_of_pinMode 024E          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
               __ptext10 2A62                 __ptext11 1B0A                 __ptext20 2242  
               __ptext12 13B0                 __ptext21 22AE                 __ptext13 2B9C  
               __ptext30 066E                 __ptext22 20DA                 __ptext14 18BC  
               __ptext31 253A                 __ptext23 1F00                 __ptext15 09C0  
               __ptext40 295C                 __ptext32 2B1C                 __ptext24 1D9C  
               __ptext16 2818                 __ptext41 26CA                 __ptext33 2B3A  
               __ptext25 2A88                 __ptext17 2318                 __ptext50 288A  
               __ptext42 237A                 __ptext34 23DA                 __ptext26 28F8  
               __ptext18 21D6                 __ptext51 1752                 __ptext43 2710  
               __ptext35 2634                 __ptext27 27DA                 __ptext19 2162  
               __ptext60 1C16                 __ptext52 2A38                 __ptext44 2590  
               __ptext36 29BA                 __ptext28 1CDA                 __ptext61 2682  
               __ptext53 0CCC                 __ptext45 2434                 __ptext37 29E4  
               __ptext29 2AAE                 __ptext62 0F1A                 __ptext54 2BB0  
               __ptext46 298C                 __ptext38 2756                 __ptext55 2798  
               __ptext47 2A0E                 __ptext39 2BAE                 __ptext56 2AD4  
               __ptext48 292A                 __ptext57 1FA4                 __ptext49 2852  
               __ptext58 248C                 __ptext59 1E50      __end_of_temperatura 13B0  
       __size_of_soWrite 004E         __size_of_ssdInit 0056         __size_of_pwmInit 001A  
               _read_SDA 2852                 _read_SCL 288A            __size_of_main 0118  
            ??_delayMili 0003              ??_clear_SDA 0007              ??_clear_SCL 0007  
  __size_of_PulseEnClock 002A                 _ssdDigit 248C              delayMicro@a 0001  
               isa$xinst 000000              ??_leTeclado 002A             soWrite@value 0007  
            ??_desligado 002B    __size_of_pwmFrequency 0026                 _pushByte 23DA  
              pwmSet@val 0024              ??_lcdString 0011             ??_timerReset 0003  
               main@slot 0031          timerReset@tempo 0001             ??_pushNibble 000C  
         lcdPosition@col 0011            ?_digitalWrite 0001             _PulseEnClock 29BA  
      digitalWrite@value 0003         ___lldiv@dividend 000D       __end_of_timerReset 2B1C  
           _pwmFrequency 2A62                 soWrite@i 0009             bcd2dec@value 0021  
            ??_timerInit 0001              ??_timerWait 0001              ??_ssdUpdate 000A  
     __end_of_pushNibble 2AAE             ?_digitalRead 0001              _temperatura 1168  
       ___lldiv@quotient 0015              kpDebounce@i 000D           ??_digitalWrite 0005  
           ___aldiv@sign 000A             ?_lcdPosition 000F          digitalWrite@pin 0001  
